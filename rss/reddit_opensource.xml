<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：开源</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有开源相关的 subreddit（就此而言，我们引用了此处开源的定义 http://en.wikipedia.org/wiki/Open_source）</description>
    <lastBuildDate>Mon, 23 Sep 2024 12:44:24 GMT</lastBuildDate>
    <item>
      <title>适用于我的 Galaxy Tab S 的轻量级操作系统</title>
      <link>https://www.reddit.com/r/opensource/comments/1fngchc/light_os_for_my_galaxy_tab_s/</link>
      <description><![CDATA[嗨，我有一台旧的 Galaxy Tab S，屏幕很漂亮。现在它已经很旧了，而且速度很慢。我想继续用它在本地看电影（YouTube 和 Netflix 会是加分项，但不是必需的）和看漫画。我可以安装什么操作系统来让它使用起来不那么令人沮丧？它现在运行的是 Android 6.0.1。     提交人    /u/Akiroki   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fngchc/light_os_for_my_galaxy_tab_s/</guid>
      <pubDate>Mon, 23 Sep 2024 09:26:06 GMT</pubDate>
    </item>
    <item>
      <title>有谁知道电子钱包的开源后端，比如 cashapp 或 paypal</title>
      <link>https://www.reddit.com/r/opensource/comments/1fnetii/anyone_know_a_open_source_backend_for_ewallet/</link>
      <description><![CDATA[有没有类似开源后端的东西？比如个人之间转账？我看到的那些总是与加密货币有关。只是想要一个处理用户交易的后端服务器（把钱转到另一个账户）。    提交人    /u/personplaygames   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fnetii/anyone_know_a_open_source_backend_for_ewallet/</guid>
      <pubDate>Mon, 23 Sep 2024 07:26:20 GMT</pubDate>
    </item>
    <item>
      <title>作为首次投稿者，hacktober fest 值得参加吗</title>
      <link>https://www.reddit.com/r/opensource/comments/1fn38ut/is_hacktober_fest_worth_participating_as_first/</link>
      <description><![CDATA[就上下文而言，我具备 mern stack 方面的技能，我希望获得实际经验，这既有助于我获得技能，也有助于我在求职面试中增加自己的份量 我参加 hacktober 不是为了获得好处、奖励或衬衫什么的，而是为了我的专业利益， 我有两个疑问，首先，对于 mern stack（js stack）开发人员来说，参加它是否有好处，因为之前我参加过另一个开源程序，但我遇到的大多数质量问题要么来自不同的语言，如 python、java，要么来自 js，然后贡献者之间会发生竞争，而其他问题对于没有经验的开发人员来说很复杂 其次，我知道要完成 hacktober 挑战，我们需要在一个月内至少提出四个 PR，但如果我们的 PR 被排除在外，那么它将不会被考虑，而作为 js 开发人员，随着程序的进展，分配问题会变得越来越困难，因为大多数问题已经在短短开始的头几天    提交人    /u/KingOfSky1   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fn38ut/is_hacktober_fest_worth_participating_as_first/</guid>
      <pubDate>Sun, 22 Sep 2024 20:47:35 GMT</pubDate>
    </item>
    <item>
      <title>EditorToIX 是一个可用于多种代码编辑器的开源扩展：VSCode、CursorAI、Xed、Pluma、Phoenix Code（以前的 Brackets）</title>
      <link>https://www.reddit.com/r/opensource/comments/1fn2tkx/editortoix_is_an_opensource_extension_available/</link>
      <description><![CDATA[EditorToIX 是 VSCode、CursorAI 和 Phoenix Code 的开源扩展。 它也可以作为 Linux Xed、Pluma 编辑器的插件集合使用。 https://www.devtoix.com/en/projects/editortoix 每个代码编辑器的工具列表：  提取文本 | VSCode、CursorAI、Phoenix Code 标头到书签 | VSCode、CursorAI、Phoenix Code 混合器 | VSCode、CursorAI、Phoenix Code 注册 | VSCode、CursorAI、Phoenix Code 替换配方 | VSCode、CursorAI 反向分配 | VSCode、CursorAI、Phoenix Code 更改大小写 | 代码编辑器 在大写字母前添加空格 | VSCode、CursorAI、Phoenix Code 驼峰式命名法 | VSCode、CursorAI、Phoenix Code 大写 | VSCode、CursorAI、Phoenix Code 循环命名法 | VSCode、CursorAI、Xed、Pluma、Phoenix Code 破折号命名法 | VSCode、CursorAI、Phoenix Code 破折号转下划线 | VSCode，CursorAI，Phoenix Code 小写 | Phoenix Code 下划线转破折号 | VSCode，CursorAI，Phoenix Code 大写 | Phoenix Code Html 解码 | Phoenix Code Html 编码 | Phoenix Code Url 解码 | VSCode，CursorAI，Phoenix Code Url 编码 | VSCode，CursorAI，Phoenix Code 双斜杠转单斜杠 | VSCode，CursorAI，Phoenix Code 单斜杠转双斜杠 | VSCode，CursorAI，Phoenix Code Unix 转 Win 斜杠 | VSCode，CursorAI，Phoenix Code Win To Unix Slash | VSCode，CursorAI，Phoenix Code 分行 | VSCode，CursorAI，Phoenix Code 缩进一个空格 | VSCode，CursorAI，Xed，Pluma，Phoenix Code 连接行 | VSCode，CursorAI，Phoenix Code 减少缩进一个空格 | VSCode，CursorAI，Xed，Pluma，Phoenix Code 删除重复的行 | VSCode，CursorAI，Xed，Pluma，Phoenix Code 删除空行 | VSCode、CursorAI、Xed、Pluma、Phoenix 代码 按数字升序排序 | VSCode、CursorAI、Xed、Pluma、Phoenix 代码 按数字降序排序 | VSCode、CursorAI、Xed、Pluma、Phoenix 代码 分割行 | VSCode、CursorAI、Phoenix 代码 修剪尾随 | Xed、Pluma、Phoenix 代码 插入 ISO 日期 | VSCode、CursorAI、Phoenix 代码 插入 ISO 时间日期 | VSCode、CursorAI、Phoenix 代码 插入 UUID | VSCode、CursorAI、Phoenix 代码 在末尾插入文本 | VSCode、CursorAI、Phoenix Code 在开头插入文本 | VSCode、CursorAI、Phoenix Code 双引号转单引号 | Phoenix Code 单引号转双引号 | Phoenix Code 切换引号 | Phoenix Code Tab 键转空格 | Phoenix Code 空格键转 Tab 键 | Phoenix Code     提交人    /u/abentofreire   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fn2tkx/editortoix_is_an_opensource_extension_available/</guid>
      <pubDate>Sun, 22 Sep 2024 20:29:16 GMT</pubDate>
    </item>
    <item>
      <title>召集所有 PostgreSQL 用户！2024 年 PostgreSQL 状态调查将开放至 9 月 30 日 - 请花点时间分享您的经验，无论您是刚开始使用它还是已经使用了几十年！</title>
      <link>https://www.reddit.com/r/opensource/comments/1fn02tg/calling_all_postgresql_users_the_2024_state_of/</link>
      <description><![CDATA[  由    /u/xenophenes  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fn02tg/calling_all_postgresql_users_the_2024_state_of/</guid>
      <pubDate>Sun, 22 Sep 2024 18:31:58 GMT</pubDate>
    </item>
    <item>
      <title>一些初创公司正在采用“公平来源”来避免开源许可的陷阱 | TechCrunch</title>
      <link>https://www.reddit.com/r/opensource/comments/1fmxlio/some_startups_are_going_fair_source_to_avoid_the/</link>
      <description><![CDATA[        由    /u/LinearArray   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fmxlio/some_startups_are_going_fair_source_to_avoid_the/</guid>
      <pubDate>Sun, 22 Sep 2024 16:42:38 GMT</pubDate>
    </item>
    <item>
      <title>我和玩《原神》的朋友开发了一款免费的开源桌面应用程序，允许玩家管理他们的自定义装备——欢迎反馈！</title>
      <link>https://www.reddit.com/r/opensource/comments/1fmxclf/my_friends_and_i_playing_genshin_impact_developed/</link>
      <description><![CDATA[你好 r/opensource！ 今天我想介绍一个免费的开源桌面应用程序，它允许旅行者管理可玩角色的自定义文物和武器装备，并方便旅行者根据他们的装备使用对游戏玩法如何运作的语义理解来计算相关统计数据。旅行者可以创建由角色、文物和武器组成的定制装备，并与其他旅行者分享。支持的文件格式包括人类可读的 Yet Another Markup Language (YAML) 序列化格式和基于 JSON 的 Genshin Open Object Definition (GOOD) 序列化格式。 自 Genshin Impact v4.0 发布以来，Genshin Impact 一直在推出生活质量更新。然而，我们目前还没有的一个功能是能够随时切换一组文物，而不必逐个切换。这让我想用记事本把事情记下来，确保我能够返回从原始角色那里获得的文物，这说实话很不方便。通过此项目，我们希望确保旅行者能够切换装备并从外部了解统计数据，而不会干扰现有的游戏内构建，只需扫描游戏内屏幕截图即可。 屏幕截图  Dash - GNU/Linux 发行版上的 Nahida 结果 - GNU/Linux 发行版上的 Nahida Dash - Microsoft 上的 Venti Windows 结果 - Microsoft Windows 上的 Venti  资源  Genshin Impact 的装备 - GitHub Genshin Impact 的装备 - PyPI Genshin Impact v0.1.0 的装备  适用于 GNU/Linux 发行版的可执行文件 适用于 Microsoft Windows 的可执行文件   呼吁 该项目目前处于测试阶段，我们致力于通过每次发布来提供高质量的体验。如果您对该项目的发展方向感到兴奋并希望为此做出贡献，我们将非常感激您通过加注星标项目存储库来帮助我们提高项目知名度，通过报告遇到的错误来解决问题，通过提出预期的功能来选择方向，通过记录项目存储库来增强可用性，通过打开拉取请求来改进代码库，最后，通过支持开发成员来坚持我们的努力。 免责声明 本项目中使用的 Genshin Impact 资产的所有权利均归 miHoYo Ltd. 和 Cognosphere Pte., Ltd. 所有。 其他财产属于其各自所有者。    提交人    /u/t0xic0der   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fmxclf/my_friends_and_i_playing_genshin_impact_developed/</guid>
      <pubDate>Sun, 22 Sep 2024 16:31:47 GMT</pubDate>
    </item>
    <item>
      <title>我可以使用什么机制将 GPLv2 许可的代码合并到我的商业项目中，而不必发布我的所有源代码？</title>
      <link>https://www.reddit.com/r/opensource/comments/1fmx87m/what_mechanisms_can_i_use_to_incorporate/</link>
      <description><![CDATA[这是假设我将分发软件并且有人要求提供源代码。我知道有动态链接或创建某种包装器之类的东西，并且只提供该代码，但我想知道具体细节。如果我们把道德放在一边，我将不胜感激。我只想知道如何从开源软件中获利而不放弃我的辛勤工作。提前致谢。    提交人    /u/MyManSquadW   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fmx87m/what_mechanisms_can_i_use_to_incorporate/</guid>
      <pubDate>Sun, 22 Sep 2024 16:26:29 GMT</pubDate>
    </item>
    <item>
      <title>设计一个对开源友好的微服务库；处理垃圾抽屉代码</title>
      <link>https://www.reddit.com/r/opensource/comments/1fmwrnl/designing_a_micro_service_library_to_be_friendly/</link>
      <description><![CDATA[背景： 我有几个个人项目，由于质量低下，大多未发布。我在摆弄一些我感兴趣的库时走了很多捷径。我并不真的想努力制作一些值得分享的东西。 我确实发布了一个项目，其中的 README 基本上是“我弄清楚了如何使用某些硬件的专有 API，因此如果您拥有该硬件并想用它创建自己的项目，您可能会有兴趣复制我的一些代码”。我选择了 Unlicense，因为我不在乎个人使用的功劳，而且任何人在生产中使用其中任何一个而不进行重大清理都是愚蠢的。 我还发布了一些 Gists，它们创建了一些使用流行库的工作示例。在这些情况下，我找不到任何好的例子，花了很多时间去理解 api 规范，所以我想一个例子可能会帮助下一个人更快地理解它。我对库存储库“examples”目录做了一个 Gist 而不是 PR，因为我不想再花精力去清理它或来回审核。 展望未来，我想养成使用良好软件设计实践的习惯，创建我可以引以为豪的代码，并以更有用的方式做出贡献。我现在正借此机会学习一门新的编程语言，我想从一开始就养成良好的习惯。 问题： 我的大多数项目都有很多“垃圾抽屉”代码与更普遍有用的东西混在一起。例如，我有一个 aws lambda 函数来管理电子邮件列表订阅/取消订阅请求。它将电子邮件存储在数据库中，并带有一些注释（未确认、已订阅、取消订阅、列入黑名单）、用户加入日期等；它会发送确认电子邮件；并将通过/失败信息报告回订阅网页。一切都使用可以存储在本地或云存储中的模板。我认为这是一些普遍有用的功能的示例。除此之外，我还有一个错误报告器（当断言失败时向我发送电子邮件）；一个速率限制器（确保此功能限制为我的电子邮件配额的一小部分，以保证还有一些剩余用于其他项目）；以及一些允许我在各种提供商之间切换的代码（通过 SES 与 gmail 发送电子邮件；使用 dynamoDB 与 PostgreSQL；使用 aws lambda 运行时与 apache2 后面的独立 http）。 以此为例，我不确定我应该如何编写它才能使其更加开源友好。我最初的直觉是将所有这些内容移出核心库，而是将其放在“测试”或“示例”目录中。当您实例化 list_manager 类时，它将具有一个默认错误报告器，该报告器会打印到 stderr 和一个无限制的速率限制器。然后会有一些 set_rate_limiter(function_pointer, void*) 和 set_error_handler(function_pointer, void*) 方法，允许用户放入他们想要的任何功能（如果有的话）。 对于提供程序切换器组件，除了可能只是与 stdin/stdout 接口的“测试模式”之外，实际上没有一个简单的/默认的选项。要使库完全有用，它至少需要其中一个提供程序。然后就是在我的其他微服务库之间共享提供程序抽象和实现的问题。为“u/loaengineer0 的简单数据库提供程序”建立一个单独的仓库，然后处理一堆微小的依赖项，这似乎很愚蠢。我也不喜欢在仓库之间复制粘贴这些东西，即使这些只是 50-100 行的垫片。 在我的工作中，我们有一个“通用”模块的 mono 仓库，这是一个垃圾场，显然对开源不友好。我没有任何经验可以帮助我弄清楚处理这种事情的“正确”方法是什么。这种事情通常是如何解决的？ 感谢阅读！    提交人    /u/loaengineer0   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fmwrnl/designing_a_micro_service_library_to_be_friendly/</guid>
      <pubDate>Sun, 22 Sep 2024 16:05:51 GMT</pubDate>
    </item>
    <item>
      <title>开源 React 应用构建器 - Neoapps.ai</title>
      <link>https://www.reddit.com/r/opensource/comments/1fmw7se/open_source_react_app_builder_neoappsai/</link>
      <description><![CDATA[      https://github.com/Neopric-Inc/NeoApps.AI-CodeGenerator    由   提交  /u/NeoApps_AI   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fmw7se/open_source_react_app_builder_neoappsai/</guid>
      <pubDate>Sun, 22 Sep 2024 15:41:38 GMT</pubDate>
    </item>
    <item>
      <title>Tinymind - 在几秒钟内将 GitHub 变成您的博客和思想中心。</title>
      <link>https://www.reddit.com/r/opensource/comments/1fmp8ak/tinymind_turn_github_into_your_blog_thoughts_hub/</link>
      <description><![CDATA[嗨，各位开发者！我很高兴与大家分享我一直在做的一个项目，叫做 Tinymind。这是一个开源工具，只需单击一下，您就可以将您的 GitHub 变成博客和备忘录存储空间。这就是我认为它很酷的原因：  🔑 一键登录 GitHub 📝 使用 Markdown 支持在 Web UI 中编辑/删除博客和想法 🔄 每次修改都会创建一个 GitHub 提交 🖥️ 无需服务器 - 你的笔记始终存在于 GitHub 中并具有完整的历史记录 📱 PWA 支持类似原生应用的体验  工作原理：  使用你的 Github 帐户登录并授权“公共”权限repo 可供读写。 我们将在您的 Github 帐户下创建一个名为“tinymind-blog”的存储库。 在 Tinymind 上创建的任何新想法或博客文章都将自动提交到此存储库。 由于不涉及服务器且系统是开源的，因此请放心，您的数据是安全的，并将长期保存。  我使用 Next.js、React、TypeScript、NextAuth.js 和 Tailwind CSS 构建了它。 这是我们存储库的链接：[Tinymind](https://github.com/mazzzystar/tinymind) 我很乐意听到您的想法或您是否愿意做出贡献。一直在寻找反馈和想法来使其变得更好！ 附言它是 MIT 许可的，所以请随意修改它😉    提交人    /u/RingoCatKeeper   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fmp8ak/tinymind_turn_github_into_your_blog_thoughts_hub/</guid>
      <pubDate>Sun, 22 Sep 2024 09:23:13 GMT</pubDate>
    </item>
    <item>
      <title>我编写了一个 Python 脚本，使用 AI 来组织文件，100% 在你的设备上运行</title>
      <link>https://www.reddit.com/r/opensource/comments/1fmglr7/i_built_a_python_script_uses_ai_to_organize_files/</link>
      <description><![CDATA[嗨 r/opensource！ GitHub 上的项目链接： (https://github.com/QiuYannnn/Local-File-Organizer) 我使用 Nexa SDK (https://github.com/NexaAI/nexa-sdk) 在不同系统上本地运行模型。 我想要一个真正了解我的文件内容的文件管理工具。之前的项目，例如 LlamaFS (https://github.com/iyaja/llama-fs) 并非 100% 本地化，需要 AI API。因此，我创建了一个 Python 脚本，利用 AI 来组织本地文件，完全在您的设备上运行，以保证完全的隐私。它使用 Google Gemma2 2B 和 llava-v1.6-vicuna-7b 模型进行处理。 注意：您不需要任何 API 密钥和互联网连接来运行此项目，它完全在您的设备上运行模型。 它的作用：   扫描指定的输入目录中的文件 了解文件的内容（文本、图像等）以生成相关的描述、文件夹名称和文件名 根据生成的元数据将文件组织到新的目录结构中  支持的文件类型：  图像： .png、.jpg、.jpeg、.gif、.bmp 文本文件： .txt, .docx PDF： .pdf  支持的系统： macOS、Linux、Windows 它是完全开源的！ 有关演示和安装指南，这里再次提供项目链接： (https://github.com/QiuYannnn/Local-File-Organizer) 您对这个项目有何看法？您希望在未来版本中看到什么吗？ 谢谢！    提交人    /u/unseenmarscai   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fmglr7/i_built_a_python_script_uses_ai_to_organize_files/</guid>
      <pubDate>Sun, 22 Sep 2024 00:08:39 GMT</pubDate>
    </item>
    <item>
      <title>LLM 文档拼写和语法检查器</title>
      <link>https://www.reddit.com/r/opensource/comments/1fmb9qa/llm_spelling_and_grammar_checker_for_docs/</link>
      <description><![CDATA[嘿 r/opensource-- Spellcaster 是一个基于 Python 的 CLI 工具，用于在文档文件上运行拼写和语法检查。 LLM 是出色的校对员，虽然存在基于规则的拼写检查器，但我们注意到没有一个好的 CLI 工具可以利用 AI 代理。所以我们建了一个！Spellcaster 在旧金山的 Mintlify AI DevTools 黑客马拉松上一个周末诞生，并在那里获得了最佳演示奖。 我们对几个大型开源项目运行了 Spellcaster，并在他们的文档中发现了数百个可读性问题。一些流行的：  Cursor：116 个错误 Mintlify 245 Vercel：1053（我最喜欢的是 Vercel 在他们的一个页面中拼写错误了“Lorem ipsum”）。  Spellcaster 使用 LiteLLM 轻松进行模型交换，使用 AgentOps 进行成本和错误跟踪。 我一直在用它来修复我自己的文档中的大量错误。这似乎是一个被低估的问题，很想听听大家对此的想法和反馈。 https://github.com/AgentOps-AI/Spellcaster    提交人    /u/Reibmachine   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fmb9qa/llm_spelling_and_grammar_checker_for_docs/</guid>
      <pubDate>Sat, 21 Sep 2024 19:49:01 GMT</pubDate>
    </item>
    <item>
      <title>fastTravelCLI——更好的 CD 体验</title>
      <link>https://www.reddit.com/r/opensource/comments/1fmb4ik/fasttravelcli_a_better_cd_experience/</link>
      <description><![CDATA[前段时间，我发现自己在工作目录之间来回跳转时很烦。我永远记不住我的 neovim 配置的确切路径（当时在 Windows 上），而且我觉得输入起来很烦人。我只想将它分配给一个键并使用 cd nvim。我尝试了一些其他工具，如 fzf，虽然有用，但在工作目录之间跳转时，它并不是我真正想要的体验。 所以我制作了 fastTravelCLI，这是一个 cli 工具，可让您将目录分配给键，然后使用简单的命令（如 ft key）进行 CD。我最初只是为自己制作的，但随着我对此了解得越来越多，我想知道其他人是否会发现它很有用。 fastTravelCLI 可以完全替代 CD 命令，因为它模仿了它的功能，还可以让您轻松访问会话历史记录堆栈。除了访问已保存的密钥之外，您还可以访问这些密钥的子目录。我还计划在未来实现几个附加功能。 在此处查看 repo Zoxide 是我开始制作它之后发现的一个工具。它具有更多的集成和非常好的功能，但如果您仔细查看问题，其解决方案的复杂性似乎导致了一些小问题。这是一个很酷的工具，我可能会尝试将其集成到我的解决方案中，例如自动密钥生成选项和密钥驱逐策略。    提交人    /u/dadVibez121   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fmb4ik/fasttravelcli_a_better_cd_experience/</guid>
      <pubDate>Sat, 21 Sep 2024 19:42:15 GMT</pubDate>
    </item>
    <item>
      <title>自托管搜索引擎</title>
      <link>https://www.reddit.com/r/opensource/comments/1fmaxm7/self_hosted_search_engine/</link>
      <description><![CDATA[您好。我在多个文件夹中有很多 txt 文件和 SQL 脚本。我希望能够搜索这些文件内的文本、标签和代码，然后显示结果。我试过 nextcloud，但搜索速度太慢了。有什么建议吗？非常感谢 🤗    提交人    /u/amcgarcia   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fmaxm7/self_hosted_search_engine/</guid>
      <pubDate>Sat, 21 Sep 2024 19:33:24 GMT</pubDate>
    </item>
    </channel>
</rss>