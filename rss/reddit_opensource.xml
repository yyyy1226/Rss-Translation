<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：Opensource</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有与开源相关的所有内容的子reddit（在此上下文中，我们在此处删除开源的定义http://en.wikipedia.org/wiki/open_source）</description>
    <lastBuildDate>Sun, 23 Feb 2025 01:53:20 GMT</lastBuildDate>
    <item>
      <title>最佳开源电子邮件客户端？</title>
      <link>https://www.reddit.com/r/opensource/comments/1ivvrx1/best_open_source_email_client/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  最佳开源电子邮件客户端是什么？我正在寻找的某些功能：   免费   支持多个电子邮件地址（gmail，我自己的域等， ）   清洁，现代UI。   谢谢！  &lt;！ sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1ivvrx1/best_open_source_email_client/”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ivvrx1/best_open_source_email_client/</guid>
      <pubDate>Sat, 22 Feb 2025 23:09:17 GMT</pubDate>
    </item>
    <item>
      <title>有任何初学者友好的项目要贡献吗？</title>
      <link>https://www.reddit.com/r/opensource/comments/1ivu6ff/any_beginner_friendly_projects_to_contribute_to/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我是React开发人员，我与JS和TS一起工作，我可以做些什么好项目？ （我的第一次）  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/trashinitial8529   href =“ https://www.reddit.com/r/opensource/comments/1ivu6ff/any_beginner_friendly_projects_to_to_contribute_to/”&gt; [link]       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ivu6ff/any_beginner_friendly_projects_to_contribute_to/</guid>
      <pubDate>Sat, 22 Feb 2025 21:55:32 GMT</pubDate>
    </item>
    <item>
      <title>Shijima -QT-用于在Windows，MacOS和Linux上运行Shimeji桌面宠物的开源应用程序。 Shimeji-EE的轻巧，跨平台且易于使用的替代品。</title>
      <link>https://www.reddit.com/r/opensource/comments/1ivtjfb/shijimaqt_open_source_app_for_running_shimeji/</link>
      <description><![CDATA[      ＆＃32;提交由＆＃32; /u/u/pxomr     [link]  ＆＃32;   [注释] /table&gt;]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ivtjfb/shijimaqt_open_source_app_for_running_shimeji/</guid>
      <pubDate>Sat, 22 Feb 2025 21:26:27 GMT</pubDate>
    </item>
    <item>
      <title>DB29应用 - 创建其他OSS WebApp</title>
      <link>https://www.reddit.com/r/opensource/comments/1ivt2ua/db29_app_create_other_oss_webapp/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好， 我创建一个OpenSource Web应用程序来管理其他Web应用程序 https://db29.ovh/ （ https://github.com/db29-oss/db29-app ）。 您可以在这里查看它的工作原理 https://www.youtube.com/watch?v=nr7gx93maza （1M 30S）。 &gt;使用您自己的域，并且支持您自己的服务器。 如果您有疑问或请求，请让我知道！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/kocoten1992     [link]   ＆＃32;   [commist]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ivt2ua/db29_app_create_other_oss_webapp/</guid>
      <pubDate>Sat, 22 Feb 2025 21:05:59 GMT</pubDate>
    </item>
    <item>
      <title>构建了一个使用Piper TTS引擎的开源自托管TTS API，并允许用户输入长输入，在音频中添加暂停并直接将文件写入AWS S3存储桶。在CPU和GPU上快速运行。</title>
      <link>https://www.reddit.com/r/opensource/comments/1ivqv35/built_an_opensource_selfhosted_tts_api_that/</link>
      <description><![CDATA[      ＆＃32;提交由＆＃32; /u/u/ecstatic_papaya_1700      [link]  ＆＃32;   [注释] /table&gt;]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ivqv35/built_an_opensource_selfhosted_tts_api_that/</guid>
      <pubDate>Sat, 22 Feb 2025 19:28:47 GMT</pubDate>
    </item>
    <item>
      <title>Pykomodo-平行代码块</title>
      <link>https://www.reddit.com/r/opensource/comments/1ivlsho/pykomodo_a_parallel_code_chunker/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   我的项目做什么&lt; /strong&gt;  pykomodo是一种基于Python的工具，可与大型代码库的代码块并行化。它支持传统的基于线的分裂和基于的基于的“语义”   .py  files的方法 - 因此，顶级函数和类都不会在多个多个范围内分开块。当我不久前做Pykomodo时，此功能仍在进行中。   它解决了什么问题？ 在处理庞大的存储库时（尤其是如果您将它们喂入大型语言模型或其他分析），这对块很有帮助文件成更易于管理的作品。  与其他可用块的比较矮人专注于某些功能    github和pypi        github ：[&lt; https://github.com/duriantaco/pykomodo]（＃）       pypi ： https://pypi.org/project/project/pykomodo/       &gt;   pip安装pykomodo == 0.0.4     目标受众    Python开发人员需要为LLM输入，存档..等 想要保留Python文件中的功能/类块的项目。  .py 文件（至少目前）：大单个功能保持不舒适。    dry-run 模式：请参阅哪些文件将被构成块在 螺纹块：加快大量存储库的扫描和文件读数。  增强的块（可选）可以消除冗余或计算相关性得分llm用法。  随时检查一下，实验并发送反馈或拉动请求！如果您觉得有用，请给我一颗星星，如果您想拿下来，请在此处给我留言。感谢您抽出宝贵的时间阅读！   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1ivlsho/pykomodo_a_a_parallel_code_code_chunker/”&gt; [link]    32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ivlsho/pykomodo_a_parallel_code_chunker/</guid>
      <pubDate>Sat, 22 Feb 2025 15:55:38 GMT</pubDate>
    </item>
    <item>
      <title>有哪些良好的开源工具可以汇总信息？</title>
      <link>https://www.reddit.com/r/opensource/comments/1ivit7d/what_are_some_good_open_source_tools_to_summarize/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我想探索开源工具，这些工具总结了不同类型的信息，例如从文本中创建单词云，来自视频的缩略图等。您知道吗？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/soundofe     [link]  &lt;a href =“ https://www.reddit.com/r/opensource/comments/comments/1ivit7d/what_are_are_some_good_good_open_source_tools_tools_to_summarize/]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ivit7d/what_are_some_good_open_source_tools_to_summarize/</guid>
      <pubDate>Sat, 22 Feb 2025 13:32:50 GMT</pubDate>
    </item>
    <item>
      <title>Peazip 10.3.0发布！</title>
      <link>https://www.reddit.com/r/opensource/comments/1ivfnny/peazip_1030_released/</link>
      <description><![CDATA[       ＆＃32;提交由＆＃32; /u/u/peazip     [link]  ＆＃32;   [注释]       &lt; /table&gt;]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ivfnny/peazip_1030_released/</guid>
      <pubDate>Sat, 22 Feb 2025 10:12:03 GMT</pubDate>
    </item>
    <item>
      <title>N8N但是开源？</title>
      <link>https://www.reddit.com/r/opensource/comments/1iv9764/n8n_but_open_source/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好。  我想知道是否有N8N，相关性或制造的东西是真正的开源（最好是MIT许可证，最好或免费用于商业用途）。优选使用兰班链或下面一些类似的既定框架。  如今，在这个令人费解的平台中很难找到一些东西。  我非常感谢任何想法/提示！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/beanjaminbuxbaum     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1iv9764/n8n_but_open_source/</guid>
      <pubDate>Sat, 22 Feb 2025 03:13:47 GMT</pubDate>
    </item>
    <item>
      <title>我在C中建造了一个正则表达式解析器，并开源了！</title>
      <link>https://www.reddit.com/r/opensource/comments/1iv5cl9/i_built_a_regex_parser_in_c_and_opensourced_it/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  自从我们谈论大学班上的解析和正则表达以来，我对这个概念着迷。我也是低级编程的粉丝，主要是C，因为我喜欢挑战自己，以使自己的代码尽可能快，高效。所以，我坐下来思考。很长一段时间。 挑战 正则表达式 - ＆gt; DFA  任何熟悉正则表达式的人都知道，要实际利用它们，就需要构建一个所谓的确定性有限自动机。任何保持状态并使用输入来确定下一个状态的事物都可以以这种方式调用。最流行的用法是在那些情况下，您想将字符串与正则表达式或简单的单词匹配。如果机器登陆的最后一个状态是所谓的“最终状态”，则意味着该单词与输入匹配。 自动构建状态机机器本身已经是一个挑战。正则表达式可能会被肿，也需要简化。为了实现这一目标，我找到了一个视频，讨论了正则表达式的推导。正是我想要的。输入分解为单个字符，正则表达式的树被递归地得出，直到整个表达式为空或null（匹配）。 为此，我首先实现了正则表达式树。挑战之一是表达式的优化，特别是被简化为一个的或表达式，因为“ a或a”匹配与“ a”相同的表达式。我可以让程序下降到树上比较分支，但这将非常激烈，因此我为每个节点提供了一个唯一的哈希，该节点从底部到顶部都构建。 以构建从树上的DFA（直接匹配的树是性能的噩梦），整个字母（在我的情况下，可打印的ASCII）与这棵树匹配，并将子树存储在一个简单的hashmap中。如果树节点为null，则各个状态现在是最终的。 字符串 - ＆gt;正则表达式 这是项目的简单部分。为了甚至建造一棵树，必须对字符串解析（和令牌化）。那就是事情变得非常松脆的时候。为了从某个地方开始，我构建了一个简单的数据架构，其行为像磁带一样，可以一个一个人寻求，但也能够将字符插入lookahead的目的。然后，我构建了一个用于扫描和分开结构的输入的循环外，什么都没有使用。 下一步是找到一个相对简单的解析器算法，a，我找到了一个称为＆quot＆quot ; pratt-parser;或“递归血统解析器”。我在这里不会详细介绍太多细节，但是从本质上讲，解析器使用循环和不同令牌的先例来递归下降或添加子树。现在，这两种策略允许从字符串转换为正则表达树，再到DFA。 输入 - ＆gt;匹配 最后一个方面相当简单，现在程序只需要迭代输入并将其与给定的DFA匹配一次或连续。 您可以在此处找到该项目： https://github.com/ofcdune/regex-parser    我感谢任何类型的反馈/批评。我必须承认，我对OSS有点陌生，并且独自完成了所有这些工作，因此在程序的某些地方可能没有完善的外观。这些功能应至少记录在一个句子中，包括输入输出说明。  p.s。我试图尽可能靠近PCRE，但是在某个时候，我已经停下来了，因为我已经觉得这对一个人来说已经足够了。我从来没有计划过它可以被漫步地使用，但是也许这篇文章会激励我实际获取（有点尘土飞扬的代码并继续使用更多。  &lt;！ -  sc_on-&gt;＆＃ 32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1iv5cl9/i_built_a_regex_regex_parser_in_in_in_in_c_and_opensourcerced_it/”&gt; [link]  &lt;a href =“ https://www.reddit.com/r/opensource/comments/1iv5cl9/i_built_a_regex_regex_carser_in_in_in_c_and_opensourced_it/]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1iv5cl9/i_built_a_regex_parser_in_c_and_opensourced_it/</guid>
      <pubDate>Fri, 21 Feb 2025 23:44:10 GMT</pubDate>
    </item>
    <item>
      <title>刚刚发布了我的AI驱动VS代码扩展名的V1  - 寻找反馈！</title>
      <link>https://www.reddit.com/r/opensource/comments/1iuz8jk/just_released_v1_of_my_aipowered_vs_code/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好！ 🎉 这是最基本的实现，并且存在巨大的填充范围，但是我想将这个项目带到远处，并想要一些反馈。它就像GitHub Copilot一样，但完全离线，所以现在您可以完全控制自己的代码和100％的隐私。 我刚刚上传了我的VS代码扩展名的 v1 ， localpilotai ，它带来 AI驱动的自动完成直接使用 ollama和qwen2.5-coder   - 不需要任何外部API调用！ 🔹它的作用：  inline ai-inline ai-pary power code autostion ✅工作完全在本地&lt; /strong&gt;（无api呼叫，完全隐私）✅支持 python＆amp; javascript  ✅使用 qwen2.5编码：7b 建议代码的下一条逻辑线   如何工作：   扩展名捕获您的当前代码上下文  将其发送到 ollama的本地运行模型   生成单行 ai驱动的自动完成  没有流媒ul&gt;  尝试一下＆amp;让我知道您的想法！ 我希望反馈性能，准确性和您希望在V2中看到的功能。   🔗 遇到任何问题或有功能请求！ 🚀  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/matrix_030     [link]    [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1iuz8jk/just_released_v1_of_my_aipowered_vs_code/</guid>
      <pubDate>Fri, 21 Feb 2025 19:22:53 GMT</pubDate>
    </item>
    <item>
      <title>福斯YouTube替代/模仿</title>
      <link>https://www.reddit.com/r/opensource/comments/1iuxphu/foss_youtube_alternativeparody/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我有域： ourtube.lol.lol   ourtube.pro 和 numberonecommunismlover.cloud 现在大约半年，我什么都没做，我想我想成为一个开源的团队工作，所以，是的，是的，是的，如果人们有兴趣，我将继续这个项目，如果您想和我一起工作，请在 u/7nk4n 在Discord上。 &#39;是的，一个有趣的项目和YouTube的中指混合在一起。因为显然，YouTube喜欢在孩子们的算法中将[已编辑]放入其算法中，禁止[编辑]的内容在创作者的年龄较大的观众方面，并且喜欢向人们提供Softcore- [删除]广告。我认为这很糟糕，我会尽量不要做一个新的“ Yewtube Altewnatiwe”。因为没有什么能与之竞争，但是可以抗议的是，如果有足够的人开始谈论“ YouTube的少数用户”中的一些用户正在停止使用它，并开始使用其他一些卑鄙的网站。然后，YouTube很有可能受到非常微观的热门影响...但是，是的，这主要是一个有趣的项目 ＃2 2这将如何产生钱？好吧，我打算做两件事：选择性广告和捐赠（ik Crazy），这意味着人们可以捐款并观看广告。现在，我们如何让人们观看广告？但是他们在哪里可以呢？不只是为此感到难过吗？好吧...（生病的）选择（ion）选择！他们可以单击视频下的一个框并获得团队验证的广告。他们最终不必使用Ublock Origin来观​​看烹饪视频。创作者在他们的视频是火上赚了一笔钱。  ＃3您将如何托管它？  github，就是这样。 希望你们有兴趣  &lt;！ -SC_ON-&gt;＆＃32;提交由＆＃32; /u/u/tn21_12     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1iuxphu/foss_youtube_alternativeparody/</guid>
      <pubDate>Fri, 21 Feb 2025 18:20:26 GMT</pubDate>
    </item>
    <item>
      <title>收件箱零用清晰的垃圾邮件变得轻松</title>
      <link>https://www.reddit.com/r/opensource/comments/1iuwvoi/inbox_zero_made_easy_with_clear_my_spam/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿！想要共享清除我一直在构建的网络应用程序的垃圾邮件，旨在将您的Gmail收件箱整理成。它是移动 +桌面友好的，非常关注简单性和可用性。我得到了朋友和家人的惊人评论，现在正在众包Reddit的更多反馈！  最好的部分 - 您的电子邮件数据都没有存储，并且代码显然是开源，所以您您的数据可以保持在您的控制之下。 我真的很感谢在Producthunt的正式发布之前的任何反馈 - 如果您愿意的话可以考虑购买，请给我开个DM和我会给您发送促销代码！谢谢🙇‍♂️   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/dehnag     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1iuwvoi/inbox_zero_made_easy_with_clear_my_spam/</guid>
      <pubDate>Fri, 21 Feb 2025 17:47:00 GMT</pubDate>
    </item>
    <item>
      <title>开源？</title>
      <link>https://www.reddit.com/r/opensource/comments/1iuup4q/whither_open_source/</link>
      <description><![CDATA[       ＆＃32;提交由＆＃32; /u/u/undecation-swan-714      link]  ＆＃32;   [注释]        &lt; /table&gt;]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1iuup4q/whither_open_source/</guid>
      <pubDate>Fri, 21 Feb 2025 16:18:28 GMT</pubDate>
    </item>
    <item>
      <title>🚀刚刚发布了我的Windows Taskbar网络速度监视器的V1.0！ [开源]</title>
      <link>https://www.reddit.com/r/opensource/comments/1iusbse/just_released_v10_of_my_windows_taskbar_network/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好！ 👋 放弃找到我想要的简单工具后，我决定自己制作。这是我有史以来的第一个冒险，它比我想像的如此简单的工具要多得多。 我想要的只是一个简单，轻巧，实时的网络速度监视器，它显示您的上传＆amp ;直接在Windows 11任务栏上下载速度，就在时钟旁边 - 就像本机功能一样！ 💡为什么我制作了这一点：Windows在任务栏中不显示网络速度，并且现有工具也可以：  具有笨拙的UI或托盘图标。 被不必要的功能肿了。 不要与Windows的本机外观融为一体。 所以，我建立了自己的极简主义解决方案！  ✨功能： ✅显示实时上传＆amp;在任务栏中下载速度。 （如果使您发疯的话，您可以将其设置为更少的更新）。尺寸。 ✅轻量级＆amp;在后台运行。 ✅右键单击即可退出（无需任务管理器）。 ✅开源＆amp;无膨胀软件！&lt; /p&gt;  📥下载＆amp;安装： 1️⃣下载v1.0.1👉 https://github.com/erez-c137/netspeedtray 2️⃣您可以选择自己拥有的安装，便携式或编译。 3️⃣可以在启动选项上自动启动。&lt; /p&gt;  ⚡反馈＆amp;未来更新 我很想听听您的反馈！让我知道：🔹您有特征建议。 🔹您遇到任何问题。 🔹您想为项目贡献自己的代码。 这只是v1.0，我计划根据一些我已经拥有的想法来改进它。您的建议。 🙂  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/eerez-c137     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1iusbse/just_released_v10_of_my_windows_taskbar_network/</guid>
      <pubDate>Fri, 21 Feb 2025 14:36:10 GMT</pubDate>
    </item>
    </channel>
</rss>