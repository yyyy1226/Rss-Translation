<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：开源</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有开源相关的 subreddit（就此而言，我们引用了此处开源的定义 http://en.wikipedia.org/wiki/Open_source）</description>
    <lastBuildDate>Thu, 06 Jun 2024 09:23:06 GMT</lastBuildDate>
    <item>
      <title>Modbus 表？一站式即可找到！</title>
      <link>https://www.reddit.com/r/opensource/comments/1d9000j/modbus_tables_find_them_all_in_one_place/</link>
      <description><![CDATA[大家好！ 我创建了一个存储库，Modbus 数据库，它是来自不同制造商的Modbus 表集合。目的是简化需要 Modbus 通信的项目。 数据库按制造商和型号组织，每个表（JSON 格式）存储在单独的子目录中。 该项目采用MIT 许可证。欢迎并感谢贡献！    提交人    /u/jabrillo15   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1d9000j/modbus_tables_find_them_all_in_one_place/</guid>
      <pubDate>Wed, 05 Jun 2024 20:28:42 GMT</pubDate>
    </item>
    <item>
      <title>硕士论文：TextSight - 利用人工智能驱动的洞察力可视化文本连接 - 第 2 部分</title>
      <link>https://www.reddit.com/r/opensource/comments/1d8wa9r/master_thesis_textsight_visualising_textual/</link>
      <description><![CDATA[  由    /u/Yametsu  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1d8wa9r/master_thesis_textsight_visualising_textual/</guid>
      <pubDate>Wed, 05 Jun 2024 17:56:13 GMT</pubDate>
    </item>
    <item>
      <title>未记录但活跃的框架/脚本/工具的技术文档</title>
      <link>https://www.reddit.com/r/opensource/comments/1d8w1c4/technical_documentation_for/</link>
      <description><![CDATA[交叉发布此内容，希望没问题。  我是一名崭露头角的技术作家，需要大量练习和实际经验。我创建了 techdocs.guide 只是为了开始记录我喜欢的东西，但它缺乏方向性和实用性。另外，我还添加了一些我不太喜欢的 AI 内容。  我决定寻找开源项目、人们构建的脚本或任何几乎没有文档的有用内容，然后开始与作者合作编写它并将其托管在我的网站上。 我想知道是否有人使用过、尝试过使用或构建过缺少我可以撰写的文档的东西。     提交人    /u/flipsnapnet   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1d8w1c4/technical_documentation_for/</guid>
      <pubDate>Wed, 05 Jun 2024 17:45:49 GMT</pubDate>
    </item>
    <item>
      <title>纪念 Mike Karels | FreeBSD 基金会</title>
      <link>https://www.reddit.com/r/opensource/comments/1d8tzi0/in_memory_of_mike_karels_freebsd_foundation/</link>
      <description><![CDATA[  由    /u/CrankyBear  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1d8tzi0/in_memory_of_mike_karels_freebsd_foundation/</guid>
      <pubDate>Wed, 05 Jun 2024 16:20:50 GMT</pubDate>
    </item>
    <item>
      <title>Tach - 强制模块边界 + deps，现在在 Rust 中🦀</title>
      <link>https://www.reddit.com/r/opensource/comments/1d8sblz/tach_enforce_module_boundaries_deps_now_in_rust/</link>
      <description><![CDATA[https://github.com/gauge-sh/tach 大家好！想分享一些我一直在研究的工具的相当重要的更新。Tach 允许您定义模块边界并在模块中强制执行规则，包括隔离、依赖关系和严格接口。一些更新 -  用 Rust 重写了核心，导致大型存储库的速度提高了约 19 倍 重新设计了界面，并添加了 TUI 以允许您以交互方式声明模块  我们构建了 Tach 来解决我们在之前的所有工作经历中遇到的“泥球”问题。随着时间的推移，代码库会紧密耦合在一起，即使是简单的更改/重构也会变得痛苦。通过设置模块边界并尽早执行它们，您可以避免所有这些问题！ Tach 是发展模块化整体而不产生泥球的最佳方式。 如果有人有任何问题或反馈，我很乐意聊天！ https://github.com/gauge-sh/tach    提交人    /u/the1024   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1d8sblz/tach_enforce_module_boundaries_deps_now_in_rust/</guid>
      <pubDate>Wed, 05 Jun 2024 15:10:50 GMT</pubDate>
    </item>
    <item>
      <title>如果我有一个用 C++ 编写的可立即使用但功能极小的 Web 框架，我应该对社区有什么期望？</title>
      <link>https://www.reddit.com/r/opensource/comments/1d8s7g1/what_should_i_expect_from_the_community_if_i_have/</link>
      <description><![CDATA[我断断续续花了大约一个月的时间研究这个东西，现在我可以轻松处理 HTTP 请求，从请求中获取数据，并将数据以特定状态 (HTTP_OK、HTTP_NOT_FOUND 等) 返回给用户。 我还构建了一个记录器和一个路由器。现在，如果我必须指出任何与此最相似的东西，我会说它最接近 Python 框架 Flask。我有意尽我所能使它尽可能简单和简约，以打破“我们不会用 C++ 编码，因为它很难学”的污名。 我现在面临的主要问题是，我看到很多事情需要处理才能使这个东西具有实际价值。目前，它只能接受简单的表单数据/文件、GET 参数、JSON 数据并解析 JSON 数据，并返回某种响应（基于文本。它可以是 XML/JSON/HTML 或纯文本）。 为了使其有用，我必须实现以下内容：  数据库插件，最好是 ORM，如用于 SQL 数据库的 SQLAlchemy 或用于 MongoDB 的 Beanie 等。这在未来应该主要得到社区支持，但它应该提供最流行的开箱即用集成，以方便使用。 身份验证机制，例如 JWT 令牌。 用于在客户端和服务器之间实现实时通信的 Web 套接字 蓝图，以便用户可以将其 API 拆分为更小的段并在将来进行版本控制（即 /v1 或 /v2） 为想要单独使用此 Web 服务器而不依赖其他 GUI 框架的用户提供模板。我会从 Jinja 中汲取灵感  我可以自己完成大部分工作，但我不想在不知道它是否有用的情况下花费这么多时间，所以如果我决定采用这个开源项目，我对社区的期望是什么？ 这里有一个示例路线，它接受简单的名字和姓氏，并将它们作为 JSON 格式的全名返回给用户： app.addRoute(&quot;/get_full_name&quot;, &quot;POST&quot;, [&amp;app](Poco::Net::HTTPServerRequest&amp; request, Poco::Net::HTTPServerResponse&amp; response) { DataHandler dataHandler(request); std::map&lt;std::string, std::string&gt; form = dataHandler.getForm(); // std::map&lt;std::string, std::string&gt; params = dataHandler.getParams(); 可以通过请求参数来完成 (?first_name=John&amp;last_name=Doe) // nlohmann::json json = dataHandler.getJson(); 也可以从请求主体中获取 json 数据，它在 dataHandler 类的 getJson() 方法中进行解析 response.setStatus(Poco::Net::HTTPResponse::HTTP_OK); response.setContentType(&quot;text/json&quot;); response.send() &lt;&lt; &quot;{ \&quot;full_name\&quot; : \&quot;&quot; + form[&quot;first_name&quot;] + &quot; &quot; + form[&quot;last_name&quot;] + &quot;\&quot; }&quot;; // 有点乱，我知道。 ^^^^ }    由    /u/Dont_Vue_Just_React  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1d8s7g1/what_should_i_expect_from_the_community_if_i_have/</guid>
      <pubDate>Wed, 05 Jun 2024 15:06:03 GMT</pubDate>
    </item>
    <item>
      <title>想要分享一个“开源货币化工具”</title>
      <link>https://www.reddit.com/r/opensource/comments/1d8qe2f/wanted_to_share_a_open_source_monetizer/</link>
      <description><![CDATA[在他们的电报频道上分享了我的观点，结果被疯狂地批评了。管理员批评了一点，但群成员是另一回事，天哪。 现在我明白为什么小偷会采取守势了。 同一个人有 4 个不同的频道，他在其中分享开源项目（和不分享），并使用链接缩短器上传项目，有时甚至不给予任何信用。 他在三个 YouTube 频道（我发现的）中做了所有这些： - Tech Karan - Everything Android - Karan Arora 注意：他似乎对他们表示了感谢，但只在他的四个 TELEGRAM 频道中的一个。不是 YouTube 频道。即便如此，他还是自己上传文件。没有提供开发者页面的下载链接。    提交人    /u/thejedih   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1d8qe2f/wanted_to_share_a_open_source_monetizer/</guid>
      <pubDate>Wed, 05 Jun 2024 13:48:45 GMT</pubDate>
    </item>
    <item>
      <title>用 C 语言编写的微型公共领域数学库（+网络演示）</title>
      <link>https://www.reddit.com/r/opensource/comments/1d8nhiv/a_tiny_public_domain_math_library_written_in_c/</link>
      <description><![CDATA[  由    /u/jezek_2  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1d8nhiv/a_tiny_public_domain_math_library_written_in_c/</guid>
      <pubDate>Wed, 05 Jun 2024 11:21:13 GMT</pubDate>
    </item>
    <item>
      <title>我发布了一款免费的开源工具，可直接从浏览器构建 Windows 脚本。它允许完全控制和自定义脚本，包括 debloat、隐私、性能和应用程序安装脚本。非常感谢您的反馈。</title>
      <link>https://www.reddit.com/r/opensource/comments/1d8nfo3/i_released_a_free_opensource_tool_to_build_a/</link>
      <description><![CDATA[大家好，希望你们今天过得愉快。 今天经过一番努力，我终于发布了我的开源工具WinScript（你可以在存储库中找到源代码），它既可以在网站上在线使用，也可以通过桌面应用程序离线使用。 它是什么？ WinScript 是一个开源工具，旨在帮助你为 Windows 10 和 11 构建自定义脚本。它包括用于消除臃肿、增强隐私、应用系统调整和提高性能的功能，以及直接从终端安装所有你喜欢的应用程序的功能。 如果已经有太多的 Windows 消除臃肿/隐私脚本，你为什么要编写这个程序？  我在网上找到的所有脚本都不允许完全自定义和控制脚本，如果不查看脚本的庞大源代码，我永远都无法真正知道脚本在后台实际上在做什么，使用我的工具，每次选择脚本时，都可以在代码预览中看到它。 它是一个多合一构建器，它具有 debloat 脚本，例如卸载所有 Microsoft 应用程序、Xbox 应用程序、第三方预装应用程序（spotify netflix 等）、OneDrive 甚至无法卸载的 Edge。您可以决定禁用哪些遥测（Windows 搜索、更新遥测）、常规操作系统数据收集、第三方应用程序遥测（如 NVIDIA、VS Code）和其他隐私设置。您可以设置首选 DNS，将服务设置为手动以释放资源，添加终极性能电源计划，禁用休眠，安装应用程序和更多。  您可以在网站上找到所有脚本。 感谢您的反馈，感谢您的时间    由   提交  /u/Flick9000   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1d8nfo3/i_released_a_free_opensource_tool_to_build_a/</guid>
      <pubDate>Wed, 05 Jun 2024 11:18:14 GMT</pubDate>
    </item>
    <item>
      <title>介绍 LightAPI：终极轻量级和模块化 Express API 模板！🚀</title>
      <link>https://www.reddit.com/r/opensource/comments/1d8l0rl/introducing_lightapi_the_ultimate_lightweight_and/</link>
      <description><![CDATA[  由    /u/WillingnessPublic267  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1d8l0rl/introducing_lightapi_the_ultimate_lightweight_and/</guid>
      <pubDate>Wed, 05 Jun 2024 08:38:15 GMT</pubDate>
    </item>
    <item>
      <title>在开源还未成熟时进行推广是一个好主意吗？</title>
      <link>https://www.reddit.com/r/opensource/comments/1d8knts/is_it_a_good_idea_to_promote_an_open_source/</link>
      <description><![CDATA[我正在努力推广我的新开源项目，但我面临一个两难境地： 由于我的项目仍处于早期阶段，它只能执行基本操作，甚至有些功能运行不佳。 但是，我计划采用“渐进式”方法，通过修复报告的问题和添加新功能来不断改进项目，而不是等待一次性发布功能齐全的版本。 问题是，我意识到大多数人不会倾向于过早地参与开源，他们不愿花太多时间报告单个问题，如果他们遇到错误或发现它不支持“他们认为应该工作的功能”，他们就会完全忽略该项目，并且永远不会回来。 这从一开始就破坏了我最初的计划：他们没有报告任何问题，因此没有我想象中的进展。 我觉得我只是在浪费时间我把宝贵的时间花在推广上，而不是专注于项目的实际开发。 尽管如此，我相信推广早期项目是有好处的。众所周知，无论是什么产品或 MVP，总是需要用户反馈来改进。我们不可能一下子做出完美的东西，所以推广在某个时候是必要的。 所以我列出了我能想到的推广早期开源的利弊： 优点：  来自用户的快速反馈，使我们能够确保我们朝着正确的方向前进。 增加知名度。我越早推广，人们就越有可能看到它。 建立一个早期的用户社区，这可能会让早期的贡献者。你知道，他们是无价的。  缺点：  如果用户遇到严重的错误，他们可能会失去兴趣，从而错失参与的机会。 （记住：他们不会回来。） 维护人员的资源和时间消耗效率低下。（你和我） 我的项目可能由于其有限的功能而看起来不如其他现有的成熟解决方案，从而导致推广吸引力降低。  我有兴趣听听你对这一挑战的看法或经验。你遇到过类似的问题吗？如果是，你是如何解决的？    提交人    /u/Abiriadev   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1d8knts/is_it_a_good_idea_to_promote_an_open_source/</guid>
      <pubDate>Wed, 05 Jun 2024 08:11:36 GMT</pubDate>
    </item>
    <item>
      <title>新手有操作系统问题</title>
      <link>https://www.reddit.com/r/opensource/comments/1d8k89k/newbie_with_os_questions/</link>
      <description><![CDATA[操作系统是一个如此庞大的话题，而我只是作为偶然用户熟悉它。我一直在努力理解它的文化/历史/使命，但我读到的东西却让我产生了更多的疑问（例如，他们是如何让人们花时间免费开发庞大的 LibreOffice 的？）与其让我在 youtube 上随机找到短视频或在 reddit 上阅读评论，您能否为我提供“初学者”资源，以了解开源的历史、使命以及人们如何组织软件制作？理想情况下，越简单越好——就好像您必须向孩子解释一样 :) 我是一个狂热的音频听众，所以也许您知道一个播客或一本书，您认为它可能会对我有所帮助。谢谢！我很惊讶我已经拥有了这么多开源项目，并且对制作它们的人心存感激（并且经常捐赠）。我不用再使用谷歌/苹果/微软的软件了。    提交人    /u/lshrtwll   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1d8k89k/newbie_with_os_questions/</guid>
      <pubDate>Wed, 05 Jun 2024 07:40:02 GMT</pubDate>
    </item>
    <item>
      <title>好的，我要开源它</title>
      <link>https://www.reddit.com/r/opensource/comments/1d8hk1m/ok_so_im_going_to_open_source_it/</link>
      <description><![CDATA[昨天我发帖询问我是否应该开源我正在开发的 ML/AI 项目。我有道德方面的顾虑，正如预期的那样，普遍的共识是开源它，感谢那些理解我的顾虑并且没有试图因为我辩论专利而强迫我的人。我的意图从来不是致富或利用它。它引起了团体外某人的关注，他试图通过操纵我来探听信息，我意识到我没有能力走上正道。我有一个组织不太好的私人 git 存储库，我想把这件事做好。  我也尊重我不知道自己在做什么，所以我愿意接受关于如何围绕我创建的这个框架建立一个社区驱动的公共导向人工智能研究社区的建议。特别是对构建自动自适应自调节神经网络的研究。 我希望这不是我搬起石头砸我们或我自己的脚。     由    /u/printr_head 提交   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1d8hk1m/ok_so_im_going_to_open_source_it/</guid>
      <pubDate>Wed, 05 Jun 2024 04:41:39 GMT</pubDate>
    </item>
    <item>
      <title>我对开源目标的现状以及对超越技术的希望......最接近开源汽车的东西？</title>
      <link>https://www.reddit.com/r/opensource/comments/1d8go1q/the_current_status_of_my_open_source_goals_and/</link>
      <description><![CDATA[我长期以来一直追求尽可能开源，并正在寻求建议。 目前我有：  自从他们在美国关闭 3g 翻盖手机以来，一直在使用 pinephone（目前是 3gb，但很长时间以来都是 ubports 版本。）。 一台英特尔第五代 chrombook（4gb），带有开源固件和 arch，作为我的个人计算机。 一台运行 PopOs 的 rog strix 18&quot;，作为我的工作机器。（我在这里能做的只有这么多） 最近购买了一块兼容 r/AsteroidOS 的手表（dory），尽管我还没有收到与 pinephone 上的 amazfish 同步客户端配合使用的通知。如果你们能帮忙的话，我将不胜感激。  之所以选择这款设备，是因为它缺少许多可用于遥测/跟踪的硬件功能，而且它还具有一些上市后操作系统的测试历史，并使用了一种在其他设备中获得主流（或接近）支持的非常常见的 SOC。 如果我无法让它工作，我可能会在某个时候买一个 pinetime。  我的 pinetab2 明天应该会到。它应该比我的旧赛扬 chromebook 快得多，所以希望它能慢慢取代它。（并不是说从 15.6 英寸到 10.1 英寸不会困扰我） GPS 是上一代 Garmin，但它运行 Linux，而且足够开放，因为他们确实发布了至少一些内容。这也是绝对必要的，而且目前我无法真正摆脱它（除非你们知道更好的选择）  现在，对于我当前的问题是，是否有任何旧车仍然得到很好的支持，但已经成为有效的开源？我唯一想到的可能是大众 1 型车的一些实例。 因为我必须在 8 月之前的某个时候买车，所以我想这可能是另一个推进这一指令的机会，无论这有多不可能，因此，如果我不问的话，那就是我的错。 ​ 我期待您对我在此处提到的任何内容的建议、帮助或想法，以及您认为我可以进一步实现这一目标的任何其他方式。 ​ 编辑：如果我没记错的话，特斯拉跑车已经开源，但这超出了我这个大学生的预算。此外，当我开车时，往返里程通常达到 1000 英里，因此电动并不理想。 ​    提交人    /u/Adventurous-Test-246   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1d8go1q/the_current_status_of_my_open_source_goals_and/</guid>
      <pubDate>Wed, 05 Jun 2024 03:50:03 GMT</pubDate>
    </item>
    <item>
      <title>Mike Karels 去世</title>
      <link>https://www.reddit.com/r/opensource/comments/1d88tq9/mike_karels_has_passed_away/</link>
      <description><![CDATA[        提交人    /u/dh23   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1d88tq9/mike_karels_has_passed_away/</guid>
      <pubDate>Tue, 04 Jun 2024 21:32:31 GMT</pubDate>
    </item>
    </channel>
</rss>