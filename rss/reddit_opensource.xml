<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：开源</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有开源相关的 subreddit（就此而言，我们引用了此处开源的定义 http://en.wikipedia.org/wiki/Open_source）</description>
    <lastBuildDate>Sun, 29 Dec 2024 21:19:53 GMT</lastBuildDate>
    <item>
      <title>[YT-X] 从终端浏览 YouTube；yt-dlp 包装器</title>
      <link>https://www.reddit.com/r/opensource/comments/1hp5oj5/ytx_browse_youtube_from_the_terminal_ytdlp_wrapper/</link>
      <description><![CDATA[    /u/BenX855   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1hp5oj5/ytx_browse_youtube_from_the_terminal_ytdlp_wrapper/</guid>
      <pubDate>Sun, 29 Dec 2024 20:59:43 GMT</pubDate>
    </item>
    <item>
      <title>Air Script 是一款可以破解 Wi-Fi 的瑞士军刀，当捕获到握手信息时还可以选择发送电子邮件通知。</title>
      <link>https://www.reddit.com/r/opensource/comments/1hp1pke/air_script_is_wifi_pwning_swiss_army_knife_that/</link>
      <description><![CDATA[      Air Script 是一种自动化工具，旨在促进 Wi-Fi 网络渗透测试。它通过自动执行网络扫描、握手捕获和暴力破解密码等任务，简化了识别和利用 Wi-Fi 网络的过程。主要功能包括： 自动攻击：Air Script 可以自动瞄准范围内的所有 Wi-Fi 网络，无需用户干预即可捕获握手。完成后，它会停用监控模式，并可以发送可选的电子邮件通知来通知用户。Air Script 还通过简化网络扫描、握手捕获和密码破解等任务来自动化 Wi-Fi 渗透测试，以实现有针对性的解除身份验证。 暴力破解功能：捕获握手后，该工具会提示用户提供单词列表以尝试破解 Wi-Fi 密码，或者将捕获的 Wi-Fi 握手上传到 WPA-sec 项目。该网站是一个公共存储库，用户可以在其中贡献和分析 Wi-Fi 握手以识别漏洞。该服务尝试使用其广泛的已知密码和单词表数据库来破解握手。 电子邮件通知：用户可以选择在成功捕获握手后接收电子邮件警报，从而可以远程监控攻击的进度。 附加工具：Air Script 包含各种补充工具，可增强黑客、渗透测试人员和安全研究人员的工作流程。用户可以根据需要选择要安装的工具。 兼容性：该工具与 Raspberry Pi 等设备兼容，可实现谨慎操作。用户可以从移动设备通过 SSH 进入 Pi，而无需越狱或 root 访问权限。    提交人    /u/AFGjkn2r   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1hp1pke/air_script_is_wifi_pwning_swiss_army_knife_that/</guid>
      <pubDate>Sun, 29 Dec 2024 18:03:39 GMT</pubDate>
    </item>
    <item>
      <title>开源劫持</title>
      <link>https://www.reddit.com/r/opensource/comments/1hoxjz0/open_source_hijack/</link>
      <description><![CDATA[我一直在使用一些故意限制分发的开源软件。您是否遇到过这种情况或使用过任何分发受限的开源软件？我相信主要的开发人员担心大型公司分叉并扼杀开发。我知道 IBM 和 MS 有一些这样的例子，他们采用了扩展消灭策略。这些人只是偏执吗？    提交人    /u/paulyivgotsomething   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1hoxjz0/open_source_hijack/</guid>
      <pubDate>Sun, 29 Dec 2024 14:53:31 GMT</pubDate>
    </item>
    <item>
      <title>IBM 量子计算机上的 Shor 算法实现</title>
      <link>https://www.reddit.com/r/opensource/comments/1how0aa/shors_algorithm_implementation_on_ibm_quantum/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1how0aa/shors_algorithm_implementation_on_ibm_quantum/</guid>
      <pubDate>Sun, 29 Dec 2024 13:28:16 GMT</pubDate>
    </item>
    <item>
      <title>有没有 SmallPDF 的开源替代品？</title>
      <link>https://www.reddit.com/r/opensource/comments/1hoq6wz/is_there_an_opensource_alternative_to_smallpdf/</link>
      <description><![CDATA[大家好， 您知道任何提供 SmallPDF 所有功能和选项的开源应用程序吗？或者，是否有几种工具可以组合以实现类似的功能？ 感谢您的帮助！    提交人    /u/umen   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1hoq6wz/is_there_an_opensource_alternative_to_smallpdf/</guid>
      <pubDate>Sun, 29 Dec 2024 06:37:28 GMT</pubDate>
    </item>
    <item>
      <title>我构建了一个库，只需一个 YAML 配置即可将 Kafka 主题转换为高性能 REST API</title>
      <link>https://www.reddit.com/r/opensource/comments/1hok8yg/i_built_a_library_that_turns_kafka_topics_into/</link>
      <description><![CDATA[我已经开源了一个库，它允许您使用简单的配置文件从 Apache Kafka 消息流创建 REST API 端点。 这解决了什么问题？ 在构建现代分布式系统时，通常需要通过 REST API 公开实时流数据。传统方法需要： - 设置消息使用者并维护单独的数据库来存储数据 - 构建和维护 REST API 服务器以查询这些数据库 - 管理具有多个移动部件的复杂基础架构 - 处理由于服务之间的网络延迟而导致的性能下降问题 解决方案：这个库将所有内容简化为基于配置的方法： - 使用基于 OpenAPI 的 YAML 配置直接从消息流创建 REST 端点 - 使用 Kafka Stream 的内置存储和键值查找功能消除数据库 - 支持多种数据格式（Avro、Protobuf、JSON） - 包括使用 Prometheus 指标的内置监控 - 处理“列出全部”和“通过 ID 获取”操作 - 与架构注册表配合使用以进行架构演变 技术细节： - 使用 Kafka Streams 和 RocksDB 实现高效的本地状态存储 - 利用 Kafka 的日志压缩实现数据持久性 - REST API 处理程序由 OpenAPI 规范生成，它们可以直接查询状态存储 性能：在我们的 4 核 CPU 基准测试中： - 以每秒 7,000 个请求的速度处理随机选择的 10M 唯一键（~0.9GB 数据） - 客户端延迟（本地到服务器）：3ms (p50)、5ms (p95)、8ms (p99) 示例用例： - 需要来自许多客户端的高吞吐量微服务 - 具有简单查找的 REST 端点，例如 /users/:id 如果您发现这有用，请考虑： - 给项目加星 ⭐ - 分享反馈或想法 - 提交功能请求或改进 查看：https://github.com/tsuz/microservice-for-kafka 注意：该项目使用 Apache Kafka 作为消息传递主干，但您不需要成为 Kafka 专家即可使用它 - 配置界面设计得简单易懂且易于访问。​​​​​​​​​​​​​​​​    提交人    /u/tak215   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1hok8yg/i_built_a_library_that_turns_kafka_topics_into/</guid>
      <pubDate>Sun, 29 Dec 2024 01:01:36 GMT</pubDate>
    </item>
    <item>
      <title>使用 Laravel 和 Livewire 构建的开源 ERP 和 CMS</title>
      <link>https://www.reddit.com/r/opensource/comments/1hojt3v/open_source_erp_plus_cms_being_built_with_laravel/</link>
      <description><![CDATA[大家好， https://github.com/oitcode/samarium 开发这个项目已经有一段时间了。只是想分享一下。任何来自开源社区的反馈都将不胜感激。计划很快达到 v1.0.0，目前是 v0.8.8。 谢谢。    提交人    /u/SouthBaseball7761   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1hojt3v/open_source_erp_plus_cms_being_built_with_laravel/</guid>
      <pubDate>Sun, 29 Dec 2024 00:39:47 GMT</pubDate>
    </item>
    <item>
      <title>用于希尔伯特式证明探索的高性能研究软件</title>
      <link>https://www.reddit.com/r/opensource/comments/1hoizq7/highperformance_research_software_for/</link>
      <description><![CDATA[我的免费开源研究软件*工具，用 C++20 编写，旨在协助研究结构证明理论。 我努力在 GitHub 风格的 Markdown 中创建了一个令人印象深刻的 README — — 结果它相当大。我并不担心代码质量，而是担心项目被认为太复杂或混乱。 我感谢 GitHub 上的反馈和每颗星。 在 Codeberg 上还有一个镜像 - 但没有论坛功能。   * 它涉及一个小众主题，但在某些大学也开设了与它相关的逻辑本科课程 - 因此它也是教育软件。   摘要 pmGenerator 可以构建、（详尽地）收集和压缩 形式证明希尔伯特系统中用户可定义的公理集。  当前的 1.2.1 版本支持两种推理规则： D 规则：将树统一（关于公式）与肯定前件 (⊢ψ,⊢ψ→φ ⇒ ⊢φ) 相结合 N 规则：必然性 (⊢ψ ⇒ ⊢□ψ)，可选择启用  该项目的自述文件还重点介绍了我为其生成（可下载）最小证明集合的几个系统。 作为项目的一部分，我发起了证明最小化挑战。对于这个，我目前正在实施改进的证明压缩算法并准备做出大量贡献（希望在几周内发布），从目前的 126171 个证明步骤改进到少于 29000 个证明步骤，这表明对于任何希望在这个数学挑战中永垂不朽的人来说，还有相当大的空间！ :-) 问题、建议和评论可以发布在项目论坛中。我特别乐意支持新的挑战者。  该工具最简单的功能之一是它可以解析 D 证明，并根据公式打印它们。例如，DD2D1D2DD2D1311 是一个基于三个公理的 15 步 D 证明，./pmGenerator -c -n -s CpCqp,CCpCqrCCpqCpr,CCNpNqCqp --parse DD2D1D2DD2D1311 -u 的结果为 [0] DD2D1D2DD2D1311： 1. 0→(¬0→0) (1) 2. ¬0→(¬1→¬0) (1) 3. (¬1→¬0)→(0→1) (3) 4. ((¬1→¬0)→(0→1))→(¬0→((¬1→¬0)→(0→1))) (1) 5. ¬0→((¬1→¬0)→(0→1)) （D）：3,4 6. （¬0→（（¬1→¬0）→（0→1）））→（（¬0→（¬1→¬0））→（¬0→（0→1））） （2） 7. （¬0→（¬1→¬0））→（¬0→（0→1）） （D）：5,6 8. ¬0→（0→1） （D）：2,7 9. （¬0→（0→1））→（（¬0→0）→（¬0→1）） （2） 10. （¬0→0）→（¬0→1） （D）：8,9 11. （（¬0→0）→（¬0→1））→（0→（（¬0→0）→（¬0→1））） （1） 12. 0→（（¬0→0）→（¬0→1）） （D）：10,11 13. (0→((¬0→0)→(¬0→1)))→((0→(¬0→0))→(0→(¬0→1))) (2) 14. (0→(¬0→0))→(0→(¬0→1)) (D):12,13 15. 0→(¬0→1) (D):1,14  其中 -c -n -s CpCqp,CCpCqrCCpqCpr,CCNpNqCqp 表示 (1): 0→(1→0)、(2): (0→(1→2))→((0→1)→(0→2)) 和 (3): (¬0→¬1)→(1→0) 配置为 公理（以普通波兰符号给出）。 还有更多功能，例如生成、搜索、减少、转换、提取数据......自述文件中有一个完整列表。    提交人    /u/xamid   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1hoizq7/highperformance_research_software_for/</guid>
      <pubDate>Sat, 28 Dec 2024 23:59:58 GMT</pubDate>
    </item>
    <item>
      <title>在听到大量关于货币化卡路里追踪器的抱怨后，我开发了一个免费的！</title>
      <link>https://www.reddit.com/r/opensource/comments/1hoe67a/after_hearing_a_ton_of_complaints_about_the/</link>
      <description><![CDATA[链接：https://github.com/femiaf13/manatee-fitness 我的很多朋友都使用 Lose it! 或 MyFitnessPal 等卡路里追踪器。我听到过很多抱怨，说它们会锁定订阅后的基本功能。压垮骆驼的最后一根稻草是不允许在没有订阅的情况下扫描条形码。我一直在寻找一个内容丰富、双关语意味十足的副项目，并决定尝试做一些好事，同时为一些人省钱！  使用 Tauri 构建，以便将 Angular 用于 GUI 并获得移动平台支持。 数据使用 SQLite 存储在设备上。 最初我只针对 Android，我也希望针对 iOS，但我没有任何 Apple 设备可以进行开发和测试。 我会说它现在是一个“晚期 alpha”。它具有大多数但不是全部功能，但只有我测试过，所以可能需要发现一些小错误。 我的妻子非常喜欢海牛，因此得名。 我已经委托了一位艺术家设计徽标，所以应该会在二月份完成。  很想听听大家的想法！目前您必须自己构建应用程序，但我的待办事项列表中确实有一项是通过 github 操作生成签名的 APK。我主要只是想现在开始传播这个消息，并希望获得一些好的功能请求或错误报告。如果您已经读到这里，感谢您的时间！    提交人    /u/hessnake   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1hoe67a/after_hearing_a_ton_of_complaints_about_the/</guid>
      <pubDate>Sat, 28 Dec 2024 20:13:38 GMT</pubDate>
    </item>
    <item>
      <title>对于具有免费许可的项目来说，使用 CLA 有多普遍？</title>
      <link>https://www.reddit.com/r/opensource/comments/1hoadru/how_common_is_the_use_of_cla_for_projects_with/</link>
      <description><![CDATA[Drew DeVault 在他多年的旧博文中这样开头：  绝大多数开源项目都附带 CLA（贡献者许可协议）...  如今这是否或多或少是事实？是少数、绝大多数项目还是几乎没有项目？ 您知道哪些当前的例子？    提交人    /u/esiy0676   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1hoadru/how_common_is_the_use_of_cla_for_projects_with/</guid>
      <pubDate>Sat, 28 Dec 2024 17:23:02 GMT</pubDate>
    </item>
    <item>
      <title>复制文件并创建目录结构？</title>
      <link>https://www.reddit.com/r/opensource/comments/1hoa48m/file_copy_with_directory_structure_creation/</link>
      <description><![CDATA[我已经在 Google 上搜索到手指都流血了，却找不到解决办法。可能是因为咖啡不够，也可能只是我没有找到正确的搜索词。 我正在寻找一个 Windows 工具，无论是 UI 还是命令行，都可以让我指定一个文件目录并将它们复制到新的根目录，并根据源文件的日期和时间创建目录结构。 我放弃了 Lightroom，它做得很好的一件事就是提取媒体并将其放入我的根媒体文件夹中，结构如下： &lt;root&gt;\&lt;year&gt;\&lt;day&gt;最后一个文件夹的格式为 year-mo-day 如果该工具可以跳过目标中存在的文件，则可以获得加分。 我发现了很多专业的付费程序，它们可以做我想做的事情，但是无法证明成本是合理的，因为这些文件的创建/维护都不是用 $$ 进行的    提交人    /u/michaelh98   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1hoa48m/file_copy_with_directory_structure_creation/</guid>
      <pubDate>Sat, 28 Dec 2024 17:11:02 GMT</pubDate>
    </item>
    <item>
      <title>正在寻找一款可以跨设备同步我的播客收听的应用程序</title>
      <link>https://www.reddit.com/r/opensource/comments/1ho5p7x/looking_for_an_app_to_sync_my_podcast_listening/</link>
      <description><![CDATA[大家好， 我正在寻找一个应用（最好是开源的）来帮助我收听播客，同时保持设备（主要是智能手机和 PC）之间的进度同步。 关键点：我通过 RSS 源关注播客，因此 Spotify 或 Apple Music 等平台不适合我。我需要具备以下功能的应用：1. 支持 RSS 源。2. 允许我从上次中断的地方继续收听某一集，无论使用什么设备。3. 可在 iOS 和 PC（网页或应用）上使用    提交人    /u/Sostrene_Blue   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ho5p7x/looking_for_an_app_to_sync_my_podcast_listening/</guid>
      <pubDate>Sat, 28 Dec 2024 13:30:52 GMT</pubDate>
    </item>
    <item>
      <title>Adobe Acrobat 的最佳开源替代品有哪些？</title>
      <link>https://www.reddit.com/r/opensource/comments/1ho44pf/what_are_the_best_open_source_alternatives_to/</link>
      <description><![CDATA[  由    /u/OMERSTOP1  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ho44pf/what_are_the_best_open_source_alternatives_to/</guid>
      <pubDate>Sat, 28 Dec 2024 11:48:10 GMT</pubDate>
    </item>
    <item>
      <title>🔥 开源目录样板！</title>
      <link>https://www.reddit.com/r/opensource/comments/1ho3wsc/open_source_directory_boilerplate/</link>
      <description><![CDATA[🔥 开源目录样板！ 大家好，我将我的目录开源了，请在这里查看。 https://github.com/javayhu/free-directory-boilerplate 这是一个综合目录，包含启动目录网站所需的一切。 网站：https://free-directory-boilerplate.vercel.app    提交人    /u/javayhu   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ho3wsc/open_source_directory_boilerplate/</guid>
      <pubDate>Sat, 28 Dec 2024 11:32:11 GMT</pubDate>
    </item>
    <item>
      <title>WhatsApp 营销、销售和交易沟通的开源生态系统</title>
      <link>https://www.reddit.com/r/opensource/comments/1hnz0ea/open_source_ecosystem_for_whatsapp_marketing/</link>
      <description><![CDATA[https://github.com/wapikit/wapikit wapikit.com 是核心和旗舰产品，它是一个自托管、高性能和单二进制可执行的 WhatsApp 活动管理器、实时团队收件箱和无代码聊天流程配置器，功能丰富，我们将在即将推出的产品更新中进一步探索每个功能。 WapiKit 同时提供 UI 和 API 接口。 它能做的事情如下： ➡️ 管理联系人列表：高效处理联系人以进行活动管理。 ➡️ 细分联系人：轻松细分受众以进行有针对性的营销。 ➡️ 实时团队收件箱：允许多个团队成员同时管理对话。 ➡️ 集成：通过我们的集成套件与 Slack、自定义网站聊天小部件和 AI 插件无缝连接。 ➡️ 支持 AI 的功能：通过集成 LLM 模型启用自动回复。 您可以在这里加入我们：https://join.slack.com/t/wapikit/shared_invite/zt-2kl7eg29s-4DfP9lFwojQg_yCcyW_w6Q 将其用作自托管 WhatsApp 业务管理器，用于销售、营销和客户支持集成。 我们已经发布了 alpha 版本，其中包含活动管理功能和联系人列表管理。并且正在发布实时团队收件箱功能。  然后是 js.wapikit.com ( wapi.js ) 和 go.wapikit.com ( wapi.go )，这两个 SDK 都是独立构建的，目的都是为了将​​它们用作通过 WhatsApp 业务 API 轻松构建应用程序的工具，无论是 WhatsApp 聊天机器人还是其他后端应用程序。它们与 WhatsApp 业务管理 API 和 WhatsApp 云 API 配合良好。您可以查看它们的文档。如果有任何问题，请在评论部分问我。我在过去的帖子中分享了几个用例示例。甚至 WapiKit 本身也在后端使用 Wapi.go。 如果您是一家初创公司或独立开发者，并希望免费设置 WhatsApp 营销/销售/客户支持基础设施，您可以查看 github，尝试一下或发表评论“Hi”，我会为您提供演示。    提交人    /u/UnusualMeasurement10   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1hnz0ea/open_source_ecosystem_for_whatsapp_marketing/</guid>
      <pubDate>Sat, 28 Dec 2024 05:37:40 GMT</pubDate>
    </item>
    </channel>
</rss>