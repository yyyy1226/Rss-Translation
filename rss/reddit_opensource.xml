<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：开源</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有开源相关的 subreddit（就此而言，我们引用了此处开源的定义 http://en.wikipedia.org/wiki/Open_source）</description>
    <lastBuildDate>Wed, 30 Oct 2024 18:32:02 GMT</lastBuildDate>
    <item>
      <title>寻找与野生动物相关的 OSS 项目</title>
      <link>https://www.reddit.com/r/opensource/comments/1gfsynx/looking_for_wildliferelated_oss_projects/</link>
      <description><![CDATA[您好，我正在寻找与野生动物（或更普遍的物种）保护/调解相关的活跃开源项目。或者任何可以帮助类似事业的东西。 如果您知道可以匹配的项目名称，请随时分享，提前致谢！:)    提交人    /u/KyN76   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1gfsynx/looking_for_wildliferelated_oss_projects/</guid>
      <pubDate>Wed, 30 Oct 2024 18:02:37 GMT</pubDate>
    </item>
    <item>
      <title>有没有软件可以将给定文件夹内的所有文件的名称记录到文本文件中？</title>
      <link>https://www.reddit.com/r/opensource/comments/1gfqsj7/any_software_that_records_names_of_all_files/</link>
      <description><![CDATA[我不确定在哪里问这个问题，我甚至怀疑它是否存在，但如果存在的话，那将是一个巨大的解脱。基本上，我需要记录我拥有的所有文件（数量以千计），如果我可以使用现有软件自动执行此操作，那就太棒了。自己编写代码可能并不难（？），但我已经多年没有练习过 C/C++ 了 :/    提交人    /u/beclomethasonedppnt   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1gfqsj7/any_software_that_records_names_of_all_files/</guid>
      <pubDate>Wed, 30 Oct 2024 16:32:30 GMT</pubDate>
    </item>
    <item>
      <title>救命，名为 Doro A.B 的公司应该给我设备来源吗？</title>
      <link>https://www.reddit.com/r/opensource/comments/1gfpfsq/help_should_an_company_named_doro_ab_give_me/</link>
      <description><![CDATA[您好，我给一家名为 Doro A.B 的电话公司发了电子邮件，该公司专注于为老奶奶提供技术，但他们说他们什么都不知道，也不会做任何事情。在回复中解释了 GPl-2 和更多内容后，他们根本没有回复，然后从另一个帐户发送了一封电子邮件（解释了所有 GPL-2 和更多内容），但他们忽略了我，他们说他们会在两天内回复，帮帮我！！    提交人    /u/Intelligent_Alarm178   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1gfpfsq/help_should_an_company_named_doro_ab_give_me/</guid>
      <pubDate>Wed, 30 Oct 2024 15:35:59 GMT</pubDate>
    </item>
    <item>
      <title>社区对开源定义的承诺</title>
      <link>https://www.reddit.com/r/opensource/comments/1gfo33x/community_commitment_to_open_source_definition/</link>
      <description><![CDATA[此声明刚刚发布，因此您可以重申对过去四分之一世纪以来由开放源代码定义 1.9 定义的开放源代码的支持，而不是被严重削弱的 OSAID 分叉 — — 以及 OSD 本身未来可能不可避免的“协调” — — 无法保护四项基本自由：  我们声明，开放源代码仅由开放源代码定义 (OSD) 版本 1.9 定义。 任何修订或新定义都应通过公开透明的流程在社区达成明确共识的情况下得到承认。  我希望我们能够作为首批签署者之一得到您的支持：  声明：https://opensourcedeclaration.org 定义：https://opensourcedefinition.org 讨论：https://discuss.opensourcedefinition.org     由   提交  /u/samj   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1gfo33x/community_commitment_to_open_source_definition/</guid>
      <pubDate>Wed, 30 Oct 2024 14:38:34 GMT</pubDate>
    </item>
    <item>
      <title>KDE 年底万圣节募捐特别活动</title>
      <link>https://www.reddit.com/r/opensource/comments/1gfnjr7/kde_endofyear_halloween_fundraiser_special/</link>
      <description><![CDATA[        提交人    /u/jlpcsl   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1gfnjr7/kde_endofyear_halloween_fundraiser_special/</guid>
      <pubDate>Wed, 30 Oct 2024 14:15:30 GMT</pubDate>
    </item>
    <item>
      <title>我们正在构建本地 AI API 平台，以替代 OA API 平台</title>
      <link>https://www.reddit.com/r/opensource/comments/1gfn94i/were_building_local_ai_api_platform_to_an/</link>
      <description><![CDATA[嘿，我们正在发布 Cortex 的预览版，这是我们实现 OA API 平台的本地替代方案的旅程。 Cortex 的路线图是实现完整的 AI API，包括工具、运行、多模式和实时 API。  简单的 CLI（受 Ollama 启发） 从 HuggingFace 或内置模型库中提取 以通用文件格式存储的模型（与 blob 相比） 可交换引擎（默认：llama.cpp，未来：ONNXRuntime、TensorRT-LLM） 完整的 C++ 实现，可打包到桌面和移动应用程序中  Web：https://cortex.so/ 源代码： https://github.com/janhq/cortex.cpp 我们认为需要一个强大的开源 API 平台来将众多开源项目结合在一起，与 AI 和专有产品竞争。我们很高兴能够构建这个平台，并期待社区的批评能够改进。 快速说明：目前，Cortex 与 Ollama 类似，但它以通用文件格式存储模型并用 C++ 编写。此外，我们计划扩展 Cortex 的功能，使其成为 AI API 平台的替代方案。 我是团队的一员，很乐意听到您的反馈并回答任何问题！    提交人    /u/emreckartal   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1gfn94i/were_building_local_ai_api_platform_to_an/</guid>
      <pubDate>Wed, 30 Oct 2024 14:02:14 GMT</pubDate>
    </item>
    <item>
      <title>ABeamer - 逐帧网络动画框架</title>
      <link>https://www.reddit.com/r/opensource/comments/1gflx7w/abeamer_framebyframe_web_animation_framework/</link>
      <description><![CDATA[对于寻求传统 CSS 动画替代方案的 Web 开发人员和动画师，ABeamer 凭借其逐帧动画功能提供了一种独特的方法。与通常响应用户交互的 CSS 动画不同，ABeamer 利用独特的基于帧的引擎来利用 Web 技术，该引擎旨在独立于用户操作运行。使用 ABeamer，每一帧都以定义的每秒帧速率精确渲染，从而实现将动画在服务器端无缝渲染为动画 GIF 或视频剪辑。 链接： - Github：https://github.com/a-bentofreire/abeamer - 网站：https://abeamer.devtoix.com/ - 实际应用：https://codepen.io/a-bentofreire - 动画图表示例：https://codepen.io/a-bentofreire/pen/mKjQXR - 图库：https://abeamer.devtoix.com/#gallery ABeamer 主要功能： - 内置 TypeScript：ABeamer 的核心是用 TypeScript 开发的，为 TypeScript 和 JavaScript 开发人员提供结构和灵活性。 - 可扩展性和插件：ABeamer 在设计时就考虑到了可扩展性，并配备了多个插件，包括图表、过渡和振荡效果选项。这些工具允许开发人员集成各种可自定义的视觉元素。 - 缓动功能：ABeamer 支持各种缓动选项，可提供平滑的过渡和复杂的运动模式，为动画增添精致、专业的触感。 - 全面的文档：详细的文档可确保开发人员轻松浏览 ABeamer 的功能，从基础到高级配置。 - 示例库：ABeamer 包含大量示例，向任何探索其潜力的人展示了其多功能性和范围。 对于需要精确控制和媒体就绪输出的开发人员来说，ABeamer 是一种灵活且功能强大的解决方案，通过允许逐帧生成而脱颖而出。这种控制级别支持广泛的动画需求，从基于 Web 的序列到专业导出的剪辑。凭借坚实的 TypeScript 基础、丰富的可扩展性和丰富的示例库，ABeamer 是一款功能强大的工具，可用于创建满足 Web 和多媒体要求的动态动画。    提交人    /u/abentofreire   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1gflx7w/abeamer_framebyframe_web_animation_framework/</guid>
      <pubDate>Wed, 30 Oct 2024 12:59:38 GMT</pubDate>
    </item>
    <item>
      <title>有人会开源 Adob​​e 软件吗？</title>
      <link>https://www.reddit.com/r/opensource/comments/1gfl9w0/will_someone_open_source_adobe_software/</link>
      <description><![CDATA[最近我和一个朋友讨论过，有一天，一些黑客会联合起来破解 Adob​​e 的安全系统，获取所有软件的代码源，并将它们全部免费发布在 GitHub 上。现在我每天都梦想着这种可能性，我真的希望有一天能有一位英雄来拯救我们。    提交人    /u/WaldToonnnnn   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1gfl9w0/will_someone_open_source_adobe_software/</guid>
      <pubDate>Wed, 30 Oct 2024 12:26:13 GMT</pubDate>
    </item>
    <item>
      <title>适合学生使用 PDF 注释和笔记的 Linux 替代品</title>
      <link>https://www.reddit.com/r/opensource/comments/1gfhxrt/linux_alternatives_for_pdf_annotation_and/</link>
      <description><![CDATA[您好。几天前我换用了 Linux Mint，正在寻找一款与 Onenote 相当的应用。我是一名学生，经常需要在幻灯片上或旁边做笔记。我以前使用 Onenote 或 PowerPoint 的笔记功能。 我正在寻找一款可以导入 pdf 文件并在旁边做注释的应用。 您有什么建议吗？    提交者    /u/ParkingAssociation20   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1gfhxrt/linux_alternatives_for_pdf_annotation_and/</guid>
      <pubDate>Wed, 30 Oct 2024 08:44:49 GMT</pubDate>
    </item>
    <item>
      <title>家庭文档管理应用</title>
      <link>https://www.reddit.com/r/opensource/comments/1gfhxdh/document_management_app_for_family/</link>
      <description><![CDATA[我正在寻找一款可以存储每个家庭成员文件的应用。我想以安全且易于访问的方式以数字方式存储我和家人的旧物理文档。    提交人    /u/Dense-One-618   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1gfhxdh/document_management_app_for_family/</guid>
      <pubDate>Wed, 30 Oct 2024 08:43:53 GMT</pubDate>
    </item>
    <item>
      <title>K4 - 高性能开源事务、持久存储引擎/嵌入式数据库</title>
      <link>https://www.reddit.com/r/opensource/comments/1gfdb5t/k4_high_performance_open_source_transactional/</link>
      <description><![CDATA[向我的开源爱好者们问好！我想向你们介绍一种新的开源存储引擎/嵌入式数据库，适用于 GO 和其他语言，名为 K4！ K4 是一个可以嵌入到您的应用程序中并用作快速、持久、耐用、事务性存储解决方案的库。 K4 建立在日志结构合并树之上，以优化写入，但也提供非常高效的读取速度。 基准测试 ------------------------------------- goos：linux goarch：amd64 pkg：github.com/guycipher/k4 cpu：第 11 代 Intel(R) Core(TM) i7-11700K @ 3.60GHz BenchmarkK4_Put BenchmarkK4_Put-16 158104 6862 ns/op # 145,000 ops/s 特点 ------------------------------------- - 高速写入和读取 -耐用性 - 可变长度的二进制键和值。键及其值可以是任意长度 - 预写日志 (WAL)。系统在将 PUT 和 DELETE 操作应用于 LSM 树之前，将它们写入日志文件。 - 原子事务。多个 PUT 和 DELETE 操作可以组合在一起并以原子方式应用于 LSM 树。 - 配对压缩。SSTable 在压缩期间配对并合并为单个 SSTable。这减少了 SSTable 的数量并最大限度地减少了读取操作的磁盘 I/O。 - Memtable 作为跳过列表实现。 - 内存和基于磁盘的存储 - 可配置的 memtable 刷新阈值 - 可配置的压缩间隔（以秒为单位） - 可配置的日志记录 - 可配置的跳过列表 - 布隆过滤器用于更快的查找。 SSTable 初始页面包含一个布隆过滤器。 - 在扫描 SSTable 之前，系统使用布隆过滤器确定键是否在 SSTable 中。 - 从 WAL 恢复 - 细粒度页面锁定 - 线程安全 - TTL（生存时间）支持 - 可选压缩支持（简单轻量级和优化的 Lempel-Ziv 1977 启发压缩算法 - 范围和等值功能（Get、NGet、Range、NRange、GreaterThan、GreaterThanEq、LessThan、LessThanEq） - 无依赖项 我目前正在研究 C 绑定，然后我将为各种语言创建 FFI，包括 Python、Node.JS、Ruby、Java 等！ 请让我知道您的想法！:)    提交人    /u/diagraphic   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1gfdb5t/k4_high_performance_open_source_transactional/</guid>
      <pubDate>Wed, 30 Oct 2024 03:17:54 GMT</pubDate>
    </item>
    <item>
      <title>Tuxguitar 刚刚毁掉了我的 PC。</title>
      <link>https://www.reddit.com/r/opensource/comments/1gfcwn1/tuxguitar_just_murdered_my_pc/</link>
      <description><![CDATA[Tuxguitar 是一个开源吉他指法谱编辑器。在原先的负责人离职后，该项目更换了领导层；现在官方下载在 SourceForge 和 GitHub 上。这个 subreddit 已经关闭多年了，所以我不知道在哪里问这个问题。 我从 GitHub 页面下载了 Mac 和 Windows 的官方稳定安装程序。在每个平台上，它们都被独立标记为潜在恶意软件。 无论如何，我以管理员身份运行了 Windows 安装程序，要完成安装，它需要重新启动；重新启动后，我的电脑进入自动修复模式。任何修复或系统还原都无法修复它。 … Tuxguitar 是灾难性的损坏，还是纯粹的恶意软件？    提交人    /u/Plembert   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1gfcwn1/tuxguitar_just_murdered_my_pc/</guid>
      <pubDate>Wed, 30 Oct 2024 02:56:07 GMT</pubDate>
    </item>
    <item>
      <title>为任何项目自动生成有用的 README 文件的工具</title>
      <link>https://www.reddit.com/r/opensource/comments/1gf98il/a_tool_that_automatically_generates_a_useful/</link>
      <description><![CDATA[我厌倦了从头开始编写 README，并且不得不为 LLM 提供大量上下文以使其准确，因此我使用 Google 的 Gemini API 构建了一个为您完成此操作的工具。 它会扫描您的项目，了解代码库，并生成详细的 README，其中包含安装步骤、使用示例以及您期望的所有其他内容。 https://github.com/mainnebula/ReadMe-Generator 您需要自己的 Gemini API 密钥，但 Google 会为您提供免费的每月积分，这对于此工具来说已经足够了。 这是我的第一个真正的 Python CLI 工具，我很乐意收到一些反馈 - 什么会让它对您的项目更有用？    提交人    /u/the_void_the_void   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1gf98il/a_tool_that_automatically_generates_a_useful/</guid>
      <pubDate>Tue, 29 Oct 2024 23:52:29 GMT</pubDate>
    </item>
    <item>
      <title>Omnivore 正在加入 11 个实验室</title>
      <link>https://www.reddit.com/r/opensource/comments/1gf4zw8/omnivore_is_joining_eleven_labs/</link>
      <description><![CDATA[大家好-  我们很高兴地告诉大家，Omnivore 正在与领先的 AI 音频研究和技术公司 ElevenLabs 合作。我们的团队将加入 ElevenLabs，通过他们的新 ElevenReader 应用推动无障碍阅读和聆听的未来。 作为 ElevenLabs 团队的一员，我们将拥有一个更大的平台，为认真的读者创造无障碍且引人入胜的体验。我们通过将他们超逼真的 AI 语音集成到 Omnivore 中而认识了 ElevenLabs——很快，用 ElevenLabs 的声音收听文章和书籍就成为了 Omnivore 中最受欢迎的功能之一。我们对这个机会感到非常兴奋，我们想分享一些对您来说很重要的信息。 首先，邀请所有 Omnivore 用户在 ElevenReader 创建一个免费帐户。我们的团队已经为 ElevenReader 应用提供了有价值的更新，作为一款免费的首选阅读器和音频收听应用，它功能强大。 接下来，所有 Omnivore 用户都可以从服务中导出他们的信息，截止日期为 2024 年 11 月 15 日，此后所有信息都将被删除。 最后，ElevenLabs 致力于服务开发者社区，Omnivore 代码库将对所有用户保持 100% 开源。这一决定确保了更广泛的开发社区可以继续在 Omnivore 技术的基础上进行构建和改进。 如需了解有关 ElevenLabs 和 ElevenReader 应用的更多信息，或体验 AI 驱动的文本转语音技术的强大功能，请访问 elevenlabs.io 继续，杰克逊和洪博    提交人    /u/slashtab   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1gf4zw8/omnivore_is_joining_eleven_labs/</guid>
      <pubDate>Tue, 29 Oct 2024 20:44:48 GMT</pubDate>
    </item>
    <item>
      <title>pgai Vectorizer 今日发布（可在 GitHub 上获取），用于自动创建和同步 PostgreSQL 中的向量嵌入，就像数据库索引一样</title>
      <link>https://www.reddit.com/r/opensource/comments/1gf3tgx/pgai_vectorizer_launched_today_available_on/</link>
      <description><![CDATA[        提交人    /u/xenophenes   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1gf3tgx/pgai_vectorizer_launched_today_available_on/</guid>
      <pubDate>Tue, 29 Oct 2024 19:55:43 GMT</pubDate>
    </item>
    </channel>
</rss>