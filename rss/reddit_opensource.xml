<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：开源</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有开源相关的 subreddit（就此而言，我们引用了此处开源的定义 http://en.wikipedia.org/wiki/Open_source）</description>
    <lastBuildDate>Sun, 05 Jan 2025 03:30:01 GMT</lastBuildDate>
    <item>
      <title>从闭源开发转向开源并管理文档</title>
      <link>https://www.reddit.com/r/opensource/comments/1htqrjn/going_from_closed_source_development_to_open/</link>
      <description><![CDATA[我对编码和构建大型项目还很陌生。所以，如果这是一个愚蠢的问题，我很抱歉，但我认为这会对我有益，我可能会从那些比我更优秀的人那里得到一些额外的提示。  我目前正处于构建我认为更大规模项目的早期阶段，该项目旨在为安全团队提供分布式解决方案。它将有一个后端 API、React 前端和一个设计用于在 Windows、Linux 甚至 Mac 上运行的代理。我已经开始使用它了，比如初始代理到服务器的通信和注册、前端身份验证和代理初始管理，以及后端处理它。  这是我目前的想法和问题。现在我正在开发中，不想发布一个没有达到我设定的最低要求的东西。所以我将存储库设置为私有（技术上是所有三个存储库）。我的意图是设定一个目标，即哪些特性和功能至少是可行的，我已经将这个里程碑设置为公开并发布它。我不确定这是否是最好的，并且很想听听大家的意见。不过，有一件事让我很纠结，那就是文档。 我不确定如何实现文档。我尝试将 GitHub 页面添加到我的后端存储库，因为它将是主要存储库，这样当我处理功能时，我可以记录使用情况并防止项目结束时文档过载和忘记东西。但是，GitHub 页面仅适用于公共存储库，并且阅读更多内容后，看起来页面应该设置在自己的存储库中，而不是附加到代码存储库。你们如何处理文档以帮助他人？ 我真的很感激和了解每个人可能有的见解。    提交人    /u/KingAroan   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1htqrjn/going_from_closed_source_development_to_open/</guid>
      <pubDate>Sat, 04 Jan 2025 22:51:40 GMT</pubDate>
    </item>
    <item>
      <title>我创建了一个开源 HTML 到 PDF API</title>
      <link>https://www.reddit.com/r/opensource/comments/1htlocc/i_created_an_open_source_html_to_pdf_api/</link>
      <description><![CDATA[很多年前，我在一家医院工作，医院要求根据一些 HTML 内容创建 PDF 报告。几年后，我在一家市场研究公司工作，他们也要求我做类似的事情，最近，我必须创建租赁合同。 我已经多次构建了这个 API，并决定将一个小项目放在一起并放在 GitHub 中。 让我知道你的想法以及我可以如何改进 README 页面。 https://github.com/hirebarend/pdf-pigeon    提交人    /u/hirebarend   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1htlocc/i_created_an_open_source_html_to_pdf_api/</guid>
      <pubDate>Sat, 04 Jan 2025 19:06:33 GMT</pubDate>
    </item>
    <item>
      <title>开源仓库：Mapbox 代币？</title>
      <link>https://www.reddit.com/r/opensource/comments/1htl4dv/opensource_repo_mapbox_token/</link>
      <description><![CDATA[  由    /u/The_Wanderer33  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1htl4dv/opensource_repo_mapbox_token/</guid>
      <pubDate>Sat, 04 Jan 2025 18:42:34 GMT</pubDate>
    </item>
    <item>
      <title>PhantomGateC99 — 现在采用纯 C99，可实现更轻的端口欺骗！</title>
      <link>https://www.reddit.com/r/opensource/comments/1htk27c/phantomgatec99_now_in_pure_c99_for_even_lighter/</link>
      <description><![CDATA[嘿 r/opensource！ 我最初用 Python 编写了 PhantomGate，以发送虚假/随机服务横幅并混淆端口扫描器。现在，我已经用 C99 重写了它（是的，它确实可以在烤面包机上运行），并将其发布为 PhantomGateC99！ 怎么回事？  相同的概念：通过使用虚假横幅回复来欺骗端口扫描器。 纯 C99：最小依赖性，易于编译 - 适用于 x86、ARM、MIPS、RISC-V，随便你说。 签名文件：使用 signatures.txt 输入原始或“类似正则表达式”的行以获取随机横幅。 超级简单：只需构建并运行二进制文件。就是这样。  快速入门  克隆或获取最新版本。 构建：bash ./configure make  运行：bash ./phantomgate -s signatures.txt -l 0.0.0.0:8888 -v  端口 8888 现在正愉快地向连接的任何扫描仪吐出无意义的信息。  为什么要关心？  开源并根据 GNU 许可，因此请随意修改、扩展或修复内容。 非常适合与爱管闲事的扫描仪打交道，并给它们一个“镜厅”。 因为用 C 编写微型网络工具既怀旧又有趣！  贡献或了解更多信息 如果您发现错误、有更好的签名想法或想要提供帮助，请查看 repo。我很乐意看到您的贡献或反馈。 Repo 链接：PhantomGateC99 感谢您的阅读 - 很想听听您的想法和建议！    提交人    /u/Front-Buyer3534   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1htk27c/phantomgatec99_now_in_pure_c99_for_even_lighter/</guid>
      <pubDate>Sat, 04 Jan 2025 17:57:01 GMT</pubDate>
    </item>
    <item>
      <title>洁净室实施和许可影响</title>
      <link>https://www.reddit.com/r/opensource/comments/1htixio/clean_room_implementations_and_licensing/</link>
      <description><![CDATA[如今，随着人工智能的出现和使用，许多开发人员无法真正知道他们的代码来自哪里。人工智能正在从开源存储库中获取代码；因此，鉴于 FOSS 的性质，许多实现在技术上都是衍生作品。 今天我问 Claude：  一个人已经使用 GPLv3 许可了他的代码。他的代码总共有 10 行。我使用他的代码，并在这 10 行的基础上添加了 1000 行。他的代码仅占总代码的 1%。我想使用 MIT 许可证。我应该强制使用 GPLv3 吗？  回答：  是的，您必须对整个代码库使用 GPLv3，无论 GPL 许可部分与您的添加相比有多小。在使用 GPLv3 软件的任何部分时，整个作品都受 GPL 的条款和条件约束 大小无关紧要 GPL 代码的相对大小（在您的情况下为 1%）无关紧要。即使是很小的代码片段也受版权保护，使用 GPL 许可的代码需要遵守其条款 衍生作品规则 您添加的 1000 行将被视为原始 10 行的衍生作品。GPL 许可证规定，任何修改或衍生作品都必须在相同条款下获得许可。  这些话有多少是真的？基本上，基于这个答案，我可以说 99% 的项目将很快成为 FOSS，因为我在第一个声明中已经说明了这一点。    提交人    /u/SirLouen   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1htixio/clean_room_implementations_and_licensing/</guid>
      <pubDate>Sat, 04 Jan 2025 17:07:01 GMT</pubDate>
    </item>
    <item>
      <title>介绍 ChronoMind：最快的时间向量搜索引擎 🚀</title>
      <link>https://www.reddit.com/r/opensource/comments/1htiv0l/introducing_chronomind_the_fastest_temporal/</link>
      <description><![CDATA[嘿 Reddit！🎉 我很高兴与大家分享 ChronoMind，这是一款尖端的矢量相似性搜索引擎，它通过原生时间支持（将两者结合起来是我后来的执着）重新定义了速度和智能。它值得您关注的原因如下： 🚀 超快速度  84.93ns 搜索延迟 – 比 FAISS 和 Milvus 等传统解决方案快 10-100 倍。 完全并发、无锁架构，能够实现 10M+ QPS。  ⏰ 时间智能  首个具有原生时间衰减和重要性加权的向量存储，解锁实时推荐、时间敏感分析等方面的新用例。  💡 主要特点  零拷贝操作：直接内存访问，实现最高效率。 上下文感知搜索：具有时间和上下文偏差的超快速查询。 内存高效：每个向量仅 3KB，包括元数据。  ⚡ 性能亮点   指标 ChronoMind FAISS Milvus Qdrant        搜索延迟 84.93 纳秒 ~500 纳秒 ~800纳秒 ~950 纳秒   最大 QPS 10M 100K–1M 100K–1M ~500K   时间支持 ✅ ❌ ❌ ❌   为何重要 ChronoMind 不仅速度更快 — — 它还面向未来（就目前而言），将高级时间智能与 Rust 的无与伦比的性能相结合。无论您是构建实时应用程序还是处理海量数据集，此引擎都可以改变您处理向量搜索的方式。  GitHub：ChronoMind 存储库  我很乐意听取您的反馈和想法！让我们在评论中讨论用例、基准或其他任何内容。    提交人    /u/ribozomes   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1htiv0l/introducing_chronomind_the_fastest_temporal/</guid>
      <pubDate>Sat, 04 Jan 2025 17:03:56 GMT</pubDate>
    </item>
    <item>
      <title>NetBSD 核心组：关于版本控制系统的声明 — 核心计划将 NetBSD 迁移到 Mercurial && Git SCM</title>
      <link>https://www.reddit.com/r/opensource/comments/1hticcj/the_netbsd_core_group_statement_on_version/</link>
      <description><![CDATA[  由    /u/Mcnst  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1hticcj/the_netbsd_core_group_statement_on_version/</guid>
      <pubDate>Sat, 04 Jan 2025 16:41:44 GMT</pubDate>
    </item>
    <item>
      <title>🤖 JARVIS - 你的人工智能开发伙伴</title>
      <link>https://www.reddit.com/r/opensource/comments/1htgrcg/jarvis_your_aipowered_dev_companion/</link>
      <description><![CDATA[大家好！很高兴分享一个完全开源的项目，旨在为您的编码工作流程带来一些科幻魔法。 JARVIS 是一个 AI 助手，它可以帮助你更智能地编写代码并更快地交付 - 是的，它是 BYOK（自带密钥）！ 它的特别之处： 上下文感知代码建议 智能工作流自动化 自然语言交互 多 IDE 支持 BYOK - 使用您首选的 AI 提供商 100％开源和透明 https://github.com/danilofalcao/jarvis 专为希望他们的编码体验更像 Tony Stark 的工作室（减去爆炸😉）的开发人员打造。    提交人    /u/th3w0rld1sy0urs   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1htgrcg/jarvis_your_aipowered_dev_companion/</guid>
      <pubDate>Sat, 04 Jan 2025 15:30:11 GMT</pubDate>
    </item>
    <item>
      <title>如何制作适用于 Windows 的 Flowblade？</title>
      <link>https://www.reddit.com/r/opensource/comments/1htg702/how_to_make_flowblade_for_windows/</link>
      <description><![CDATA[我真的很喜欢 Flowblade  视频编辑器，它是开源的，可在 Linux 上运行。Flowblade 的网站只提供 Linux 版本，而不是 Windows 版本。将其代码（开源、python、使用 MLT 框架进行视频编辑，该框架也是开源的）编译为 Windows 程序有多难？（我想知道为什么它的开发人员没有一个这样的程序？）。    提交人    /u/NomadJago   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1htg702/how_to_make_flowblade_for_windows/</guid>
      <pubDate>Sat, 04 Jan 2025 15:03:28 GMT</pubDate>
    </item>
    <item>
      <title>我在开发开源强大的键盘重新映射和其他自动化工具时学到了什么。</title>
      <link>https://www.reddit.com/r/opensource/comments/1htg1gw/what_i_learn_while_developing_my_opensource/</link>
      <description><![CDATA[大家好！ 我的 Github 存储库在不到 3 个月的时间内就获得了 180 多个星。这是我的存储库：https://github.com/Fajar-RahmadJaya/KeyTik。我知道这并不多，但我想分享我在开发过程中的经验。 对我来说，市场调研很重要。除了营销，我们还需要为我们的产品增加价值。尽可能多地收集用户的反馈或研究我们的竞争对手，以找出我们需要在产品中添加什么。例如，在项目 1 上他们缺少这个，或者在项目 2 上他们有这个很好的功能。 找到与我们的项目相关的社区。研究他们想要什么并将其实现到我们的项目中。看到一些带有问号的帖子，例如“我该怎么做” &quot;是否有任何工具可以做到这一点&quot;。研究它并决定它是否适合我们的项目。 当然，我们的创造力和想法也很重要。如果你认为某件事对你的项目有好处，就记下来。 最后是一致性。不要让你的项目被抛弃，并记录你的进展。对我们的用户好一点。如果他们对我们的项目有一些想法，就和他们详细阐述。不要放弃这个想法。毕竟它是开源的，每个人都可以为它做出贡献，即使只是提供一个想法。 我希望这对你有用，如果有什么不对的地方，我很抱歉。谢谢！    提交人    /u/National_Operation14   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1htg1gw/what_i_learn_while_developing_my_opensource/</guid>
      <pubDate>Sat, 04 Jan 2025 14:56:15 GMT</pubDate>
    </item>
    <item>
      <title>完全开源的鼠标。开箱即用的 QMK 固件。</title>
      <link>https://www.reddit.com/r/opensource/comments/1hte2a7/the_completely_opensource_mouse_qmk_firmware_out/</link>
      <description><![CDATA[  由    /u/Candace_Owens_4225  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1hte2a7/the_completely_opensource_mouse_qmk_firmware_out/</guid>
      <pubDate>Sat, 04 Jan 2025 13:10:21 GMT</pubDate>
    </item>
    <item>
      <title>Gsoc 备战指导</title>
      <link>https://www.reddit.com/r/opensource/comments/1htdx9g/gsoc_preparation_guidance/</link>
      <description><![CDATA[我是一名想转行从事科技行业的在职专业人士。这个月我了解到了 gsoc。我正在提升自己的 HTML、CSS、JS 和 React 技能，我认为自己在这 4 项技术上很擅长。众所周知，gsoc 将于 2 月 21 日开始。我应该开始学习 node js 和后端开发，还是不应该开始寻找 gsoc 开源项目的准备并开始做出贡献。 即使我开始准备后端，我也不需要超过一个月的时间就能进入最佳状态，因为我了解幕后的工作方式（libuv 和所有）。  对于我来说，破解 gsoc 2025 非常重要，因为这是唯一可以帮助我改善生活的机会。 请帮助我。    提交人    /u/Exact_Praline2674   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1htdx9g/gsoc_preparation_guidance/</guid>
      <pubDate>Sat, 04 Jan 2025 13:02:05 GMT</pubDate>
    </item>
    <item>
      <title>非盈利开源组织如何生存？</title>
      <link>https://www.reddit.com/r/opensource/comments/1htdatt/how_non_profit_open_source_organization_survives/</link>
      <description><![CDATA[我只是好奇非营利开源组织是如何运作的，我的意思是他们如何支付员工工资、基础设施和所有费用？他们的工资带宽是多少？    提交人    /u/ashuk_971   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1htdatt/how_non_profit_open_source_organization_survives/</guid>
      <pubDate>Sat, 04 Jan 2025 12:22:34 GMT</pubDate>
    </item>
    <item>
      <title>推出 BuildMyCV - 您的终极 AI 简历生成器（现已在 Docker Hub 上线！）</title>
      <link>https://www.reddit.com/r/opensource/comments/1htd43w/introducing_buildmycv_your_ultimate_aipowered/</link>
      <description><![CDATA[大家好！ 我很高兴向大家介绍 BuildMyCV，这是我一直在致力于的一个项目，它可以帮助您制作适合 ATS 的简历、分析职位描述并获得个性化反馈，以提高您被录用的机会。无论您是在创建第一份简历还是完善现有简历，BuildMyCV 都能满足您的需求。 💥 BuildMyCV 的主要功能：  ATS 简历生成器： 通过从多个专业模板中进行选择，轻松构建符合 ATS 要求的简历。 内置的AI 检查器将针对ATS 关键字优化您的简历并提高其可读性，确保其适合求职。  AI 驱动的工作分析： 只需上传您的简历和职位描述，我们的 AI 就会对其进行分析。 它将为您提供工作匹配百分比，以显示您的简历与职位描述的匹配程度，帮助您定制简历以获得最佳结果。  AI 简历助手： 与我们的AI 助手聊天，以获得个性化的反馈和建议，以改进您的简历。 助手将突出显示您可以加强简历的区域，并根据其分析提供具体的可操作提示。  交互式用户界面： 该应用程序具有时尚的交互式 UI，使整个简历构建过程直观、无缝且引人入胜。  职员身份验证： 使用职员保护您的帐户和偏好设置，提供轻松的身份验证和管理。   📢 现在可在 Docker Hub 上使用： 我还在 Docker Hub 上提供了 BuildMyCV，这样您就可以拉取项目并使用 Docker 在本地运行它。获取方法如下： docker pull shubham76528/buildmycv 🖥️ 访问 BuildMyCV： 您可以使用以下链接直接从浏览器尝试 BuildMyCV： 实时链接：https://buildmycv.vercel.app GitHub Repo：https://github.com/shubGupta10/AI-resume-builder 我为这个项目投入了大量精力，我很高兴终于能与社区分享它！请尝试一下并告诉我您的想法。我很乐意听到任何反馈、建议或改进想法。 我希望 BuildMyCV 能帮助您制作完美的简历并增加您获得梦想工作的机会。    提交人    /u/Kira_X_10   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1htd43w/introducing_buildmycv_your_ultimate_aipowered/</guid>
      <pubDate>Sat, 04 Jan 2025 12:10:01 GMT</pubDate>
    </item>
    <item>
      <title>Zulip Server 10 和 Zulip Flutter</title>
      <link>https://www.reddit.com/r/opensource/comments/1htbsrq/zulip_server_10_zulip_flutter/</link>
      <description><![CDATA[这里有人想讨论即将发布的 Zulip 团队聊天版本吗？Zulip Server 10 将于 2025 年 1 月底发布，Zulip Flutter 计划于 2 月底或之后发布。 您可以通过为 Zulip Flutter 测试版应用 (Android 和 iOS) 提供反馈来提供帮助。 如果有人感兴趣，我可以详细分享我作为翻译和 DevRel（社区代表）的贡献。我花了大约 30 天的时间才引起核心团队和第三方志愿者贡献者的关注。 为什么 Zulip 开源项目很有趣？因为 Google Summer of Code。每年都有 15 或 17 名新手得到指导，并有机会获得 3000 - 6600 美元的回报。这使得 Zulip 在印度等国家广受欢迎。 有人想分享使用 Zulip 软件、与 Zulip 团队互动以及为 Zulip 存储库做出贡献的自己的经验吗？    提交人    /u/sylvestris-   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1htbsrq/zulip_server_10_zulip_flutter/</guid>
      <pubDate>Sat, 04 Jan 2025 10:36:11 GMT</pubDate>
    </item>
    </channel>
</rss>