<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：开源</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有开源相关的 subreddit（就此而言，我们引用了此处开源的定义 http://en.wikipedia.org/wiki/Open_source）</description>
    <lastBuildDate>Sun, 08 Sep 2024 15:24:28 GMT</lastBuildDate>
    <item>
      <title>Homebox v0.14.1 发布！</title>
      <link>https://www.reddit.com/r/opensource/comments/1fbz204/homebox_v0141_released/</link>
      <description><![CDATA[Homebox v0.14.1 - 发布 什么是 Homebox Homebox 是专为家庭用户构建的库存和组织系统！Homebox 注重简洁性和易用性，是满足您家庭库存、组织和管理需求的完美解决方案。在开发此项目时，我们试图牢记以下原则：  简单 - Homebox 设计简单易用。无需复杂的设置或配置。使用单个 docker 容器或通过为您选择的平台编译二进制文件来自行部署。 极快 - Homebox 用 Go 编写，这使其速度极快并且部署所需的资源最少。一般而言，整个容器的空闲内存使用量不到 50MB。 便携 - Homebox 设计为便携的，可在任何地方运行。我们使用 SQLite 和嵌入式 Web UI 来简化部署、使用和备份。  更新 此更新包含许多修复和小解决方案，但它还包含一个巨大的更新，使 Homebox 更易于国际用户访问。我们终于为 Homebox 添加了 i18n 支持，允许用户以自己的语言使用 Homebox。现在还为时过早，我们已经翻译了大部分主页，我们将继续努力。 要使用翻译，只需打开 Homebox，就这么简单，它将使用您的浏览器设置为使用的任何默认语言设置。如果您的首选语言尚不可用，则可恢复为英语。如果您的语言尚不可用，请考虑贡献。对于那些已经做出贡献的人，包括那些已命名的人，以及那些在 Weblate 中没有 GitHub 链接的人（因此不会出现在提交消息中提及），非常感谢，我们不可能自己将 Homebox 翻译成这么多语言。请注意，我们仍处于过渡阶段，许多字符串仍然硬编码为英语。我们将继续致力于翻译整个应用程序。 此外，我们购买了 https://homebox.software 域名，为 Homebox 在互联网上提供自己的家。这不仅会使其更容易被 SEO 找到，而且还会使其更容易记住文档/主页的链接。此外，我们设置了一些子域名来重定向到各种网站，例如 https://git.homebox.software 用于 Github，https://discord.homebox.software 用于转到我们的 Discord 服务器，等等。 更改的内容  由 @victorhooi 在 #149 中修复标签讨论线程 URL 中的小拼写错误&gt; 由 @blessedbiped 在 #152 由 @rpavlik 在 #154 中修复了工具页面 由 @tankerkiller125 在 #155 中增加了 i18n 初始支持 由 @101br03k 在 #158 [语言更新] 意大利语和德语的前端翻译由 @lukasitaly 在 #170 中完成 添加电子邮件验证器由 @RomuloGatto 在 #178 中完成 修复：CSV 导出不包含项目注释由 @LarssonOliver 在 #180 由 @cjmielke 在 #173 中添加了在项目创建模式中添加照片的功能  完整更新日志：v0.13.0...v0.14.0    提交人    /u/katos8858   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fbz204/homebox_v0141_released/</guid>
      <pubDate>Sun, 08 Sep 2024 14:27:53 GMT</pubDate>
    </item>
    <item>
      <title>亚历山大项目</title>
      <link>https://www.reddit.com/r/opensource/comments/1fby4vd/alexandrie_project/</link>
      <description><![CDATA[大家好，我想向大家介绍我过去几个月一直在做的一个小项目。这是一款专为课程和学生设计的笔记应用。目标是拥有一个不错的应用来组织不同的笔记，并通过内置工具（如代码片段、命令、快捷方式等）实现一定程度的生产力。因此，与 Notion 等应用不同，这里的主要优势是您可以专注于内容并立即获得格式良好的结果。 我之所以与你们分享它，是因为这是我完全托管且功能齐全的首批应用之一。因此，如果你们中的一些人喜欢这个项目，那么获得一些反馈或批评将非常棒——我真的很感兴趣！ 🤗 我将分享 GitHub 链接（自述文件中包含演示和插图）： https://github.com/Smaug6739/Alexandrie    提交人    /u/ConfidentCoffee827   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fby4vd/alexandrie_project/</guid>
      <pubDate>Sun, 08 Sep 2024 13:45:14 GMT</pubDate>
    </item>
    <item>
      <title>我应该将我的开源项目视为 SaaS 产品吗？</title>
      <link>https://www.reddit.com/r/opensource/comments/1fbw0h0/should_i_see_my_open_source_project_as_saas/</link>
      <description><![CDATA[大家好， 我一直在研究一个名为 RateShield 的开源项目，这是一个多功能的速率限制解决方案，旨在帮助开发人员管理 API 使用情况并防止滥用。它最初是一个附带项目，但已经发展成为我认为具有真正潜力的东西。我正在考虑是否将其进一步开发为 SaaS 产品，并希望得到您的反馈！ 🎯 为什么选择 RateShield？ 我构建 RateShield 是为了探索 API 的自定义速率限制，对于希望轻松实现速率限制策略的开发人员来说，它已成为一种方便的工具。 🌟 主要特点：  可自定义的限制：根据您的需要为每个 API 端点定制速率限制规则。 直观的仪表板：一个用户友好的界面，用于监控和管理速率限制。 轻松集成：可无缝集成到您现有基础架构中的中间件。  ⚙️ 用例：  防止 API 滥用：控制对 API 的请求数量，以避免滥用或恶意活动。 成本管理：帮助有效管理第三方 API 调用，以防止意外的超额成本。  🚀 支持的速率限制算法：  令牌桶 固定窗口计数器 （更多算法正在开发中！）  我的问题：&gt; 鉴于其功能和潜在用例，您是否认为将 RateShield 转变为 SaaS 产品具有足够的价值？还是我应该继续关注开源版本并围绕它建立一个社区？    提交人    /u/Sushant098123   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fbw0h0/should_i_see_my_open_source_project_as_saas/</guid>
      <pubDate>Sun, 08 Sep 2024 11:53:57 GMT</pubDate>
    </item>
    <item>
      <title>VS Code 不为人知的故事——一部迷你纪录片</title>
      <link>https://www.reddit.com/r/opensource/comments/1fbv7dz/the_untold_story_of_vs_code_a_mini_documentary/</link>
      <description><![CDATA[嗨，开源爱好者们！我刚刚发布了一部简短的纪录片，揭示了 VS Code 鲜为人知的历史，追溯了它的发展以及使其成为如今开源强国的关键时刻。 这是一部快速而深入的纪录片，从它的创建到沿途的一些争议。如果您对 VS Code 的幕后花絮感到好奇，或者只是喜欢了解更多有关开源工具的信息，我很乐意让您查看！ 这是迷你纪录片的链接：VS Code 不为人知的故事 如果能得到您的反馈或听听您自己使用 VS Code 的经历，那就太好了。让我们聊聊吧！   提交者    /u/deven_rathore   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fbv7dz/the_untold_story_of_vs_code_a_mini_documentary/</guid>
      <pubDate>Sun, 08 Sep 2024 11:02:35 GMT</pubDate>
    </item>
    <item>
      <title>用于查看和比较技术图纸的 FOSS 替代方案</title>
      <link>https://www.reddit.com/r/opensource/comments/1fbukvp/foss_alternative_for_viewing_and_comparing/</link>
      <description><![CDATA[是否有免费的开源替代软件可用于查看和比较不同的技术图纸？ 类似 ZG-View (https://zg-view.com) 的软件可以打开技术图纸文件 (TIFF、PDF、SVG 等)，对它们进行分层、导航、缩放、测量，并比较不同版本的变化？    提交人    /u/matiwi   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fbukvp/foss_alternative_for_viewing_and_comparing/</guid>
      <pubDate>Sun, 08 Sep 2024 10:19:54 GMT</pubDate>
    </item>
    <item>
      <title>寻求 RSS 提要源的建议。</title>
      <link>https://www.reddit.com/r/opensource/comments/1fbpoo7/seeking_suggestions_for_rss_feed_sources/</link>
      <description><![CDATA[我正在重建我的 RSS 源，想要获取有关开源的新闻和内容（更新、趋势、GNU 和 Linux 内容、法律事务、新应用、小工具、正在发生的运动等各类内容）。 我正在寻找信噪比高的可靠来源。 这里有人有什么建议吗？ 谢谢！    提交人    /u/_Floydimus   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fbpoo7/seeking_suggestions_for_rss_feed_sources/</guid>
      <pubDate>Sun, 08 Sep 2024 04:35:11 GMT</pubDate>
    </item>
    <item>
      <title>handy-messaging-framework4j（hmf4j）</title>
      <link>https://www.reddit.com/r/opensource/comments/1fbp14d/handymessagingframework4jhmf4j/</link>
      <description><![CDATA[HMF4J 是一个从应用程序中抽象出消息传递层的框架。它抽象了如何与不同的消息传递系统（如 Apache Kafka、Google Pubsub、MQTT 等）交互的细节……因此，该框架使您能够专注于核心应用程序细节，而无需花费精力与消息传递层集成。这还使您能够无缝地从一种消息传递服务切换到另一种消息传递服务。除了标准化消息层的核心功能外，HMF4J 还提供以下功能：  非常高效的调度程序，为开发人员在处理传入数据方面提供不同级别的灵活性 与多个消息系统无缝互操作 按顺序排列消息以避免竞争条件情况 标准化消息类型 使用打包的测试工具包和名为 Photon Messaging System 的内存消息系统对应用程序进行无缝测试  更多详细信息请点击此处 - https://handy-messaging-framework.github.io/handy-messaging4j-docs/     提交人    /u/aronsajan   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fbp14d/handymessagingframework4jhmf4j/</guid>
      <pubDate>Sun, 08 Sep 2024 03:54:49 GMT</pubDate>
    </item>
    <item>
      <title>我想在其他浏览器中使用 Edge 的工作区，所以我制作了一个 FOSS 扩展</title>
      <link>https://www.reddit.com/r/opensource/comments/1fbkcek/i_wanted_edges_workspaces_in_other_browsers_so_i/</link>
      <description><![CDATA[我非常喜欢 Microsoft Edge 的工作区，但我喜欢使用 Google Chrome。因此，我决定制作一个扩展程序，无需使用 Edge 即可复制大部分行为。 演示 gif 链接  Github repo Chrome 网上应用店 Firefox 插件商店     由   提交  /u/Elec0   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fbkcek/i_wanted_edges_workspaces_in_other_browsers_so_i/</guid>
      <pubDate>Sat, 07 Sep 2024 23:35:06 GMT</pubDate>
    </item>
    <item>
      <title>用于打印结构的 C 库</title>
      <link>https://www.reddit.com/r/opensource/comments/1fbfw0e/c_library_for_printing_structs/</link>
      <description><![CDATA[大家好， 你有没有想过用 C 语言打印一个结构体？我曾经想过，所以我决定为此建立一个库。 介绍 uprintf，一个用于打印结构体的单头 C 库（在 Linux 上）。 它旨在用于原型设计和调试，特别是对于具有大量状态和/或数据结构的程序。 创建它的实际原因是证明这个概念，因为它听起来不像是可以用 C 语言实现的东西。 除了一些限制外，它几乎可以打印任何东西。 最大的限制是无法打印动态分配的数组。这似乎是不可能的，所以如果你有什么想法，我很乐意听听。 第二个是它要求使用调试信息构建可执行文件，但考虑到它的预期用途，我认为这没有问题。 最后，它只适用于 Linux。虽然我还没有研究过其他操作系统，但可能可以扩展它，但我没有时间（现在）。 如果您有兴趣，请查看存储库。 如果您想知道它是如何工作的（并且不想阅读源代码），请告诉我。如果有足够多的人关心，我会写一个关于它的博客或视频。 感谢阅读！    提交人    /u/NaiveProcedure755   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fbfw0e/c_library_for_printing_structs/</guid>
      <pubDate>Sat, 07 Sep 2024 20:05:37 GMT</pubDate>
    </item>
    <item>
      <title>简历生成器，带有 Claude Made 定制模板</title>
      <link>https://www.reddit.com/r/opensource/comments/1fbcrpr/resume_builder_with_custom_claude_made_templates/</link>
      <description><![CDATA[        提交人    /u/DevoidSloth   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fbcrpr/resume_builder_with_custom_claude_made_templates/</guid>
      <pubDate>Sat, 07 Sep 2024 17:48:24 GMT</pubDate>
    </item>
    <item>
      <title>字体测试器：一个开源扩展，用于在任何网站或登录页面上测试和预览 1000 多种谷歌字体。</title>
      <link>https://www.reddit.com/r/opensource/comments/1fb9kr0/font_tester_an_opensource_extension_to_test_and/</link>
      <description><![CDATA[        提交人    /u/ArtleSa   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fb9kr0/font_tester_an_opensource_extension_to_test_and/</guid>
      <pubDate>Sat, 07 Sep 2024 15:30:41 GMT</pubDate>
    </item>
    <item>
      <title>视频时间戳</title>
      <link>https://www.reddit.com/r/opensource/comments/1fb4ezo/video_timstamper/</link>
      <description><![CDATA[是否有任何工具像视频播放器一样具有内置时间戳功能（有点像 Youtube），可以快速导航到当前时间和其他内容（我不介意手动写入时间戳的内容）    提交人    /u/General-Carrot-4624   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fb4ezo/video_timstamper/</guid>
      <pubDate>Sat, 07 Sep 2024 11:06:46 GMT</pubDate>
    </item>
    <item>
      <title>开源项目背后的面孔：Tim Jones 和 pg-boss</title>
      <link>https://www.reddit.com/r/opensource/comments/1faoqjh/the_faces_behind_open_source_projects_tim_jones/</link>
      <description><![CDATA[       由    /u/Martinsos  提交  [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1faoqjh/the_faces_behind_open_source_projects_tim_jones/</guid>
      <pubDate>Fri, 06 Sep 2024 20:11:07 GMT</pubDate>
    </item>
    <item>
      <title>termify - 一个使用 Python 和 curses 制作的开源 CLI Spotify 播放控制器。该项目仍处于早期开发阶段 - 欢迎贡献和建议</title>
      <link>https://www.reddit.com/r/opensource/comments/1fajz10/termify_an_open_source_cli_spotify_playback/</link>
      <description><![CDATA[      该项目仍处于开发阶段，但目前具有基本的播放控制以及播放设备选择。我计划添加许多新功能，如搜索、播放列表选择以及播放列表创建和管理。在 GitHub 存储库上关注或为项目做出贡献！ https://github.com/evanlaube/termify    提交人    /u/evanlaubster   [link] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fajz10/termify_an_open_source_cli_spotify_playback/</guid>
      <pubDate>Fri, 06 Sep 2024 16:50:22 GMT</pubDate>
    </item>
    <item>
      <title>RenameToIX - 具有恢复操作、宏等功能的开源 Gtk 文件重命名器</title>
      <link>https://www.reddit.com/r/opensource/comments/1fagllb/renametoix_open_source_gtk_file_renamer_with/</link>
      <description><![CDATA[RenameToIX 是一个开源 Gtk 文件重命名器，它支持与 Nemo、Nautilus 和 Thunar 文件管理器集成。 https://www.devtoix.com/en/projects/renametoix 功能： - GUI 和控制台模式。 - 恢复以前的重命名（在“设置”对话框中激活后）。 - 单击宏。 - 计数器、文件日期时间和扩展宏。 - 更改大小写。 - 计数器宏的起始索引。 - 可配置的宏列表。 - 重命名后发送通知（在“设置”对话框中激活后）。   由    /u/abentofreire  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fagllb/renametoix_open_source_gtk_file_renamer_with/</guid>
      <pubDate>Fri, 06 Sep 2024 14:30:36 GMT</pubDate>
    </item>
    </channel>
</rss>