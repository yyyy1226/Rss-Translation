<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：Opensource</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有与开源相关的所有内容的子reddit（在此上下文中，我们在此处删除开源的定义http://en.wikipedia.org/wiki/open_source）</description>
    <lastBuildDate>Sun, 23 Feb 2025 12:41:37 GMT</lastBuildDate>
    <item>
      <title>Bookenemy：一种体育博彩工具，用于分析投注机会和Booker错误。</title>
      <link>https://www.reddit.com/r/opensource/comments/1iw80e5/bookenemy_a_sports_betting_tool_to_analyze/</link>
      <description><![CDATA[      ＆＃32;提交由＆＃32; /u/u/kaizokugari     [link]  ＆＃32;   [注释] /table&gt;]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1iw80e5/bookenemy_a_sports_betting_tool_to_analyze/</guid>
      <pubDate>Sun, 23 Feb 2025 11:20:24 GMT</pubDate>
    </item>
    <item>
      <title>开源技术产品/硬件列表？</title>
      <link>https://www.reddit.com/r/opensource/comments/1iw7k1a/list_of_open_source_tech_productshardware/</link>
      <description><![CDATA[态刚刚发现了Ploopy，并带有开源的慕斯，轨迹球，触控板和耳机。我知道有很多开源软件很棒，但是我很想找到物理硬件的项目。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/radis290     [link]       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1iw7k1a/list_of_open_source_tech_productshardware/</guid>
      <pubDate>Sun, 23 Feb 2025 10:48:53 GMT</pubDate>
    </item>
    <item>
      <title>[v4.3.0发布！]现在转换器：美丽，开源，无广告的单元转换在您所有设备上</title>
      <link>https://www.reddit.com/r/opensource/comments/1iw780k/v430_released_converter_now_beautiful_opensource/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿reddit！ 👋 说实话，大多数单位和货币转换器都是……嗯，他们并不是赢得任何设计奖，是吗？而且甚至不要让我开始广告并令人困惑的界面！ 😩 回到2018年，我受够了。 “必须有更好的方法！”我想。因此，在咖啡因和健康的挫败感的推动下，我现在开始构建转换器。 快进到今天，我很想宣布转换器现在v4.3.0终于来了！ 🎉 用颤音构建（当它仍在beta中时，谈论信任未来！😉），转换器现在被设计为美丽，快速，完全免费和开源。没有广告，没有跟踪，只有触手可及的纯转换功率。 为什么要尝试转换器？直观：开始键入并立即看到所有单元的实时转换。   自定义您的工作流程：重新订购，隐藏和优先单位以完全符合您的转换需求。使其适合您。  内置计算器：需要在转换中进行一些快速数学吗？我们在每个屏幕上都可以覆盖您。  始终最新的货币：每日更新的汇率确保您始终使用最新数据。  美丽＆amp;适应性设计：遵循设备设置的动态主题，以及适合您风格的深色和轻型主题。   开源＆amp;以隐私为中心的：永远免费，无广告，零数据收集和完全开源。只需进行货币更新的Internet访问即可。 🌍真正的多平台：在任何地方使用它！转换器现在可用于：   - 📱 android ： [Play Store]   -   [f-droid] /最新“ github上的apk”     - 🐧  linux ： [flatpak link]   -    -   [appimage]   -   &gt;  -   [github上的tar.gz] （x86_64＆amp; aarch64） ： [Microsoft Store]       - 🌐 web.app“&gt;  Web应用  ：（ wasm powered！）   - 🔧从源构建： [github repo]   我倒了很多对这个项目的热情和努力，我为转换器现在如何发展而感到自豪（由于出色的贡献者，现在转化为19种语言！）。我为自己和任何欣赏一个精心设计的，尊重隐私的工具的人建造了它。 现在让转换器立即v4.3.0旋转，让我知道您的想法！欢迎所有反馈，并有助于使其变得更好。 😊 快乐转换！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/damiano-ferrari     [link]    [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1iw780k/v430_released_converter_now_beautiful_opensource/</guid>
      <pubDate>Sun, 23 Feb 2025 10:25:39 GMT</pubDate>
    </item>
    <item>
      <title>我构建了一个开源Discord Bot，以立即从网站和Web应用程序收集反馈！</title>
      <link>https://www.reddit.com/r/opensource/comments/1iw6qha/i_built_an_open_source_discord_bot_to_instantly/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿devs！我构建了一个开源反馈bot ，它使您可以从网站或Web应用程序中收集用户反馈，并立即将其发送到 Discord Channel 。 🎯  为什么？ 用户反馈至关重要，但是检查电子邮件或仪表板可能会很麻烦。使用此机器人，反馈直接直接进入您的Discord Server。  自动启动到Discord &lt; /strong&gt;  - 无需检查多个位置✅完全开源&lt; /stronce &lt; /strong&gt;和可自定义的✅没有复杂的设置 - 只需部署并开始收集反馈！  它的工作原理： 您的前端使一个简单的发布请求， bot处理其余的。   未来计划： 🔜电报支持🔜多平台多平台反馈收集 查看它＆amp;让我知道您的想法！ 🚀  github ： https://github.com/kethakav/kethakav/feedback-bot-bot   如果您发现它有用，在github上删除a⭐  - 它很有帮助！ 💙很想听听您的反馈（具有讽刺意味的，对吗？提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1IW6QHA/I_BUILT_AN_AN_OPEN_SOURCE_DISCORD_BOT_BOT_BOT_TO_INSTESTER/”&gt; [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1iw6qha/i_built_an_open_source_discord_bot_to_instantly/</guid>
      <pubDate>Sun, 23 Feb 2025 09:52:07 GMT</pubDate>
    </item>
    <item>
      <title>零开放式推理器：AI培训效率的突破与DeepSeek相匹配，只有1/30个训练步骤 - 包括Kai-Fu Lee，Harry Shum和Xiangyu Zhang Zhang Zhang umeveil革命开放式开放式培训方法，包括AI的主要人物。</title>
      <link>https://www.reddit.com/r/opensource/comments/1iw6jya/open_reasoner_zero_a_breakthrough_in_ai_training/</link>
      <description><![CDATA[     ＆＃32;提交由＆＃32; /u/u/xyz_labs     [link]  ＆＃32;   [注释]   /table&gt;]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1iw6jya/open_reasoner_zero_a_breakthrough_in_ai_training/</guid>
      <pubDate>Sun, 23 Feb 2025 09:38:43 GMT</pubDate>
    </item>
    <item>
      <title>最佳开源电子邮件客户端？</title>
      <link>https://www.reddit.com/r/opensource/comments/1ivvrx1/best_open_source_email_client/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  最佳开源电子邮件客户端是什么？我正在寻找的某些功能：   免费   支持多个电子邮件地址（gmail，我自己的域等， ）   清洁，现代UI。   谢谢！  &lt;！ sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1ivvrx1/best_open_source_email_client/”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ivvrx1/best_open_source_email_client/</guid>
      <pubDate>Sat, 22 Feb 2025 23:09:17 GMT</pubDate>
    </item>
    <item>
      <title>有任何初学者友好的项目要贡献吗？</title>
      <link>https://www.reddit.com/r/opensource/comments/1ivu6ff/any_beginner_friendly_projects_to_contribute_to/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我是React开发人员，我与JS和TS一起工作，我可以做些什么好项目？ （我的第一次）  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/trashinitial8529   href =“ https://www.reddit.com/r/opensource/comments/1ivu6ff/any_beginner_friendly_projects_to_to_contribute_to/”&gt; [link]       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ivu6ff/any_beginner_friendly_projects_to_contribute_to/</guid>
      <pubDate>Sat, 22 Feb 2025 21:55:32 GMT</pubDate>
    </item>
    <item>
      <title>Shijima -QT-用于在Windows，MacOS和Linux上运行Shimeji桌面宠物的开源应用程序。 Shimeji-EE的轻巧，跨平台且易于使用的替代品。</title>
      <link>https://www.reddit.com/r/opensource/comments/1ivtjfb/shijimaqt_open_source_app_for_running_shimeji/</link>
      <description><![CDATA[      ＆＃32;提交由＆＃32; /u/u/pxomr     [link]  ＆＃32;   [注释] /table&gt;]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ivtjfb/shijimaqt_open_source_app_for_running_shimeji/</guid>
      <pubDate>Sat, 22 Feb 2025 21:26:27 GMT</pubDate>
    </item>
    <item>
      <title>DB29应用 - 创建其他OSS WebApp</title>
      <link>https://www.reddit.com/r/opensource/comments/1ivt2ua/db29_app_create_other_oss_webapp/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好， 我创建一个OpenSource Web应用程序来管理其他Web应用程序 https://db29.ovh/ （ https://github.com/db29-oss/db29-app ）。 您可以在这里查看它的工作原理 https://www.youtube.com/watch?v=nr7gx93maza （1M 30S）。 &gt;使用您自己的域，并且支持您自己的服务器。 如果您有疑问或请求，请让我知道！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/kocoten1992     [link]   ＆＃32;   [commist]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ivt2ua/db29_app_create_other_oss_webapp/</guid>
      <pubDate>Sat, 22 Feb 2025 21:05:59 GMT</pubDate>
    </item>
    <item>
      <title>构建了一个使用Piper TTS引擎的开源自托管TTS API，并允许用户输入长输入，在音频中添加暂停并直接将文件写入AWS S3存储桶。在CPU和GPU上快速运行。</title>
      <link>https://www.reddit.com/r/opensource/comments/1ivqv35/built_an_opensource_selfhosted_tts_api_that/</link>
      <description><![CDATA[      ＆＃32;提交由＆＃32; /u/u/ecstatic_papaya_1700      [link]  ＆＃32;   [注释] /table&gt;]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ivqv35/built_an_opensource_selfhosted_tts_api_that/</guid>
      <pubDate>Sat, 22 Feb 2025 19:28:47 GMT</pubDate>
    </item>
    <item>
      <title>Pykomodo-平行代码块</title>
      <link>https://www.reddit.com/r/opensource/comments/1ivlsho/pykomodo_a_parallel_code_chunker/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   我的项目做什么&lt; /strong&gt;  pykomodo是一种基于Python的工具，可与大型代码库的代码块并行化。它支持传统的基于线的分裂和基于的基于的“语义”   .py  files的方法 - 因此，顶级函数和类都不会在多个多个范围内分开块。当我不久前做Pykomodo时，此功能仍在进行中。   它解决了什么问题？ 在处理庞大的存储库时（尤其是如果您将它们喂入大型语言模型或其他分析），这对块很有帮助文件成更易于管理的作品。  与其他可用块的比较矮人专注于某些功能    github和pypi        github ：[&lt; https://github.com/duriantaco/pykomodo]（＃）       pypi ： https://pypi.org/project/project/pykomodo/       &gt;   pip安装pykomodo == 0.0.4     目标受众    Python开发人员需要为LLM输入，存档..等 想要保留Python文件中的功能/类块的项目。  .py 文件（至少目前）：大单个功能保持不舒适。    dry-run 模式：请参阅哪些文件将被构成块在 螺纹块：加快大量存储库的扫描和文件读数。  增强的块（可选）可以消除冗余或计算相关性得分llm用法。  随时检查一下，实验并发送反馈或拉动请求！如果您觉得有用，请给我一颗星星，如果您想拿下来，请在此处给我留言。感谢您抽出宝贵的时间阅读！   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1ivlsho/pykomodo_a_a_parallel_code_code_chunker/”&gt; [link]    32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ivlsho/pykomodo_a_parallel_code_chunker/</guid>
      <pubDate>Sat, 22 Feb 2025 15:55:38 GMT</pubDate>
    </item>
    <item>
      <title>有哪些良好的开源工具可以汇总信息？</title>
      <link>https://www.reddit.com/r/opensource/comments/1ivit7d/what_are_some_good_open_source_tools_to_summarize/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我想探索开源工具，这些工具总结了不同类型的信息，例如从文本中创建单词云，来自视频的缩略图等。您知道吗？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/soundofe     [link]  &lt;a href =“ https://www.reddit.com/r/opensource/comments/comments/1ivit7d/what_are_are_some_good_good_open_source_tools_tools_to_summarize/]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ivit7d/what_are_some_good_open_source_tools_to_summarize/</guid>
      <pubDate>Sat, 22 Feb 2025 13:32:50 GMT</pubDate>
    </item>
    <item>
      <title>Peazip 10.3.0发布！</title>
      <link>https://www.reddit.com/r/opensource/comments/1ivfnny/peazip_1030_released/</link>
      <description><![CDATA[       ＆＃32;提交由＆＃32; /u/u/peazip     [link]  ＆＃32;   [注释]       &lt; /table&gt;]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ivfnny/peazip_1030_released/</guid>
      <pubDate>Sat, 22 Feb 2025 10:12:03 GMT</pubDate>
    </item>
    <item>
      <title>N8N但是开源？</title>
      <link>https://www.reddit.com/r/opensource/comments/1iv9764/n8n_but_open_source/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好。  我想知道是否有N8N，相关性或制造的东西是真正的开源（最好是MIT许可证，最好或免费用于商业用途）。优选使用兰班链或下面一些类似的既定框架。  如今，在这个令人费解的平台中很难找到一些东西。  我非常感谢任何想法/提示！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/beanjaminbuxbaum     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1iv9764/n8n_but_open_source/</guid>
      <pubDate>Sat, 22 Feb 2025 03:13:47 GMT</pubDate>
    </item>
    <item>
      <title>我在C中建造了一个正则表达式解析器，并开源了！</title>
      <link>https://www.reddit.com/r/opensource/comments/1iv5cl9/i_built_a_regex_parser_in_c_and_opensourced_it/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  自从我们谈论大学班上的解析和正则表达以来，我对这个概念着迷。我也是低级编程的粉丝，主要是C，因为我喜欢挑战自己，以使自己的代码尽可能快，高效。所以，我坐下来思考。很长一段时间。 挑战 正则表达式 - ＆gt; DFA  任何熟悉正则表达式的人都知道，要实际利用它们，就需要构建一个所谓的确定性有限自动机。任何保持状态并使用输入来确定下一个状态的事物都可以以这种方式调用。最流行的用法是在那些情况下，您想将字符串与正则表达式或简单的单词匹配。如果机器登陆的最后一个状态是所谓的“最终状态”，则意味着该单词与输入匹配。 自动构建状态机机器本身已经是一个挑战。正则表达式可能会被肿，也需要简化。为了实现这一目标，我找到了一个视频，讨论了正则表达式的推导。正是我想要的。输入分解为单个字符，正则表达式的树被递归地得出，直到整个表达式为空或null（匹配）。 为此，我首先实现了正则表达式树。挑战之一是表达式的优化，特别是被简化为一个的或表达式，因为“ a或a”匹配与“ a”相同的表达式。我可以让程序下降到树上比较分支，但这将非常激烈，因此我为每个节点提供了一个唯一的哈希，该节点从底部到顶部都构建。 以构建从树上的DFA（直接匹配的树是性能的噩梦），整个字母（在我的情况下，可打印的ASCII）与这棵树匹配，并将子树存储在一个简单的hashmap中。如果树节点为null，则各个状态现在是最终的。 字符串 - ＆gt;正则表达式 这是项目的简单部分。为了甚至建造一棵树，必须对字符串解析（和令牌化）。那就是事情变得非常松脆的时候。为了从某个地方开始，我构建了一个简单的数据架构，其行为像磁带一样，可以一个一个人寻求，但也能够将字符插入lookahead的目的。然后，我构建了一个用于扫描和分开结构的输入的循环外，什么都没有使用。 下一步是找到一个相对简单的解析器算法，a，我找到了一个称为＆quot＆quot ; pratt-parser;或“递归血统解析器”。我在这里不会详细介绍太多细节，但是从本质上讲，解析器使用循环和不同令牌的先例来递归下降或添加子树。现在，这两种策略允许从字符串转换为正则表达树，再到DFA。 输入 - ＆gt;匹配 最后一个方面相当简单，现在程序只需要迭代输入并将其与给定的DFA匹配一次或连续。 您可以在此处找到该项目： https://github.com/ofcdune/regex-parser    我感谢任何类型的反馈/批评。我必须承认，我对OSS有点陌生，并且独自完成了所有这些工作，因此在程序的某些地方可能没有完善的外观。这些功能应至少记录在一个句子中，包括输入输出说明。  p.s。我试图尽可能靠近PCRE，但是在某个时候，我已经停下来了，因为我已经觉得这对一个人来说已经足够了。我从来没有计划过它可以被漫步地使用，但是也许这篇文章会激励我实际获取（有点尘土飞扬的）代码并继续使用更多。  &lt;！ -  sc_on-&gt;＆＃ 32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1iv5cl9/i_built_a_regex_regex_parser_in_in_in_in_c_and_opensourcerced_it/”&gt; [link]  &lt;a href =“ https://www.reddit.com/r/opensource/comments/1iv5cl9/i_built_a_regex_regex_carser_in_in_in_c_and_opensourced_it/]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1iv5cl9/i_built_a_regex_parser_in_c_and_opensourced_it/</guid>
      <pubDate>Fri, 21 Feb 2025 23:44:10 GMT</pubDate>
    </item>
    </channel>
</rss>