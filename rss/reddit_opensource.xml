<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：开源</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有开源相关的 subreddit（就此而言，我们引用了此处开源的定义 http://en.wikipedia.org/wiki/Open_source）</description>
    <lastBuildDate>Thu, 08 Aug 2024 06:30:27 GMT</lastBuildDate>
    <item>
      <title>Ragable：简化 RAG 应用程序开发的开源工具包</title>
      <link>https://www.reddit.com/r/opensource/comments/1emyt25/ragable_the_opensource_toolkit_that_simplifies/</link>
      <description><![CDATA[Ragable 是一个易于使用的代理工作流工具包，您可以在其中声明纯 Python 函数并让 LLM 根据用户的输入动态调用这些函数。 该工具包还包括对 Qdrant 和矢量嵌入的完全支持，因此您可以轻松地从 PDF 和其他文档格式中提取数据，并使用 Agent 工作流查询该数据。 项目链接：https://github.com/plexcorp-pty-ltd/ragable 用例：  PDF 聊天机器人 多工作流聊天机器人：您可以在这里构建表单和自定义工作流，例如为商店接受订单。 语音 AI：我已经基于 Ragable 和 Twilio 媒体流构建了一个语音 AI 系统。 搜索引擎：您可以矢量嵌入您的产品或其他文档并执行相似性搜索。  如果您觉得这有用，请 star 并分享 repo。我将非常感谢您的支持，这将帮助我继续开发 Ragable。    提交人    /u/KevinCoder   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1emyt25/ragable_the_opensource_toolkit_that_simplifies/</guid>
      <pubDate>Thu, 08 Aug 2024 06:23:56 GMT</pubDate>
    </item>
    <item>
      <title>我们如何将构建过程从超过 24 小时的噩梦中拯救出来（交叉发布以提高可见性）</title>
      <link>https://www.reddit.com/r/opensource/comments/1emy7rm/how_we_rescued_our_build_process_from_24_hour/</link>
      <description><![CDATA[  由    /u/DrowsyTiger22  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1emy7rm/how_we_rescued_our_build_process_from_24_hour/</guid>
      <pubDate>Thu, 08 Aug 2024 05:46:08 GMT</pubDate>
    </item>
    <item>
      <title>构建开源 Uber Eats 副本，提供完整的结账和管理功能（链接见评论）</title>
      <link>https://www.reddit.com/r/opensource/comments/1emg8zy/built_opensource_uber_eats_copy_with_full/</link>
      <description><![CDATA[        由    /u/amoopa  提交  [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1emg8zy/built_opensource_uber_eats_copy_with_full/</guid>
      <pubDate>Wed, 07 Aug 2024 16:25:09 GMT</pubDate>
    </item>
    <item>
      <title>反人工智能许可证</title>
      <link>https://www.reddit.com/r/opensource/comments/1emdqmy/antiai_license/</link>
      <description><![CDATA[是否有任何开源许可证限制AI/LLM使用许可软件？ 要预防的情况：  直接执行许可代码的AI/LLM 使用许可代码进行训练和/或检索的AI/LLM 实现许可证涵盖的算法的AI/LLM，无论实现方式如何  如果存在此类许可证，有哪些机制可用于执行它们并追回侵权系统的损失？  编辑 谢谢大家的回答。是的，我正在开展一个项目，我想防止它被AI吸收用于训练和使用（它是一个语义代码分析器，可以帮助人类可视化和理解他们的代码库）。根据反馈，我似乎无法在真正的开源许可证下发布代码，并且不会受到任何类型的反 AI/LLM 限制。    提交人    /u/RealSharpNinja   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1emdqmy/antiai_license/</guid>
      <pubDate>Wed, 07 Aug 2024 14:49:13 GMT</pubDate>
    </item>
    <item>
      <title>AdminForth - 带有 Vue 组件和 Tailwind 的 MIT Admin 框架</title>
      <link>https://www.reddit.com/r/opensource/comments/1emasyt/adminforth_mit_admin_framework_with_vue/</link>
      <description><![CDATA[  由    /u/Outrageous-Medium-49  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1emasyt/adminforth_mit_admin_framework_with_vue/</guid>
      <pubDate>Wed, 07 Aug 2024 12:44:10 GMT</pubDate>
    </item>
    <item>
      <title>开源的未来</title>
      <link>https://www.reddit.com/r/opensource/comments/1eltxn3/the_future_of_open_source/</link>
      <description><![CDATA[        提交人    /u/jakepen   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1eltxn3/the_future_of_open_source/</guid>
      <pubDate>Tue, 06 Aug 2024 21:34:24 GMT</pubDate>
    </item>
    <item>
      <title>GUAC 采用 ClearlyDefined 的许可元数据</title>
      <link>https://www.reddit.com/r/opensource/comments/1elm51f/guac_adopts_license_metadata_from_clearlydefined/</link>
      <description><![CDATA[        提交人    /u/opensourceinitiative   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1elm51f/guac_adopts_license_metadata_from_clearlydefined/</guid>
      <pubDate>Tue, 06 Aug 2024 16:23:59 GMT</pubDate>
    </item>
    <item>
      <title>eslint-plugin-project-structure - 带有规则的 Eslint 插件，可帮助您实现可扩展、一致且经过深思熟虑的项目结构。</title>
      <link>https://www.reddit.com/r/opensource/comments/1elkcul/eslintpluginprojectstructure_eslint_plugin_with/</link>
      <description><![CDATA[大家好，我认为项目的有序性、一致性和可扩展性至关重要，我相信我并不是唯一一个这样认为的人。我想与大家分享我的图书馆，它专注于这些关键方面。它完全用 TypeScript 编写，允许您自动化基本规则的审查过程并提高项目质量，尤其是在大型团队中工作时。 eslint-plugin-project-structure 带有规则的 Eslint 插件将帮助您实现可扩展、一致且经过深思熟虑的项目结构。 ​​包含所有规则的游乐场。 规则： project-structure-folder-structure 对文件夹结构实施规则，以使您的存储库保持一致、有序且经过深思熟虑。 特点：  ✅ 文件夹结构验证（结构之外的任何文件/文件夹都将被视为错误）。 ✅ 文件夹和文件名验证。 ✅ 文件/文件夹名称大小写验证。 ✅ 文件/文件夹名称正则表达式验证。 ✅ 文件扩展名验证（支持所有扩展名）。 ✅ 继承父级名称（子级继承其所在文件夹的名称）。 ✅ 文件夹递归（您可以   健康项目的一个关键原则是防止创建庞大的依赖树， 删除或编辑一个功能会引发影响整个项目的连锁反应。 创建独立的模块以使您的项目可扩展且易于维护。 摆脱模块之间的依赖关系并创建真正独立的功能。 特点：  ✅ 创建独立的模块，您可以在其中控制可以导入的内容（例如✅ 禁用给定模块的外部导入（node_modules）（添加例外的选项）。 ✅ 引用 {dirname}，它允许您决定当前目录及其在模式中的级别。 ✅ 引用 {family}，它查找给定导入和当前文件之间的公共部分。 ✅ 支持非相对/相对导入。 ✅ 支持无扩展的导入。 ✅ 可重复使用的导入模式。  project-structure-naming-rules 强制执行命名规则。 特点：  ✅ 命名验证。 ✅ 支持类、类型、接口、枚举、变量、函数、箭头函数。 ✅ 继承文件名作为名称（可以选择添加自己的前缀/后缀或更改大小写）。 ✅ 删除文件名的部分内容。 ✅ 仅针对位于文件根目录中的名称类型（不嵌套）的命名规则。 ✅ 正则表达式验证 ✅ 内置大小写验证。 ✅ 不同文件的不同命名规则。     提交人    /u/igorkowalski94   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1elkcul/eslintpluginprojectstructure_eslint_plugin_with/</guid>
      <pubDate>Tue, 06 Aug 2024 15:13:53 GMT</pubDate>
    </item>
    <item>
      <title>自托管调查代码</title>
      <link>https://www.reddit.com/r/opensource/comments/1elj4i4/selfhosted_surveys_as_code/</link>
      <description><![CDATA[最近，我构建了一个 Surveys as Code 平台，让您可以使用 Yaml 构建调查并将其部署为 Web 应用程序。 今天，我决定将其作为自托管平台开源。 您可以在这里查看：https://github.com/plutov/formulosity（欢迎任何形式的贡献）。    提交人    /u/der_gopher   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1elj4i4/selfhosted_surveys_as_code/</guid>
      <pubDate>Tue, 06 Aug 2024 14:24:04 GMT</pubDate>
    </item>
    <item>
      <title>骆驼的法律迷宫</title>
      <link>https://www.reddit.com/r/opensource/comments/1elh44g/llamas_legal_labyrinth/</link>
      <description><![CDATA[        提交人    /u/galgalesh   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1elh44g/llamas_legal_labyrinth/</guid>
      <pubDate>Tue, 06 Aug 2024 12:58:41 GMT</pubDate>
    </item>
    <item>
      <title>认识 SymCalc - 一个用于 C++ 和 Ruby 的数学库</title>
      <link>https://www.reddit.com/r/opensource/comments/1elgi6t/meet_symcalc_a_mathematical_library_for_c_and_ruby/</link>
      <description><![CDATA[大家好！ 我对数学、微积分、编程以及这些领域的结合非常感兴趣。从我学习微积分的那一刻起，我就想练习我的技能并构建一个很酷的微分库。 现在它已经完成了，我想与你们分享！ 描述 它被称为 SymCalc（代表符号微积分），这是一个目前可用于 Ruby 和 C++ 的库，它使使用数学函数变得轻而易举。使用 SymCalc，您可以：  创建具有任意数量变量的数学函数 在特定变量值下评估这些函数 简化和打印函数 轻松区分函数。  该库使函数的定义和区分过程尽可能易读和简单！ 它的潜在用例是什么？ SymCalc 功能多样，可用于任何需要区分的地方。这里举几个例子：  求根算法：实现像 Newton-Raphson 或 Halley 方法这样的方法 深度学习：利用需要导数的梯度下降算法 教育：对于数学或编程新手来说，这是一个绝佳的工具，可以用它来试验函数或深入研究 SymCalc 的源代码。  主要优势 SymCalc 的主要优势之一是，您不需要在每次测试新内容时重写导数函数。一个简单的 .derivative() 函数调用就可以完成这项工作！ 检查一下！ 如果您有兴趣，可以访问 SymCalc 的网站 - https://symcalc.site - 了解从简介到示例的所有内容 SymCalc 是开源的，因此也可以在 GitHub 上的 symcalc/symcalc-cpp 和 symcalc/symcalc-ruby 下找到它。&gt; 我很高兴听到您对 SymCalc 的看法以及改进的潜在想法！ 感谢您查看这个项目！    提交人    /u/kyryloshy   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1elgi6t/meet_symcalc_a_mathematical_library_for_c_and_ruby/</guid>
      <pubDate>Tue, 06 Aug 2024 12:30:25 GMT</pubDate>
    </item>
    <item>
      <title>我为 Flask 应用制作了一个名为“Create Flask App”的快速入门模板</title>
      <link>https://www.reddit.com/r/opensource/comments/1eldznw/i_made_a_quickstart_template_for_flask_apps/</link>
      <description><![CDATA[大家好！ 我创建了一个名为 Create Flask App 的项目，以帮助您快速设置和扩展 Flask 应用程序。它带有用户身份验证（注册、登录、注销）、配置文件管理和基本管理页面，全部使用 Bootstrap 5.3.3 进行样式设置。默认情况下，它使用 SQLite3，但您可以轻松配置它以使用您喜欢的数据库。 查看它，如果您喜欢它，请给它一颗星，并让我知道您接下来希望看到哪些功能和/或随时做出贡献。您的反馈和建议非常棒！ 我将继续努力，添加新功能和改进。 👉 在 GitHub 上创建 Flask 应用程序 感谢您的关注！    提交人    /u/raulGLD   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1eldznw/i_made_a_quickstart_template_for_flask_apps/</guid>
      <pubDate>Tue, 06 Aug 2024 10:10:19 GMT</pubDate>
    </item>
    <item>
      <title>Sourdough 框架（开源酸面团书籍）</title>
      <link>https://www.reddit.com/r/opensource/comments/1elbscj/the_sourdough_framework_open_source_sourdough_book/</link>
      <description><![CDATA[        提交人    /u/the_bread_code   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1elbscj/the_sourdough_framework_open_source_sourdough_book/</guid>
      <pubDate>Tue, 06 Aug 2024 07:41:57 GMT</pubDate>
    </item>
    <item>
      <title>语音转语音工具</title>
      <link>https://www.reddit.com/r/opensource/comments/1elbpw1/speechtospeech_tool/</link>
      <description><![CDATA[有没有推荐的语音转语音开源项目可以在我的设备上运行（LLM 存储在本地）？ 我的需求是给它提供一个说法语和意大利语的人的音频文件，并将其输出为保留我的声音的英语。  如果有教程/youtube 演示将不胜感激。    提交人    /u/chribonn   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1elbpw1/speechtospeech_tool/</guid>
      <pubDate>Tue, 06 Aug 2024 07:37:28 GMT</pubDate>
    </item>
    <item>
      <title>Gossiphs：在几秒钟内构建代码存储库的文件级知识图谱，使 LLM 和人类能够轻松理解每个文件的完整上下文。</title>
      <link>https://www.reddit.com/r/opensource/comments/1elbntj/gossiphs_builds_a_filelevel_knowledge_graph_of/</link>
      <description><![CDATA[        提交人    /u/williamfzc   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1elbntj/gossiphs_builds_a_filelevel_knowledge_graph_of/</guid>
      <pubDate>Tue, 06 Aug 2024 07:33:40 GMT</pubDate>
    </item>
    </channel>
</rss>