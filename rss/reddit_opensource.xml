<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：开源</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有开源相关的 subreddit（就此而言，我们引用了此处开源的定义 http://en.wikipedia.org/wiki/Open_source）</description>
    <lastBuildDate>Thu, 03 Oct 2024 18:31:59 GMT</lastBuildDate>
    <item>
      <title>Al-dente - 极快的目录列表（比 find&fd 快 3 倍！）</title>
      <link>https://www.reddit.com/r/opensource/comments/1fvear5/aldente_an_extremely_fast_directory_listing/</link>
      <description><![CDATA[        由    /u/R3zn1kk 提交   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fvear5/aldente_an_extremely_fast_directory_listing/</guid>
      <pubDate>Thu, 03 Oct 2024 18:15:41 GMT</pubDate>
    </item>
    <item>
      <title>为 B2B 公司提供开源支持</title>
      <link>https://www.reddit.com/r/opensource/comments/1fvdgzj/opensource_support_for_b2b_companies/</link>
      <description><![CDATA[Zyg GitHub 动机  我想要一个专为以工程为中心的 B2B 公司设计的支持工具，这样我就可以为产品驱动的服务提供最好的支持。不是电子商务！  挫折  传统系统已经过时，并且更像为电子商务企业设计的。我想要一个更好的工具来管理 SaaS、科技公司的客户支持，这些公司的最终用户更注重技术和产品驱动。  我意识到最好的方法是将其构建为开源，现在是开源社区构建更多开放系统的时候了。 PS。寻找贡献者，热切寻求反馈。    提交人    /u/sanchitrk   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fvdgzj/opensource_support_for_b2b_companies/</guid>
      <pubDate>Thu, 03 Oct 2024 17:40:36 GMT</pubDate>
    </item>
    <item>
      <title>适用于您的 Web 项目的 HTML、CSS、JavaScript 中的十大图像库</title>
      <link>https://www.reddit.com/r/opensource/comments/1fva63l/top_10_image_galleries_in_html_css_javascript_for/</link>
      <description><![CDATA[  由    /u/shokatjaved  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fva63l/top_10_image_galleries_in_html_css_javascript_for/</guid>
      <pubDate>Thu, 03 Oct 2024 15:15:35 GMT</pubDate>
    </item>
    <item>
      <title>免费开源 Twitter 书签下载器 🐦💾</title>
      <link>https://www.reddit.com/r/opensource/comments/1fv8q0f/free_and_opensource_twitter_bookmark_downloader/</link>
      <description><![CDATA[大家好。我非常沮丧，因为没有解决方案可以直接下载我的 Twitter 书签，所以我构建了一个开源 chrome 扩展来实现这一点。我有 843 个书签，它可以下载所有书签，但如果你有更多的书签，它可能无法正常工作。我也听说过未经验证的人受到速率限制，所以一定要尝试限制。 代码：https://github.com/sahil-lalani/bookmark-export 介绍代码的操作视频：https://youtu.be/XPI1wjjQ-5U?si=i7B_9GBhUb8vDteX    提交人    /u/Loud-Position-9654   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fv8q0f/free_and_opensource_twitter_bookmark_downloader/</guid>
      <pubDate>Thu, 03 Oct 2024 14:12:53 GMT</pubDate>
    </item>
    <item>
      <title>关于分叉文化的一点思考：自己去分叉 - Documenso 博客</title>
      <link>https://www.reddit.com/r/opensource/comments/1fv6vis/a_small_thought_piece_about_forking_culture_go/</link>
      <description><![CDATA[        由    /u/timurercan31  提交  [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fv6vis/a_small_thought_piece_about_forking_culture_go/</guid>
      <pubDate>Thu, 03 Oct 2024 12:46:39 GMT</pubDate>
    </item>
    <item>
      <title>krita 还是 gimp？</title>
      <link>https://www.reddit.com/r/opensource/comments/1fv3cqc/krita_or_gimp/</link>
      <description><![CDATA[  由    /u/Limp_Replacement_596  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fv3cqc/krita_or_gimp/</guid>
      <pubDate>Thu, 03 Oct 2024 08:59:31 GMT</pubDate>
    </item>
    <item>
      <title>一个免费的开源电子邮件编辑器和模板生成器。</title>
      <link>https://www.reddit.com/r/opensource/comments/1fv21n4/a_free_and_open_source_email_editor_and_template/</link>
      <description><![CDATA[演示：https://designer.sendune.com/  代码：https://github.com/SendWithSES/Drag-and-Drop-Email-Designer 电子邮件的 HTML 可能是最难编写的代码。即使是规则的微小偏差也会在操作系统/桌面/移动客户端的无数组合中破坏电子邮件。 现在是 2024 年中期。电子邮件发明已有近 50 年，HTML 诞生已有 35 年。“基本开源 HTML 电子邮件设计器”一定是一个已解决的问题，对吧？我们也这么认为。 遗憾的是，事实并非如此。 有一些不错的开源电子邮件设计器，但它们带有依赖项，这使得它们很难嵌入到您的应用程序中。这就是我们决定开源 HTML 电子邮件设计器的原因。 SENDUNE 电子邮件设计器专注于简单性和易用性。它很轻量。它只处理纯 HTML - 没有像 mjml 这样的中间代码管理器。没有任何形式的锁定。将 HTML 输出保存为模板并与任何电子邮件服务提供商一起使用。 请随意分叉存储库、进行改进和提交拉取请求。    提交人    /u/Karmaseed   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fv21n4/a_free_and_open_source_email_editor_and_template/</guid>
      <pubDate>Thu, 03 Oct 2024 07:12:00 GMT</pubDate>
    </item>
    <item>
      <title>介绍（真正）简单的商务 - 我开源了我多年来使用的商店软件</title>
      <link>https://www.reddit.com/r/opensource/comments/1fv1qun/introducing_really_simple_commerce_i_open_sourced/</link>
      <description><![CDATA[        由    /u/iambillz 提交   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fv1qun/introducing_really_simple_commerce_i_open_sourced/</guid>
      <pubDate>Thu, 03 Oct 2024 06:49:20 GMT</pubDate>
    </item>
    <item>
      <title>PyTraceToIX - 用于调试 lambda、列表推导、方法链和表达式的 Python 表达式跟踪器。</title>
      <link>https://www.reddit.com/r/opensource/comments/1fuvvgg/pytracetoix_a_python_expression_tracer_for/</link>
      <description><![CDATA[PyTraceToIX 是一个表达式跟踪器，用于调试 lambda、列表推导、方法链和表达式。 代码编辑器无法在表达式、lambda 函数、列表推导和链式方法内设置断点，从而迫使进行重大代码更改才能调试此类代码。 PyTraceToIX 为这个问题提供了一个简单的解决方案。 它的设计很简单，具有易于识别的函数，一旦发现错误就可以将其删除。 PyTraceToIX 有 2 个主要功能：  c__ 捕获表达式输入的输入。例如：c__(x) d__ 显示表达式的结果和所有捕获的输入。例如：d__(c__(x) + c__(y))  以及 2 个可选函数：  init__ 初始化显示格式、输出流和多线程。 t__ 为当前线程定义一个名称。  特点  多线程支持。 简洁、简短的极简函数名。 带有输入跟踪的结果。 可在全局级别和函数级别配置格式。 可配置结果和输入命名。 输出到 stdout 或流。 多个级别。 使用 allow 和 name 回调捕获输入方法。  ​ #!/usr/bin/env python3 from pytracetoix import d__, c__ [x, y, w, k, u] = [1, 2, 3, 4 + 4, lambda x:x] # 表达式 z = x + y * w + (k * u(5)) # 显示没有输入的表达式 z = d__(x + y * w + (k * u(5))) # 输出：# _:`47` # 显示有输入的表达式结果 z = d__(c__(x) + y * c__(w) + (k * u(5))) # 输出：# i0:`1` | i1:`3` | _:`47` # 显示表达式内带有输入的表达式结果 z = d__(c__(x) + y * c__(w) + d__(k * c__(u(5), level=1))) # 输出：# i0:`5` | _:`40` # i0:`1` | i1:`3` | _:`47` # lambda 函数 f = lambda x, y: x + (y + 1) f(5, 6) # 显示 lambda 函数结果和输入 f = lambda x, y: d__(c__(x) + c__(y + 1)) f(5, 6) # 输出：# i0:`5` | i1:`7` | _:`12` # 显示 lambda 函数输入和结果，以及输入和结果名称 f = lambda x, y: d__(c__(x, name=&#39;x&#39;) + c__(y + 1, name=&#39;y+1&#39;), name=&#39;f&#39;) f(5, 6) # 输出：# x:`5` | y+1:`7` | f:`12` # 列表推导式 l = [5 * y * x for x, y in [(10, 20), (30, 40)]] # 显示列表推导式，以及输入和结果名称 l = d__([5 * c__(y, name=f&quot;y{y}&quot;) * c__(x, name=lambda index, _, __: f&#39;v{index}&#39;) for x, y in [(10, 20), (30, 40)]]) # 输出：# y20:`20` | v1:`10` | y40:`40` | v3:`30` | _:`[1000, 6000]` # 如果 `input count` 为 2，则显示表达式 d__(c__(x) + c__(y), allow=lambda data: data[&#39;input_count__&#39;] == 2) # 如果第一个输入值为 10.0，则显示表达式 d__(c__(x) + c__(y), allow=lambda data: data[&#39;i0&#39;] == 10.0) # 如果 `allow_input_count` 为 2，则显示表达式，在这种情况下，如果 `x &gt; 10` d__(c__(x, allow=lambda index, name, value: value &gt; 10) + c__(y), allow=lambda data: data[&#39;allow_input_count__&#39;] == 2) # 如果生成的输出包含文本 10，则显示表达式 d__([c__(x) for x in [&#39;10&#39;, &#39;20&#39;]], before=lambda data: &#39;10&#39; in data[&#39;output__&#39;]) # 如果允许显示，则显示表达式和调用后 `call_after` d__([c__(x) for x in [&#39;10&#39;, &#39;20&#39;]], allow=lambda data: data[&#39;allow_input_count__&#39;] == 2, after=lambda data: call_after(data) if data[&#39;allow__&#39;] else &quot;&quot;) class Chain: def __init__(self, data): self.data = data def map(self, func): self.data = list(map(func, self.data)) return self def filter(self, func): self.data = list(filter(func, self.data)) return self # 具有链式方法的类 Chain([10, 20, 30, 40, 50]).map(lambda x: x * 2).filter(lambda x: x &gt; 70) # 显示结果并捕获映射和过滤输入 d__(Chain([10, 20, 30, 40, 50]).map(lambda x: c__(x * 2)).filter(lambda x: c__(x &gt; 70)).data) # 输出： # i0:`20` | i1:`40` | i2:`60` | i3:`80` | i4:`1​​00` | i5:`False` | i6:`False` | i7:`False` | i8:`True` | i9:`True` | _:`[80, 100]`     提交人    /u/abentofreire   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fuvvgg/pytracetoix_a_python_expression_tracer_for/</guid>
      <pubDate>Thu, 03 Oct 2024 00:58:18 GMT</pubDate>
    </item>
    <item>
      <title>对 AGPL 的常见误解</title>
      <link>https://www.reddit.com/r/opensource/comments/1fuq6ls/common_misconceptions_of_the_agpl/</link>
      <description><![CDATA[  由    /u/ssddanbrown  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fuq6ls/common_misconceptions_of_the_agpl/</guid>
      <pubDate>Wed, 02 Oct 2024 20:28:25 GMT</pubDate>
    </item>
    <item>
      <title>这可能是我收到过措辞最严厉的邮件之一。我现在还浑身发抖。</title>
      <link>https://www.reddit.com/r/opensource/comments/1fupgrn/probably_one_of_the_most_harshly_worded_issues/</link>
      <description><![CDATA[        由    /u/AmruthPillai 提交   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fupgrn/probably_one_of_the_most_harshly_worded_issues/</guid>
      <pubDate>Wed, 02 Oct 2024 19:57:57 GMT</pubDate>
    </item>
    <item>
      <title>支持互联网档案馆保存的民间努力</title>
      <link>https://www.reddit.com/r/opensource/comments/1fumh8y/grassroots_efforts_to_support_the_internet/</link>
      <description><![CDATA[草根努力可以通过满足网站的存档需求来支持互联网档案馆。这可以通过将他们与具有专业知识的律师联系起来，以建立与音乐、视频游戏和电影行业的共同点来实现。这种合作确保我们不会失去软件开发历史的宝贵进步，并有助于保存记录各自艺术形式演变的历史音乐和电影。否则，该网站可能会永久关闭，这将是毁灭性的。此外，我们必须加强与企鹅等主要出版商和其他可能试图关闭 Archive.org 的公司的谈判。失去对如此庞大的知识和文化库（尤其是稀有书籍和文本）的访问权，对人类来说将是重大损失。我们必须保护这些资源（其中一些资源已不再印刷），因为限制对知识的访问会阻碍进步。让我们团结起来，为子孙后代保护这个重要的档案馆。    提交人    /u/MisterTTS   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fumh8y/grassroots_efforts_to_support_the_internet/</guid>
      <pubDate>Wed, 02 Oct 2024 17:52:42 GMT</pubDate>
    </item>
    <item>
      <title>我创建了一个基于 Flask 的博客应用程序，它具有大量功能！🔥</title>
      <link>https://www.reddit.com/r/opensource/comments/1fulh2j/i_created_a_flaskbased_blog_app_with_tons_of/</link>
      <description><![CDATA[大家好！ 我只是想分享一个我一直在做的有趣的小项目 - FlaskBlog！这是一个用 Flask 构建的简单但功能强大的博客应用程序。 📝 它有什么酷的地方？  用于管理帖子的管理面板 明暗模式（因为谁不喜欢暗模式？） 带有个人资料图片的自定义用户个人资料 Google reCAPTCHA v3 可防止机器人入侵 Docker 支持，可轻松部署 多语言支持：🇬🇧 英语、🇹🇷 土耳其语、🇩🇪 德语、🇪🇸 西班牙语、🇵🇱 波兰语、🇫🇷 法语、🇵🇹 葡萄牙语、🇺🇦 Українська、🇷🇺 使用 TailwindCSS 进行移动友好设计 帖子类别、创建、编辑等等！ 通过 X（以前称为 Twitter）直接分享帖子 使用 Playwright 自动进行基本测试 所有帖子和评论的时区感知 发布横幅以获取更具吸引力的内容 在主页上轻松对帖子进行排序 具有多级日志的详细日志记录系统 安全的 SQL 连接和防 SQL 注入保护 包含示例数据（用户、帖子、评论）以便于测试  您只需几个步骤即可查看、克隆并运行它。我在构建过程中学到了很多东西，我为它的结果感到非常自豪！如果您喜欢 Flask 或只是在寻找一个简单的博客模板，请随意尝试一下。 很高兴收到您的反馈，如果您喜欢它，请不要忘记在 GitHub 上放一个 ⭐。😊 🔗 GitHub Repo 📽️ 预览视频 感谢您的关注！    提交人    /u/dogukanurker   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fulh2j/i_created_a_flaskbased_blog_app_with_tons_of/</guid>
      <pubDate>Wed, 02 Oct 2024 17:11:24 GMT</pubDate>
    </item>
    <item>
      <title>Hexabot - 具有多渠道、多语言和 AI 功能的开源可视化聊天机器人构建器</title>
      <link>https://www.reddit.com/r/opensource/comments/1fuj214/hexabot_opensource_visual_chatbot_builder_with/</link>
      <description><![CDATA[大家好！👋 我很高兴介绍我们的开源、低代码聊天机器人构建器 Hexabot！Hexabot 允许您通过直观的拖放界面创建自定义对话式 AI 流程，旨在使聊天机器人构建变得简单而强大。 我们的使命是发展我们的项目，并希望得到您的支持！⭐ 在 GitHub 上为我们加星标：https://github.com/hexastack/hexabot 期待收到您的反馈！🌱💻    提交人    /u/flesmih   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fuj214/hexabot_opensource_visual_chatbot_builder_with/</guid>
      <pubDate>Wed, 02 Oct 2024 15:33:17 GMT</pubDate>
    </item>
    <item>
      <title>MathMod-12.0</title>
      <link>https://www.reddit.com/r/opensource/comments/1fugqlu/mathmod120/</link>
      <description><![CDATA[MathMod-12.0 支持 Android 和 IOS 平台（MathMod 在 Google PlayStore 和 Apple AppStore），现可从 SourceForge 和 GitHub 下载。 MathMod-12.0 的变更日志： 1) 改进 GUI 以支持小屏幕格式： 2) 支持 Mandelbrot 和 Julia 分形函数 3) 新脚本：“Noids”、“k_Noids”、“Riemann_Minimal_Surface”、“MandelBulb”， &quot;MandelTemple&quot;、&quot;JuliaFractal&quot;、&quot;MandelbrotTorus&quot;、&quot;MandelbrotIsoSpheres&quot;、&quot;MandelbrotSphere&quot;、&quot;Mandelbrot&quot;、&quot;Spherical_Harmonics&quot;  玩得开心！    提交人    /u/parisolab   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1fugqlu/mathmod120/</guid>
      <pubDate>Wed, 02 Oct 2024 13:54:06 GMT</pubDate>
    </item>
    </channel>
</rss>