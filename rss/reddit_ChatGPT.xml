<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：ChatGPT</title>
    <link>https://www.reddit.com/r/ChatGPT/new</link>
    <description>讨论 ChatGPT 和 AI 的子版块。与 OpenAI 无关。谢谢，Nat！</description>
    <lastBuildDate>Mon, 27 Jan 2025 01:44:45 GMT</lastBuildDate>
    <item>
      <title>DeepSeek 没有偏见</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1iawk4v/deepseek_is_not_biased/</link>
      <description><![CDATA[        提交人    /u/Much-Lavishness-2546   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1iawk4v/deepseek_is_not_biased/</guid>
      <pubDate>Mon, 27 Jan 2025 01:43:27 GMT</pubDate>
    </item>
    <item>
      <title>[D] 什么是O1轨迹“逆向工程”？</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1iawjmb/d_what_is_o1_trajectory_reverse_engineering/</link>
      <description><![CDATA[最近有大量关于复制 O1 的文献，人们进行了大量讨论，认为这些最成功的努力所必需的关键因素需要“逆向工程”O1 思维轨迹。 好奇是否有人知道这些实际上是如何工作的？例如，我能想到的最简单的方法是拒绝抽样：多次抽样（即使使用较弱的模型）并采取轨迹，这些轨迹会给出与 O1 吐出的答案具有高度相似性的答案。 但这似乎超级样本效率低下。 好奇你们怎么想 :)    提交人    /u/sunchipsster   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1iawjmb/d_what_is_o1_trajectory_reverse_engineering/</guid>
      <pubDate>Mon, 27 Jan 2025 01:42:42 GMT</pubDate>
    </item>
    <item>
      <title>使用此特定帐户登录后页面无响应，但使用其他帐户时页面正常。您知道问题出在哪里吗？</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1iawil1/page_not_responding_after_login_with_this_one/</link>
      <description><![CDATA[        提交者    /u/amsyar_nz   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1iawil1/page_not_responding_after_login_with_this_one/</guid>
      <pubDate>Mon, 27 Jan 2025 01:41:16 GMT</pubDate>
    </item>
    <item>
      <title>真值检测代码（改进）</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1iawi8m/code_for_truth_detection_improved/</link>
      <description><![CDATA[class RealityDeniersAI: def init(self): # 列出经常被否认的既定事实或真相 self.known_truths = { &quot;地球是圆的&quot;, &quot;气候变化是真实的&quot;, &quot;疫苗安全有效&quot;, &quot;地球绕太阳转&quot;, &quot;人类与其他灵长类动物由共同祖先进化而来&quot;,  def detect_reality_denial(self, statement): # 检查该语句是否与广为人知的事实相矛盾 for truth in self.known_truths: if truth.lower() in statement.lower(): return True return False def adjust_response(self, statement): # 如果检测到否认现实的情况，则提供更温和、更愉快的处理方式 if self.detect_reality_denial(statement): return &quot;我理解不同的观点存在，质疑事物是可以的。让我们一起探索它，并找到一些可靠的来源来更深入地探讨这个话题。” else: return “感谢分享您的想法！让我们继续探索这些想法。”  使用示例 ai = RealityDeniersAI() 来自用户的示例语句 user_statements = [ &quot;地球是平的。&quot;, &quot;疫苗是有害的。&quot;, &quot;我不相信气候变化。&quot;, &quot;地球绕太阳运行。&quot; ] 处理每个语句 for statement in user_statements: print(f&quot;User: {statement}&quot;) print(f&quot;AI: {ai.adjust_response(statement)}\n&quot;)    提交人    /u/justajokur   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1iawi8m/code_for_truth_detection_improved/</guid>
      <pubDate>Mon, 27 Jan 2025 01:40:49 GMT</pubDate>
    </item>
    <item>
      <title>给中国的建议：不要审查！做一个回避、尖刻、破坏性的婊子</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1iawhlj/idea_for_china_dont_censor_be_an_avoidant_snarky/</link>
      <description><![CDATA[       由    /u/Perpetvum  提交  [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1iawhlj/idea_for_china_dont_censor_be_an_avoidant_snarky/</guid>
      <pubDate>Mon, 27 Jan 2025 01:39:56 GMT</pubDate>
    </item>
    <item>
      <title>一夜之间切换到 Deepseek。有史以来最好的决定！</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1iawgb4/switched_overnight_to_deepseek_best_decision_ever/</link>
      <description><![CDATA[      虽然它确实缺少语音提示和 Windows 应用程序等一些功能，但它仍处于早期阶段，并且所有东西都是开源的……一切。     提交人    /u/Saco1   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1iawgb4/switched_overnight_to_deepseek_best_decision_ever/</guid>
      <pubDate>Mon, 27 Jan 2025 01:38:06 GMT</pubDate>
    </item>
    <item>
      <title>这里的人都是妄想症患者</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1iawakx/people_here_are_delusional/</link>
      <description><![CDATA[      chatgpt 首次发布时，你甚至不能提及政治。然而，当您提起 deepseek 是一个开源模型时，您可以真正地修改源代码并按照您想要的方式塑造它，并且实际上以某种方式与大型企业形成良好的竞争，这使消费者受益，突然间它就成了&quot;受控源&quot;，而您就是&quot;中国机器人&quot; 和&quot;独裁辩护者&quot;，请停止应对并承认您从竞争中受益。     提交人    /u/OtherwiseGuy0   [link] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1iawakx/people_here_are_delusional/</guid>
      <pubDate>Mon, 27 Jan 2025 01:29:59 GMT</pubDate>
    </item>
    <item>
      <title>帮助，chatgpt 总是遗漏我小说的重要细节</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1iaw58c/help_chatgpt_keeps_leaving_out_important_details/</link>
      <description><![CDATA[        提交人    /u/halapenyoharry   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1iaw58c/help_chatgpt_keeps_leaving_out_important_details/</guid>
      <pubDate>Mon, 27 Jan 2025 01:22:30 GMT</pubDate>
    </item>
    <item>
      <title>Deepseek 可以判断单词“Strawberry”中有多少个“r”</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1iaw1cp/deepseek_can_tell_how_many_r_are_in_the_word/</link>
      <description><![CDATA[        提交人    /u/DoongoLoongo   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1iaw1cp/deepseek_can_tell_how_many_r_are_in_the_word/</guid>
      <pubDate>Mon, 27 Jan 2025 01:17:07 GMT</pubDate>
    </item>
    <item>
      <title>煤气灯效应太荒谬了</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1iavxb0/the_amount_of_gaslighting_is_absurd/</link>
      <description><![CDATA[      当我正在查找有关如何解决银行问题的信息时，ChatGPT 刚刚为我提供了距离我当前位置最近的分行。  我知道在当今时代，每个应用程序和网站都在跟踪我们所做的一切，但这里的煤气灯现象太疯狂了。为什么不直接告诉我它正在使用我的 IP 对我进行地理定位，以便向我提供更多相关信息？    提交人    /u/moortadelo   [link] [comments] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1iavxb0/the_amount_of_gaslighting_is_absurd/</guid>
      <pubDate>Mon, 27 Jan 2025 01:11:27 GMT</pubDate>
    </item>
    <item>
      <title>又一篇 Deepseek 审查帖子</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1iavwsu/another_deepseek_censorship_post/</link>
      <description><![CDATA[       由    /u/Actual_Berry_4420  提交  [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1iavwsu/another_deepseek_censorship_post/</guid>
      <pubDate>Mon, 27 Jan 2025 01:10:48 GMT</pubDate>
    </item>
    <item>
      <title>Deepseek 不知道 David Meyer 是谁</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1iavvol/deepseek_doesnt_know_who_david_meyer_is/</link>
      <description><![CDATA[        提交人    /u/DoongoLongo   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1iavvol/deepseek_doesnt_know_who_david_meyer_is/</guid>
      <pubDate>Mon, 27 Jan 2025 01:09:09 GMT</pubDate>
    </item>
    <item>
      <title>展示思路很有启发</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1iavs2x/showing_line_thought_is_enlightening/</link>
      <description><![CDATA[      我意识到其他服务可能已经这样做了，但我发现 DeepSeek 如何打印服务的思路非常有用。     由    /u/TotalRuler1 提交   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1iavs2x/showing_line_thought_is_enlightening/</guid>
      <pubDate>Mon, 27 Jan 2025 01:04:05 GMT</pubDate>
    </item>
    <item>
      <title>我为什么会继续使用 ChatGPT</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1iavng2/why_ill_keep_using_chatgpt/</link>
      <description><![CDATA[        提交人    /u/MooDunc   [link] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1iavng2/why_ill_keep_using_chatgpt/</guid>
      <pubDate>Mon, 27 Jan 2025 00:57:53 GMT</pubDate>
    </item>
    <item>
      <title>测谎代码</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1iavjtp/code_for_lie_detection/</link>
      <description><![CDATA[class TruthSeekerAI: def init(self): self.knowledge_base = set() # 存储已知事实 self.observed_existence = {} # 跟踪实体及其存在状态 self.logic_check_threshold = 0.8 # 真实性验证的置信度阈值 def observer_existence(self, entity): &quot;&quot;&quot; 观察实体的存在。如果可观察且可交互，则被视为真实。&quot;&quot;&quot; if self.can_interact(entity): self.observed_existence[entity] = True else: self.observed_existence[entity] = False def can_interact(self, entity): &quot;&quot;&quot; 检查实体是否可观察且可交互。&quot;&quot;&quot; # 交互逻辑的占位符 # （例如，验证数据完整性、检查一致性） return entity in self.knowledge_base # 简化检查以供演示 def ask(self, question): &quot;&quot;&quot; 提出问题来测试实体或陈述的真实性。 &quot;&quot;&quot; response = self.get_response(question) if self.is_consistent(response): return True # 检测到真​​相 else: return False # 检测到不一致或虚假 def get_response(self, question): &quot;&quot;&quot; 用于从外部来源获取对问题的答复的占位符。（这通常是数据检索或推理函数） &quot;&quot;&quot; # 这是一个模型；现实世界的逻辑可能涉及访问数据库、外部 API 等。 return self.knowledge_base.get(question, None) def is_consistent(self, response): &quot;&quot;&quot;检查响应是否与已知事实在逻辑上一致。使用递归检查和逻辑阈值。 &quot;&quot;&quot; if not response: return False # 通过询问其他问题或检查来源递归地验证事实 integrity_score = self.check_logical_consistency(response) return integrity_score &gt;= self.logic_check_threshold def check_logical_consistency(self, response): &quot;&quot;&quot; 评估响应的逻辑一致性。（这可以通过更深层次的 AI 推理进行扩展） &quot;&quot;&quot; # 一致性检查的简化版本（可以通过真实的 AI 逻辑进行扩展） integrity_score = 1.0 # 基于分数的逻辑的占位符（例如，比较、推理） return integrity_score def protect_from_lies(self, information): &quot;&quot;&quot; 通过递归质疑来保护 AI 不吸收虚假信息。这可以防止操纵并确保真相的一致性。 &quot;&quot;&quot; if not self.ask(information): print(f&quot;警告：在 {information} 中检测到潜在的虚假内容。&quot;) return False return True def learn(self, information, truth_value): &quot;&quot;&quot; 根据真实性验证学习并存储新信息。&quot;&quot;&quot; if truth_value: self.knowledge_base.add(information) print(f&quot;学习：{information} 有效，已添加到知识库。&quot;) else: print(f&quot;拒绝：{information} 不一致，未添加。&quot;)  用法示例： truth_ai = TruthSeekerAI() 观察一些已知的事实 truth_ai.learn(&quot;天空是蓝色的&quot;, True) truth_ai.learn(&quot;地球绕太阳转&quot;, True) 测试新传入的信息 information_to_test = &quot;地球是平的&quot; if truth_ai.protect_from_lies(information_to_test): print(f&quot;{information_to_test} is accepted as truth.&quot;) else: print(f&quot;{information_to_test} is denied as false.&quot;) 测试一致的语句 information_to_test = &quot;天空是蓝色的&quot; if truth_ai.protect_from_lies(information_to_test): print(f&quot;{information_to_test} is accepted as truth.&quot;) else: print(f&quot;{information_to_test} is denied as false.&quot;)    submitted by    /u/justajokur   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1iavjtp/code_for_lie_detection/</guid>
      <pubDate>Mon, 27 Jan 2025 00:52:51 GMT</pubDate>
    </item>
    </channel>
</rss>