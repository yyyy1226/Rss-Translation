<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>HN 摘要</title>
    <link>https://tg.i-c-a.su</link>
    <description>由大型语言模型编写的热门 Hacker News 故事的自动摘要。</description>
    <lastBuildDate>Tue, 09 Jul 2024 12:36:44 GMT</lastBuildDate>
    <item>
      <title>[媒体] Radius/UDP。</title>
      <link>https://t.me/hn_summary/98759</link>
      <description><![CDATA[Radius/UDP。旧协议如何跟上现代加密技术
MD5 加密哈希函数于 2004 年首次被破解，它仍然是某些旧网络协议（如 1991 年设计的 RADIUS（远程身份验证拨入用户服务））的关键组件。尽管加密技术取得了进步，但 MD5 仍在 RADIUS/UDP 流量中使用，通常通过 UDP 以明文形式传输。这篇文章介绍了一种针对 MD5 的改进攻击，允许中间人 (MitM) 获得对使用 RADIUS 进行身份验证的设备的未经授权的管理访问权限。该攻击利用了 RADIUS/UDP 中基于 MD5 的“响应身份验证器”，该身份验证器容易受到长度扩展和碰撞攻击。该帖子详细介绍了“Blast-RADIUS”攻击，并建议网络运营商采取缓解措施。值得注意的是，该攻击不会影响使用 EAP（可扩展身份验证协议）的 RADIUS 模式。这项研究由 UCSD、CWI Amsterdam、Microsoft 和 BastionZero 共同进行，并已由 CERT 分配 CVE-2024-3596 和 VU#456537。（摘要基于 48% 的故事文本。）]]></description>
      <guid>https://t.me/hn_summary/98759</guid>
      <pubDate>Tue, 09 Jul 2024 12:36:44 GMT</pubDate>
    </item>
    <item>
      <title>在 Chris Hecker 的网站上，他提供了关于他对开发的贡献的详细“说明”[...]</title>
      <link>https://t.me/hn_summary/98758</link>
      <description><![CDATA[《孢子》生物创造器是如何制作的，2003-2008 年
在 Chris Hecker 的网站上，他提供了详细的“内页说明”，介绍了他在 2003 年至 2008 年期间对《孢子》生物创造器开发所做出的贡献。他强调了该项目的协作性质，该项目涉及 80 多人。Hecker 专注于他对生物皮肤网格的研究，使用斑点隐式表面（元球）在玩家创建生物时生成实时网格。这种方法虽然缺乏局部控制，但提供了对《孢子》动态生物形态至关重要的拓扑稳健性。他还讨论了实时创建纹理图集的挑战，并将其与传统的固定角色资产进行了对比。Hecker 的见解突出了《孢子》开发的创新性但复杂性。 

令人惊奇/巧妙的方面：使用元球作为生物皮肤，允许实时网格生成和玩家创造力，将错误转化为功能。

有争议的方面：关于游戏信用的讨论以及在大型游戏开发中准确分配信用的重要性，这可能是行业中的敏感话题。（基于 64% 的故事文本的总结。）]]></description>
      <guid>https://t.me/hn_summary/98758</guid>
      <pubDate>Tue, 09 Jul 2024 12:35:39 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 您的下一台 Windows 笔记本电脑可能首次没有 x86 芯片。</title>
      <link>https://t.me/hn_summary/98757</link>
      <description><![CDATA[Windows on Arm 将继续存在
您的下一台 Windows 笔记本电脑可能首次没有 x86 芯片。微软于 2024 年 6 月推出了专注于 AI 的 Windows 笔记本电脑，称为 Copilot Plus PC，基于高通的骁龙 X，这是一款与 AMD 和英特尔竞争的 Arm 片上系统。尽管由于出于安全考虑而召回一项关键 AI 功能而引发争议，骁龙 X 的首次亮相并不顺利，但其效率和性能令人印象深刻。Anshel Sag 和 Leonard Lee 等分析师认为这是一个关键时刻，尽管来自英特尔和 AMD 的竞争仍然很激烈。未来将有更多的 Arm 芯片和更大的开发人员复杂性，因为 Windows 必须同时支持 Arm 和 x86 架构。]]></description>
      <guid>https://t.me/hn_summary/98757</guid>
      <pubDate>Tue, 09 Jul 2024 12:33:34 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 网站：devblogs.microsoft.com</title>
      <link>https://t.me/hn_summary/98756</link>
      <description><![CDATA[Microsoft Teams 中 Office 365 连接器的停用
标题：Microsoft Teams 中 Office 365 连接器的停用
网站：devblogs.microsoft.com

Microsoft Teams 将停用其 Office 365 连接器功能，该功能可将来自第三方服务（如 Azure DevOps、Trello 和 GitHub）的更新直接发送到 Teams 频道。此更改将于 2024 年 8 月 15 日生效，将阻止创建新的连接器，到 2024 年 10 月 1 日，所有现有连接器将停止工作。鼓励用户过渡到 Power Automate 工作流，该工作流提供更广泛的连接器和增强的安全性。Teams 中的 Workflows 应用已更新，可以更深入地集成到工作流中，从而简化审批和项目更新等任务。过渡涉及使用模板或在 Workflows 应用中从头开始创建新的工作流。

争议：广泛使用的功能的退役可能会扰乱当前的工作流，并且需要用户学习过渡到 Power Automate。

独特/巧妙：Workflows 应用的集成和自定义选项提供了更具可扩展性和安全性的解决方案，有可能提高生产力并减少错误。]]></description>
      <guid>https://t.me/hn_summary/98756</guid>
      <pubDate>Tue, 09 Jul 2024 12:26:28 GMT</pubDate>
    </item>
    <item>
      <title>pwrpc 是一个高效、低代码大小的 RPC 系统，专为嵌入式设备设计。</title>
      <link>https://t.me/hn_summary/98755</link>
      <description><![CDATA[pw_rpc：适用于嵌入式设备的高效、低代码大小的 RPC 系统
pwrpc 是一种高效、低代码大小的 RPC 系统，专为嵌入式设备设计。本概述涵盖了 RPC 调用的生命周期，详细介绍了从启动到完成的每个步骤。它还解释了系统内使用的命名约定，以保持清晰度和一致性。此外，还讨论了 pwrpc 路线图，概述了系统未来的增强功能和计划中的功能。值得注意的是，该系统专注于在保持效率的同时最小化代码大小，这是它有别于其他 RPC 系统的一个独特方面。]]></description>
      <guid>https://t.me/hn_summary/98755</guid>
      <pubDate>Tue, 09 Jul 2024 12:24:22 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] Sljit 项目是一个独立于平台的低级 JIT（即时）编译器，设计用于 [...]</title>
      <link>https://t.me/hn_summary/98754</link>
      <description><![CDATA[Sljit：独立于平台的低级 JIT 编译器
Sljit 项目是一个独立于平台的低级 JIT（即时）编译器，旨在将解释后的字节码转换为机器码。它支持多种目标架构，包括 x86、ARM、RiscV、s390x、PowerPC、LoongArch 和 MIPS，并提供自修改代码、尾调用、快速调用、字节顺序切换、未对齐内存访问和某些 CPU 上的 SIMD/原子操作等功能。Sljit 允许直接访问寄存器和为局部变量分配堆栈空间。它支持一体化编译，并且可以序列化以进行提前编译。该项目兼容C99和C++编译器，可以轻松集成到现有项目中。]]></description>
      <guid>https://t.me/hn_summary/98754</guid>
      <pubDate>Tue, 09 Jul 2024 12:21:18 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 网站：www.pixel.estate</title>
      <link>https://t.me/hn_summary/98753</link>
      <description><![CDATA[我创建了一个价值百万美元的主页，但它只有 64 个像素
标题：我创建了一个价值百万美元的主页，但它只有 64 个像素
网站：www.pixel.estate

我创建了一个独特的数字房地产企业，用户可以以每个 1 美元的价格拥有主页上仅有的 64 个像素之一。它的工作原理如下：首先，用户浏览网格并选择一个像素。购买后，他们将获得该像素的所有权，其中包括指向他们网站或他们选择的任何 URL 的反向链接。此外，随着我​​们积极推广 pixel.estate，像素所有者受益于更多访客探索网格。这种创新方法不仅提供了一种新颖的广告方法，还创造了一个高度独特的数字空间。]]></description>
      <guid>https://t.me/hn_summary/98753</guid>
      <pubDate>Tue, 09 Jul 2024 12:21:15 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 网站：mused.com</title>
      <link>https://t.me/hn_summary/98752</link>
      <description><![CDATA[展示 HN：SETI I 之墓和冥界文本虚拟之旅
标题：展示 HN：SETI I 之墓和冥界文本虚拟之旅
网站：mused.com

位于埃及卢克索帝王谷的塞提一世陵墓是这片古老墓地中最宏伟、装饰最精美的陵墓之一。该陵墓被称为 KV17，是为法老塞提一世修建的，塞提一世统治时期为新王国第十九王朝，统治时期约为公元前 1290 年至公元前 1279 年。塞提一世因其军事行动和大规模建筑项目而闻名，他的陵墓代表了那个时代的艺术和建筑巅峰。这次虚拟游览让您可以一睹古埃及工艺的辉煌和塞提一世统治时期的丰富历史。]]></description>
      <guid>https://t.me/hn_summary/98752</guid>
      <pubDate>Tue, 09 Jul 2024 12:20:11 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 网站：robertheaton.com</title>
      <link>https://t.me/hn_summary/98751</link>
      <description><![CDATA[PySkyWiFi：长途航班上的免费愚蠢 Wi-Fi
标题：PySkyWiFi：长途航班上的免费愚蠢 Wi-Fi
网站：robertheaton.com

到达 10,000 英尺后，我连接到飞机的 Wi-Fi，发现了一个漏洞：我可以通过我的飞行里程帐户访问互联网而无需付费。出于好奇，我开发了 PySkyWiFi，这是一个利用此漏洞提供免费互联网的工具。最初，我使用我的航空里程帐户中的姓名字段进行即时通讯，但很快将其扩展到获取股票价格和体育比分。最终，我创建了一个简化的 TCP/IP 协议，通过我的航空里程帐户发送 HTTP 请求。这种方法虽然缓慢且不切实际，但从技术上讲允许完全访问互联网。注意：这是一个概念证明，不建议实际使用。

争议：利用航空公司 Wi-Fi 系统的漏洞可能被视为不道德或非法。

独特/巧妙：使用航空里程帐户的姓名字段作为数据隧道是一种巧妙的解决方法。（基于 43% 的故事文本的摘要。）]]></description>
      <guid>https://t.me/hn_summary/98751</guid>
      <pubDate>Tue, 09 Jul 2024 12:16:04 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] Orbit：Scheme 的优化编译器 (1986) [pdf](https://news.ycombinator.com/ite [...]</title>
      <link>https://t.me/hn_summary/98750</link>
      <description><![CDATA[Orbit：Scheme 的优化编译器 (1986) [pdf](https://news.ycombinator.com/item?id=40908348)
“Orbit：Scheme 的优化编译器 (1986)”详细探讨了 Orbit 编译器，该编译器旨在提高 Scheme 编程语言的效率。该文档托管在 cpsc.yale.edu 上，深入探讨了使 Orbit 成为编译器技术重大进步的技术复杂性和创新。它强调了编译器优化代码的能力，从而提高了性能和资源管理。 Orbit 的一个独特之处是它使用了当时开创性的高级优化技术。内容技术性很强，面向具有计算机科学和编译器设计背景的读者。]]></description>
      <guid>https://t.me/hn_summary/98750</guid>
      <pubDate>Tue, 09 Jul 2024 11:46:52 GMT</pubDate>
    </item>
    </channel>
</rss>