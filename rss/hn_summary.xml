<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>HN 摘要</title>
    <link>https://tg.i-c-a.su</link>
    <description>由大型语言模型编写的热门 Hacker News 故事的自动摘要。</description>
    <lastBuildDate>Sun, 21 Jul 2024 09:19:25 GMT</lastBuildDate>
    <item>
      <title>[媒体] 网站：syscall.sh</title>
      <link>https://t.me/hn_summary/100562</link>
      <description><![CDATA[Syscall.sh
标题：Syscall.sh
网站：syscall.sh

使用提供的链接探索适合您首选架构的 Linux 系统调用表（API 即将推出）。该表概述了各种架构的调用约定，详细说明了用于系统调用号 (NR)、返回值 (RETURN) 和参数 (ARG0 到 ARG5) 的特定寄存器。例如，在 ARM 架构中，系统调用号存储在寄存器 r7 中，而返回值存储在 r0 中，参数范围从 r0 到 r5。同样，对于 x64 架构，rax 同时保存系统调用号和返回值，参数范围从 rdi 到 r9。此资源对于跨不同架构进行低级系统编程的开发人员至关重要。]]></description>
      <guid>https://t.me/hn_summary/100562</guid>
      <pubDate>Sun, 21 Jul 2024 09:19:25 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 标题：Zettlr：一站式出版工作台</title>
      <link>https://t.me/hn_summary/100561</link>
      <description><![CDATA[Zettlr：一站式出版工作台
标题：Zettlr：一站式出版工作台

网站：www.zettlr.com

Zettlr 简化了各个领域学者的提交流程。对于 STEM 领域的学者来说，会议提交通常需要特定的 PDF 模板，对于处理期刊模板的社会科学或人文学科学者来说，Zettlr 强大的配置文件系统（由 Pandoc 提供支持）只需单击一下即可实现无缝导出。用户可以轻松创建新的配置文件、添加模板并轻松导出论文。此外，Zettlr 支持快速创建 Beamer、reveal.js 或 PowerPoint 等格式的演示文稿，使其成为会议准备的多功能工具。这一独特功能集使 Zettlr 成为学术出版必不可少的工作台。]]></description>
      <guid>https://t.me/hn_summary/100561</guid>
      <pubDate>Sun, 21 Jul 2024 09:14:19 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] wc-helpers GitHub 项目提供了一组实用程序来简化 [...] 的创建</title>
      <link>https://t.me/hn_summary/100560</link>
      <description><![CDATA[显示 HN：我为 Web 组件制作了助手
wc-helpers GitHub 项目提供了一组实用程序来简化自定义 Web 组件的创建。它解决了 Web 组件开发中的常见挑战，例如管理影子 DOM、状态和属性。该项目提供了几个 mixin 和助手函数，包括用于自动元素注册的 Anonymous、用于影子 DOM 管理的 Shadow 和用于状态管理的 State。独特的功能包括自动 shadowRoot 创建、状态监听器和属性状态管理。该项目通过提供全面而模块化的 Web 组件开发方法、减少样板代码并提高工作效率而脱颖而出。可通过 npm 或 CDN 进行安装。]]></description>
      <guid>https://t.me/hn_summary/100560</guid>
      <pubDate>Sun, 21 Jul 2024 09:12:14 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 网站：www.notshipped.com</title>
      <link>https://t.me/hn_summary/100559</link>
      <description><![CDATA[Show HN：我创建了一个众包顶级未启动项目的网站
标题：Show HN：我创建了一个众包顶级未启动项目的网站
网站：www.notshipped.com

NotShipped 是一个平台，用户可以在此发现并参与由互联网社区选出的 50 个顶级未启动项目。访问者无需帐户即可对自己喜欢的项目进行点赞和评论。该网站旨在聚焦尚未进入市场的创新理念，为创作者和爱好者提供一个独特的空间来交流和分享反馈。参与方式简单（无需帐户），方便用户使用。]]></description>
      <guid>https://t.me/hn_summary/100559</guid>
      <pubDate>Sun, 21 Jul 2024 08:58:07 GMT</pubDate>
    </item>
    <item>
      <title>罗马数字末尾的字符“j”有什么意义？</title>
      <link>https://t.me/hn_summary/100558</link>
      <description><![CDATA[罗马数字末尾的“j”字符有什么意义？
字母“j”最初是罗马数字末尾的花体符号，后来成为一个独特的字符。它用于最后的“i”，以清楚地表示数字的结尾。直到最近，它还被推荐用于医疗处方中，以避免误解，1919 年的说明就是明证。因此，“xvij”应解释为 17，而不是 16。这种做法凸显了字母“j”在数字语境中独特的历史用法。]]></description>
      <guid>https://t.me/hn_summary/100558</guid>
      <pubDate>Sun, 21 Jul 2024 07:34:41 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 2024 年 7 月 19 日，UTC 时间 04:09，CrowdStrike 发布了 [...] 的传感器配置更新。</title>
      <link>https://t.me/hn_summary/100557</link>
      <description><![CDATA[技术细节：适用于 Windows 主机的 Falcon 更新
2024 年 7 月 19 日，UTC 时间 04:09，CrowdStrike 发布了适用于 Windows 系统的传感器配置更新，作为其 Falcon 平台持续保护机制的一部分。此更新无意中导致逻辑错误，导致受影响的系统崩溃和蓝屏 (BSOD)。该问题于当天 UTC 时间 05:27 迅速得到解决。该问题不是由于网络攻击造成的，而是由于管理 Windows 上命名管道执行的通道文件 291 中的逻辑缺陷造成的。CrowdStrike 此后已更正该错误，并保证不受影响的系统将继续正常运行。Linux 和 macOS 系统不受影响。该公司正在进行彻底的根本原因分析，以防止将来再次发生此类事件。]]></description>
      <guid>https://t.me/hn_summary/100557</guid>
      <pubDate>Sun, 21 Jul 2024 07:29:37 GMT</pubDate>
    </item>
    <item>
      <title>AT&T 贝尔实验室的 Andrew Koenig 所著的《C 陷阱与缺陷》（1988 年）是一本全面的 g [...]</title>
      <link>https://t.me/hn_summary/100556</link>
      <description><![CDATA[C 陷阱和陷阱 (1988) [pdf](https://news.ycombinator.com/item?id=41021611)
Andrew Koenig 的《C 陷阱和陷阱》(1988) 来自 AT&amp;T 贝尔实验室，是一本全面的指南，重点介绍了 C 编程语言的潜在危险，将其比作一把锋利的工具，如果操作不当可能会很危险。本文根据程序编译和执行的阶段将常见的陷阱分为几部分。它从词汇陷阱开始，例如将赋值 (=) 与相等 (==) 混淆，以及误用单引号 (&#39;) 和双引号 (&quot;)。它还涵盖了语法陷阱，包括复杂的声明和标记化的细微差别。本文强调了理解这些细微之处以避免 C 程序中出现意外行为的重要性。值得注意的是，这篇论文被扩展为一本书，名为《C 陷阱和陷阱》(1989)。

争议亮点：本文指出，C 的设计优先考虑灵活性和最小限制，这可能导致微妙且难以检测的错误，这一点引发了有关该语言的安全性和可用性的争论。

独特/巧妙的亮点：将 C 比作一把切肉刀是一种巧妙的方式来说明该语言的力量和潜在的危险，强调需要技巧和谨慎。（根据 15% 的故事文本总结。）]]></description>
      <guid>https://t.me/hn_summary/100556</guid>
      <pubDate>Sun, 21 Jul 2024 07:15:29 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在staysaasy.com的“在肮脏的工作中建立你的职业生涯（2022）”中，作者提倡 [...]</title>
      <link>https://t.me/hn_summary/100555</link>
      <description><![CDATA[在肮脏的工作中建立你的职业生涯（2022）
在staysaasy.com的“在肮脏的工作中建立你的职业生涯（2022）”中，作者主张通过解决大多数人避免的乏味任务来实现职业发展。“肮脏的工作理论”表明，在这些被忽视的领域可以找到影响深远、唾手可得的成果。作者建议加入一家真正需要你贡献的高增长公司，然后深入研究诸如值班职责、质量保证和技术债务等令人不快的任务。这种方法与加入 FAANG 公司或早期创业公司等更受欢迎但影响较小的途径形成了鲜明对比。作者强调，解决这些“肮脏”问题可以带来重大的职业发展，甚至公司的成功，并引用了 Zapier 和 Stripe 等例子。文章最后强调，虽然不是每个人都能成为史蒂夫·乔布斯，但掌握脏活可以让你成为蒂姆·库克，一个通过解决基本但经常被忽视的挑战而出类拔萃的领导者。

争议点：作者挑战了通过知名公司或华而不实的项目寻求职业发展的传统观念，认为这些道路往往影响较小。

令人惊讶的见解：脏活，通常被视为不受欢迎的，可以成为职业发展和公司成功的金矿，这一想法既独特又违反直觉。]]></description>
      <guid>https://t.me/hn_summary/100555</guid>
      <pubDate>Sun, 21 Jul 2024 05:56:58 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] Arm 的 Cortex A73：资源限制，那些是什么？</title>
      <link>https://t.me/hn_summary/100554</link>
      <description><![CDATA[Arm 的 Cortex A73：资源限制是什么？
2010 年代中期，Arm 的 32 位 Cortex 设计大获成功，并应用于 Nvidia 的 Tegra 和三星的 Exynos 芯片。然而，高通 Krait 的竞争以及 64 位 Cortex A57 的问题（例如骁龙 810 的发热问题）导致了转变。高通转向其 Kryo 架构，三星开发了 Mongoose 内核。Arm 需要重新赢得智能手机 SoC 制造商的青睐，从而开发了 Cortex A73。与其前代产品不同，A73 更注重能效而非高性能，使其适合智能手机的散热和功耗限制。 A73 的架构非常独特，具有双倍宽的乱序执行和理论上无限的重新排序能力，强调效率而非原始功率。这一转变代表了 Arm 的战略转折点，旨在平衡性能与实际功率和热管理。

争议：骁龙 810 中的 Cortex A57 的热量问题严重到足以导致性能下降，导致高通转向自己的 Kryo 架构。

独特/聪明：A73 理论上无限的重新排序能力以及对功率效率而非高性能的关注是设计理念的显著转变。（基于 59% 的故事文本的摘要。）]]></description>
      <guid>https://t.me/hn_summary/100554</guid>
      <pubDate>Sun, 21 Jul 2024 05:51:52 GMT</pubDate>
    </item>
    <item>
      <title>Prelude 是一个简单的 CLI 工具，旨在为大型语言模型（LLM [...]</title>
      <link>https://t.me/hn_summary/100553</link>
      <description><![CDATA[Prelude – 一款从代码中构建上下文提示的小型 CLI 工具
Prelude 是一款简单的 CLI 工具，旨在为具有广泛上下文窗口的大型语言模型 (LLM) 创建上下文提示，特别适用于改进跨多个文件和目录的代码。它会生成一个提示，其中包含指定目录的文件树和连接文件内容，可将其复制到剪贴板或保存到文件中。独特功能包括通过 .preludeignore 和 .gitignore 排除文件的能力，以及指定路径、输出文件名和文件匹配模式的选项。通过 Homebrew 可以轻松安装，全面的测试套件可确保可靠性。]]></description>
      <guid>https://t.me/hn_summary/100553</guid>
      <pubDate>Sun, 21 Jul 2024 04:58:35 GMT</pubDate>
    </item>
    </channel>
</rss>