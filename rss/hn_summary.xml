<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>HN 摘要</title>
    <link>https://tg.i-c-a.su</link>
    <description>由大型语言模型编写的热门 Hacker News 故事的自动摘要。</description>
    <lastBuildDate>Mon, 02 Sep 2024 03:23:10 GMT</lastBuildDate>
    <item>
      <title>[媒体] Procreate 宣布不会将生成式 AI 集成到其流行的 iPad 插画中 [...]</title>
      <link>https://t.me/hn_summary/106550</link>
      <description><![CDATA[Procreate 逆 AI 潮流而动，承诺其插画应用中“不使用生成 AI”
Procreate 宣布不会将生成 AI 集成到其流行的 iPad 插画应用中，以回应艺术界部分人士对 AI 在创意产业中的道德影响和潜在后果的强烈反对。首席执行官 James Cuda 强烈反对生成 AI，称其“剥夺了事物的人性”，是建立在“盗窃的基础”之上的。这一立场得到了许多艺术家的积极反馈，包括那些参与针对 AI 图像生成器的诉讼的艺术家。然而，一些支持 AI 的用户认为 AI 可以增强可访问性和创造力。Procreate 的决定可能会使其用户群两极分化，但旨在支持以人为本的创造力。]]></description>
      <guid>https://t.me/hn_summary/106550</guid>
      <pubDate>Mon, 02 Sep 2024 03:23:10 GMT</pubDate>
    </item>
    <item>
      <title>在《为什么反权威主义者被诊断为精神病》一文中，布鲁斯·莱文探讨了这种倾向[...]</title>
      <link>https://t.me/hn_summary/106549</link>
      <description><![CDATA[为什么反权威主义者被诊断为精神病患者 (2012)
在《为什么反权威主义者被诊断为精神病患者》一书中，布鲁斯·莱文探讨了心理健康专业人士将反权威主义者诊断为患有 ADHD、ODD 和焦虑症等精神疾病的倾向。莱文认为，反权威主义者批判性地评估并经常抵制不正当的权威，他们被专业人士误解和病态化，这些专业人士通过自己的教育和职业历程习惯于服从权威。这种病态化通过将对压迫系统的自然抵抗定性为精神疾病来维持社会现状。莱文强调了这样一个讽刺性的事实：阿尔伯特·爱因斯坦和索尔·阿林斯基等历史人物表现出反权威主义特征，而今天却可能被诊断患有破坏性障碍。这篇文章引发争议地指出，精神卫生行业将反权威主义者边缘化，以压制异议并维护权威主义结构。]]></description>
      <guid>https://t.me/hn_summary/106549</guid>
      <pubDate>Mon, 02 Sep 2024 02:57:59 GMT</pubDate>
    </item>
    <item>
      <title>标题：Show HN：角色设定 – AI 背景故事生成器</title>
      <link>https://t.me/hn_summary/106548</link>
      <description><![CDATA[Show HN：角色 Headcanon – AI 驱动的背景故事生成器
标题：Show HN：角色 Headcanon – AI 驱动的背景故事生成器

网站：www.characterheadcanon.com

摘要：

Character Headcanon 是一款创新的 AI 驱动工具，旨在为角色生成详细的背景故事，增强您的创意项目。该平台用户友好且免费使用，允许您为书籍或电影中的原创和现有角色创建独特的 headcanon。生成的背景故事准确度极高，非常适合融入您的创意作品中。用户可以经常生成新的构思并与他人分享。该网站可确保您的数据安全，为您的创意探索提供安全的环境。]]></description>
      <guid>https://t.me/hn_summary/106548</guid>
      <pubDate>Mon, 02 Sep 2024 02:39:50 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 归纳还是演绎？</title>
      <link>https://t.me/hn_summary/106547</link>
      <description><![CDATA[归纳还是演绎？重新思考法学硕士的基本推理能力
标题：归纳还是演绎？重新思考法学硕士的基本推理能力
网站：arxiv.org

在本文中，我们探讨了大型语言模型 (LLM) 的核心推理能力，质疑它们主要采用归纳推理还是演绎推理。我们的分析表明，LLM 表现出两种推理类型的混合，挑战了它们主要依赖其中一种推理的传统理解。这种细致入微的视角为提升法学硕士的表现和应用开辟了新途径。值得注意的是，我们的研究结果表明，归纳推理和演绎推理的结合可能是提高人工智能能力的关键。无障碍论坛也将于今年 9 月回归，为所有感兴趣的各方提供免费、虚拟和包容的平台。注册参与并了解更多信息。]]></description>
      <guid>https://t.me/hn_summary/106547</guid>
      <pubDate>Mon, 02 Sep 2024 01:51:34 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] Meta 数据中心用电量在 2023 年飙升至 14,975,435MWh，标志着 [...]</title>
      <link>https://t.me/hn_summary/106546</link>
      <description><![CDATA[Meta 数据中心用电量达到 14,975GWh
Meta 数据中心用电量在 2023 年飙升至 14,975,435MWh，增长 34%。值得注意的是，租赁设施同比增长 97%，消耗 2,187,020MWh。俄勒冈州普林维尔园区以 1,375,321MWh 领先，其次是爱荷华州阿尔图纳和内布拉斯加州萨皮。每位用户和每百万美元收入的用电量强度也大幅上升。Meta 声称通过 PPA 和 REC 实现了 100% 的可再生能源使用，PUE 稳定在 1.08。各种燃料消耗量均有所下降，该公司开始在爱尔兰测试加氢植物油。取水量增加了 7%，地下水和高压力地区的取水量明显增加。不过，水资源恢复工作提高了 150%。Meta 新的 AI 优化数据中心将采用干式冷却技术，以最大限度地减少用水量。该公司上个季度正在扩大其数据中心的覆盖范围，资本支出为 85 亿美元，预计 AI 基础设施开发成本将更高。]]></description>
      <guid>https://t.me/hn_summary/106546</guid>
      <pubDate>Mon, 02 Sep 2024 01:48:30 GMT</pubDate>
    </item>
    <item>
      <title>我的名字是 Matt，Easily Acquired 的创始人，该公司是第一家致力于销售 [...] 的网站经纪公司。</title>
      <link>https://t.me/hn_summary/106545</link>
      <description><![CDATA[Show HN：第一家销售副业的网站经纪公司
我叫 Matt，是 Easily Acquired 的创始人，这是第一家致力于销售副业的网站经纪公司。凭借超过四年的在线业务创建、购买和销售经验，我了解这个过程的复杂性。我的旅程始于我出售自己在学习期间的空闲时间创建的平台，这段经历令人兴奋不已。现在，我的目标是帮助其他创始人快速有效地退出他们的业务。我们由熟练的文案和专业人员组成的团队可确保您的业务吸引优质买家并实现其真正价值。我们处理电子商务商店、SaaS、内容网站等，年收入在 1,000 美元至 150,000 美元之间。]]></description>
      <guid>https://t.me/hn_summary/106545</guid>
      <pubDate>Mon, 02 Sep 2024 01:40:22 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 当你需要做一些数学运算时，你可能会使用手机的计算器或计算机应用程序。</title>
      <link>https://t.me/hn_summary/106544</link>
      <description><![CDATA[Unix 历史和 `DC` 计算器
当您需要进行一些数学运算时，您可能会求助于手机的计算器或计算机应用程序。但是，您是否尝试过 UNIX 实用程序 dc？这种逆抛光表示法 (RPN) 计算器甚至早于 C 编程语言，它使用基于堆栈的方法进行算术运算，无需运算符优先级规则。与中缀表示法不同，RPN 简化了解析和计算。有趣的是，dc 是第一个移植到 UNIX 的实用程序，并且仍然是现存最古老的 UNIX 程序之一。为了好玩，我在 Rust 中实现了一个类似 dc 的计算器，您可以在此处找到它。它通过 bigdecimal 包支持基本操作和任意精度。欢迎在 LinkedIn 上与我联系，或发送电子邮件至 ethan.barry@howdytx.technology。

令人惊讶的是：dc 实用程序早于 C 编程语言，是现存最古老的 UNIX 程序之一。
独特之处：在 Rust 中实现了类似 dc 的计算器，并配有自定义提示宏。]]></description>
      <guid>https://t.me/hn_summary/106544</guid>
      <pubDate>Mon, 02 Sep 2024 01:27:15 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 都柏林核心，它有什么用处？</title>
      <link>https://t.me/hn_summary/106543</link>
      <description><![CDATA[都柏林核心，它有什么用？
www.thisdaysportion.com 上的文章“都柏林核心，它有什么用？”探讨了各种元架构，例如都柏林核心、Schema.org、微格式和 Open Graph，它们用于将元信息嵌入文档中。虽然 Open Graph 受到广泛支持，但架构的选择取决于您希望识别元数据的特定服务。本文详细介绍了向 HTML 添加元数据的方法，无论是在文档头中还是在正文中使用属性或类。它还讨论了 Instapaper、Omnivore 和 Zotero 等服务对这些模式的不同支持，强调没有一种模式是普遍支持的。令人惊讶的是，Open Graph 在不同平台上得到了广泛采用，如果必须选择一种模式，它将成为强有力的候选者。（基于 96% 的故事文本的摘要。）]]></description>
      <guid>https://t.me/hn_summary/106543</guid>
      <pubDate>Mon, 02 Sep 2024 01:27:12 GMT</pubDate>
    </item>
    <item>
      <title>Tbsp 是一种基于树的源处理语言，旨在利用 Treesitter 的强大功能 [...]</title>
      <link>https://t.me/hn_summary/106542</link>
      <description><![CDATA[Tbsp – 基于 Treesitter 的源处理语言
Tbsp 是一种基于树的源处理语言，旨在利用 Treesitter 的强大功能实现高效、精确的代码操作。通过利用 Treesitter 强大的解析功能，Tbsp 旨在为开发人员提供一种用于源代码分析和转换的多功能工具。这种创新方法可以更准确地生成语法树，从而简化复杂的代码修改和重构任务。该语言与 Treesitter 的独特集成使其有别于传统的源处理工具，为寻求高级代码处理技术的开发人员提供了一种新颖的解决方案。]]></description>
      <guid>https://t.me/hn_summary/106542</guid>
      <pubDate>Mon, 02 Sep 2024 01:19:06 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在这篇关于 Clang 编译器前端的入门文章中，作者总结了第一章 [...]</title>
      <link>https://t.me/hn_summary/106541</link>
      <description><![CDATA[Clang 编译器前端入门指南 (1)：简介和架构
在这篇 Clang 编译器前端入门指南中，作者总结了 Ivan Murashko 的书的最初几章，重点介绍了如何设置开发环境和了解 Clang 的架构。设置需要基于 Unix 的操作系统、Git、CMake 和 Ninja。作者强调了 CMake 对于跨平台构建的重要性以及 Ninja 对于高效构建的重要性。入门指南解释了构建过程，包括创建一个简单的 Clang 工具进行语法检查。

第 2 章深入探讨了 Clang 的架构，详细介绍了从源代码到目标代码的编译器工作流程。前端通过词法分析、解析和代码生成将源代码转换为中间表示 (IR)。讨论了 Clang 的独特方面，例如其宏处理和语法与语义分析的分离。作者强调了 Clang 在生成不同输出格式方面的模块化和灵活性。

令人惊讶/巧妙的方面：
- Clang 能够处理复杂的 C++ 功能，如宏和模板实例化。
- 将语法和语义分析分离为不同的组件（解析器和 Sema）。

推荐：
- 作者强烈建议购买 Murashko 的书以更深入地了解。（基于 99% 的故事文本的总结。）]]></description>
      <guid>https://t.me/hn_summary/106541</guid>
      <pubDate>Mon, 02 Sep 2024 01:17:02 GMT</pubDate>
    </item>
    </channel>
</rss>