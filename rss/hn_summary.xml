<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>HN 摘要</title>
    <link>https://tg.i-c-a.su</link>
    <description>由大型语言模型编写的热门 Hacker News 故事的自动摘要。</description>
    <lastBuildDate>Sun, 02 Jun 2024 18:11:13 GMT</lastBuildDate>
    <item>
      <title>[媒体] 前总统唐纳德·特朗普 (Donald Trump) 已加入 TikTok，尽管此前他曾试图禁止 [...]</title>
      <link>https://t.me/hn_summary/92757</link>
      <description><![CDATA[特朗普在担任总统期间试图禁用 TikTok，但最终还是加入了 TikTok
前总统唐纳德·特朗普 (Donald Trump) 已加入 TikTok，尽管此前他曾试图在总统任期内禁用该应用，原因是该应用的中国母公司存在国家安全问题。他的第一条帖子是一段 13 秒的视频，由 UFC 首席执行官达娜·怀特 (Dana White) 主演，是在新泽西州纽瓦克的一场 UFC 活动期间制作的。特朗普表示加入该平台是一种“荣幸”，背景音乐是​​ Kid Rock 的歌曲。特朗普竞选团队的一名顾问强调了在多个平台上接触选民的重要性，并指出 TikTok 的受众更年轻。有趣的是，特朗普的儿子小唐纳德·特朗普 (Donald Trump Jr.) 最近也加入了 TikTok。此举是在总统乔·拜登 (Joe Biden) 签署立法禁止该应用之际做出的，TikTok 目前正在法庭上对此提出异议。]]></description>
      <guid>https://t.me/hn_summary/92757</guid>
      <pubDate>Sun, 02 Jun 2024 18:11:13 GMT</pubDate>
    </item>
    <item>
      <title>《压接、互连电缆、线束和接线的工艺标准》 (NASA-S [...]</title>
      <link>https://t.me/hn_summary/92756</link>
      <description><![CDATA[压接、互连电缆、线束和接线的工艺标准
“压接、互连电缆、线束和接线的工艺标准”(NASA-STD-8739.4) 是由安全与任务保障办公室 (OSMA) 制定的 NASA 技术标准。自 2016 年 6 月 30 日起生效，该强制性标准概述了组装连接电气、电子或机电部件的互连电缆和线束的要求。它适用于 NPD 8730.5 定义的关键工作。该标准可在互联网上公开访问，确保透明度和广泛可用性。该文件在其技术领域强调安全性、质量、可靠性和可维护性。]]></description>
      <guid>https://t.me/hn_summary/92756</guid>
      <pubDate>Sun, 02 Jun 2024 17:49:35 GMT</pubDate>
    </item>
    <item>
      <title>在我最近的探索中，我需要使用 m 上的 Go 程序处理来自 Google Sheet 的数据 [...]</title>
      <link>https://t.me/hn_summary/92755</link>
      <description><![CDATA[从 Go 程序读取 Google Sheets
在我最近的探索中，我需要使用本地机器上的 Go 程序处理来自 Google Sheet 的数据。我发现最简单、最有效的方法是使用服务帐户，因为 gcloud 的 ADC 通常无法访问 Sheets 或 Docs。这篇文章概述了创建和管理服务帐户的步骤，包括生成和保护私钥。提供的 Go 代码演示了如何使用此密钥进行身份验证并从 Google Sheet 读取数据。此外，我还讨论了使用 OAuth 2.0 的替代方法，该方法需要更多设置但提供类似的结果。有关详细的代码示例，请参阅我的 GitHub 存储库。值得注意的是，除非您的工作表是公开的，否则您必须授予服务帐户电子邮件的访问权限才能阅读私人工作表。]]></description>
      <guid>https://t.me/hn_summary/92755</guid>
      <pubDate>Sun, 02 Jun 2024 17:30:05 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] Hotwire 通过传输 H [...] 为开发现代 Web 应用程序提供了一种新方法。</title>
      <link>https://t.me/hn_summary/92754</link>
      <description><![CDATA[Hotwire：通过网络传输 HTML
Hotwire 通过传输 HTML 而不是 JSON 为开发现代 Web 应用程序提供了一种新颖的方法，大大减少了对 JavaScript 的需求。这种方法可确保快速的初始页面加载、服务器端模板渲染和跨各种编程语言的简化开发流程，同时保持传统单页应用程序的速度和响应能力。

Hotwire 由 37signals 为其 HEY 平台开发，包含三个主要组件：

1. Turbo：无需 JavaScript 即可增强页面更改、表单提交和部分更新，并与原生 iOS 和 Android 应用程序无缝集成。
2. Stimulus：使用以 HTML 为中心的方法，以最少的 JavaScript 添加自定义交互性。
3. Strada：通过标准化 HTML 属性连接 Web 和原生移动应用程序交互。

这种创新方法简化了 Web 开发，同时提供了强大的性能和灵活性。]]></description>
      <guid>https://t.me/hn_summary/92754</guid>
      <pubDate>Sun, 02 Jun 2024 16:35:29 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 有人需要 1k Hz 游戏显示器吗？</title>
      <link>https://t.me/hn_summary/92753</link>
      <description><![CDATA[有人需要 1k Hz 游戏显示器吗？
标题：有人需要 1k Hz 游戏显示器吗？
网站：arstechnica.com

就在几年前，Nvidia 还在推广 500 Hz 游戏显示器，因为它们具有普遍优势。现在，Blur Busters 报道称，TCL CSOT 在 DisplayWeek 2024 上推出了一款 4K、1,000 Hz 原型。与许多当前上限为 1080p 的 480 Hz 显示器不同，该面板令人印象深刻地保持了高分辨率。 Blur Busters 预测 1,000 Hz OLED 显示器可能在 2027 年实现商业化。这引发了一个问题：我们是否接近刷新率收益递减点，还是 1,000 Hz 只是另一个里程碑？研究揭穿了人类无法以超过 60 fps 的速度看清事物的神话，表明更高的刷新率具有明显优势，尤其是在减少运动模糊和增强 VR 体验方面。虽然 1,000 Hz 显示器需要以 1,000 fps 的速度运行内容，但显卡和帧生成技术的进步使这一点变得不那么牵强。我们可能很快就会回头看，发现 1,000 Hz 显示器很过时。]]></description>
      <guid>https://t.me/hn_summary/92753</guid>
      <pubDate>Sun, 02 Jun 2024 16:28:13 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在过去的一年里，Web AI 取得了重大进步。</title>
      <link>https://t.me/hn_summary/92752</link>
      <description><![CDATA[浏览器中的 LLM
在过去的一年里，Web AI 取得了重大进展。在 I/O 2024 上，我们为 Web 应用程序引入了新的模型、工具和 API。与服务器端 AI 不同，Web AI 允许机器学习模型使用 JavaScript、WebAssembly 和 WebGPU 在浏览器中运行客户端。主要亮点包括直接在浏览器中运行大型语言模型 (LLM)，如 Google 的新 Gemma Web，从而节省成本、增强隐私并减少延迟。Visual Blocks 现在支持客户端深度估计并与 Hugging Face 集成以扩展功能。Chrome 正在增强用于设备上 AI 的 JavaScript API，并更新 WebGPU 和 WebAssembly 以获得更好的性能。使用 Headless Chrome 测试您的 Web AI 模型，并使用 #WebAI 与社区分享您的工作。]]></description>
      <guid>https://t.me/hn_summary/92752</guid>
      <pubDate>Sun, 02 Jun 2024 15:41:42 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 2020 年大选结束后，尽管普遍存在 [...]</title>
      <link>https://t.me/hn_summary/92751</link>
      <description><![CDATA[两党秘密行动挽救了 2020 年大选
2020 年大选结束后，尽管人们普遍担心出现混乱，但局势却出人意料地平静。这种平静是两党为维护选举进程而进行的秘密努力的结果。美国商会和美国劳工联合会 - 产业工会联合会通过联合声明正式成立了一个由左翼活动家和商界领袖组成的联盟，他们在幕后努力确保选举的公平可信。该联盟由美国劳工联合会 - 产业工会联合会高级顾问迈克·波德霍泽 (Mike Podhorzer) 领导，协调了投票系统的变更，打击了虚假信息，并调动资源以应对潜在的破坏。他们的努力对于防止民主危机至关重要，揭示了选举制度的脆弱性以及采取主动措施保护民主的重要性。这场史无前例的竞选活动凸显了该国与潜在选举灾难的密切关系。（摘要基于 35% 的故事文本。）]]></description>
      <guid>https://t.me/hn_summary/92751</guid>
      <pubDate>Sun, 02 Jun 2024 15:40:34 GMT</pubDate>
    </item>
    <item>
      <title>线程本地存储 (TLS) 是一个有趣而又复杂的主题，涉及到 [...]</title>
      <link>https://t.me/hn_summary/92750</link>
      <description><![CDATA[深入研究（隐式）线程本地存储
线程本地存储 (TLS) 是一个引人入胜但又复杂的主题，涉及编译器、链接器、动态链接器、内核和语言运行时之间的协调。这篇博文受到 Ulrich Drepper 关于 TLS 的 ELF 处理工作的启发，深入探讨了 x86-64 Linux 系统上 TLS 的复杂性，偶尔会提到其他平台。

显式 TLS 通过 pthread_key_create 等函数管理，非常简单，类似于二维哈希图。然而，正如一个简单的 C 代码示例所示，隐式 TLS 看起来几乎是神奇的。反汇编代码揭示了段寄存器 %fs 的使用，该寄存器在 x86 架构中被重新用于保存线程特定上下文，在 Linux 中称为线程控制块 (TCB)。

该博客解释了 %fs 寄存器如何指向 TCB，该 TCB 由内核使用 arch_prctl 系统调用进行管理。动态链接器 (ld.so) 为主线程设置 TCB，而后续线程的处理方式不同。该帖子还涉及 ELF TLS 结构，强调动态线程向量 (DTV) 及其在寻址 TLS 变量中的作用。

令人惊讶的是，该博客揭示了汇编代码中看似神秘的 -4 是与 TCB 结构相关的指针算法的结果。深入研究 TLS 揭示了隐式 TLS 的复杂机制，这些机制使得隐式 TLS 既高效又神奇。（基于 24% 的故事文本的摘要。）]]></description>
      <guid>https://t.me/hn_summary/92750</guid>
      <pubDate>Sun, 02 Jun 2024 15:35:18 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] Positionhigh/MicroDexed-touch：盒装 DX7，带有音序器和跟踪器</title>
      <link>https://t.me/hn_summary/92749</link>
      <description><![CDATA[Positionhigh/MicroDexed-touch：盒装 DX7，带音序器和跟踪器
Positionhigh/MicroDexed-touch：盒装 DX7，带音序器和跟踪器

MicroDexed-touch 是原始 MicroDexed 的高级迭代，MicroDexed 是基于 Teensy 的 6 操作 FM 合成器。此版本集成了 TFT 触摸显示屏、图形 UI 和音序器，需要 Teensy 4.1、PCM5102 音频板、带电容式触摸屏的 320x240 ILI9341 SPI 显示屏和串行闪存芯片。主要功能包括大型图形界面、外部 MIDI 设备支持、全局混响和延迟效果、多采样乐器播放以及具有广泛音轨和模式功能的改进的音序器。独特的附加功能包括虚拟模拟单声道合成器、8 声部复音振荡器和多频带主压缩器。该项目是开源的，根据 GPL v3 许可，并邀请开发人员和测试人员做出贡献。

有争议的说明：多采样乐器在音高变换和复音过程中的稳定性目前不可靠，突出了需要改进的领域。]]></description>
      <guid>https://t.me/hn_summary/92749</guid>
      <pubDate>Sun, 02 Jun 2024 15:31:04 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在我最近对基于竞技场的范式的探索中，我发现了一种高效、通用的 [...]</title>
      <link>https://t.me/hn_summary/92748</link>
      <description><![CDATA[竞技场和万能的连接运算符
在我最近对基于竞技场的范式的探索中，我发现了一种高效、通用的方法，只需大约 9 行代码即可在竞技场内进行动态连接。这项技术受到读者关于动态数组的建议的启发，允许连接字符串、动态数组或其他类型，使其特别适用于路径处理。为了简洁起见，这些示例采用 C 风格的 C++，但该方法很容易转换为 C。核心函数 concat 可高效地连接竞技场内相同类型的两个对象，处理大小溢出和内存错误。该系统支持任意路径长度，不受 PATH_MAX 等预定义限制的影响，并且可以扩展以连接不同的数据类型，例如整数和 UTF-8 代码点。该方法避免了 strcat 等传统连接函数的低效率，使其成为动态内存管理的强大工具。（基于 62% 的故事文本的摘要。）]]></description>
      <guid>https://t.me/hn_summary/92748</guid>
      <pubDate>Sun, 02 Jun 2024 15:26:46 GMT</pubDate>
    </item>
    </channel>
</rss>