<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>HN 摘要</title>
    <link>https://tg.i-c-a.su</link>
    <description>由大型语言模型编写的热门 Hacker News 故事的自动摘要。</description>
    <lastBuildDate>Fri, 23 Aug 2024 06:00:55 GMT</lastBuildDate>
    <item>
      <title>[媒体] 近 200 名 Google DeepMind 员工签署了一封信，敦促该公司停止军事行动 [...]</title>
      <link>https://t.me/hn_summary/105198</link>
      <description><![CDATA[Google DeepMind 员工敦促公司放弃军事合同
近 200 名 Google DeepMind 员工签署了一封信，敦促公司停止军事合同，理由是担心此类交易违反了 Google 的 AI 原则。《时代》杂志审查了这封信，它反映了内部对 DeepMind 技术用于战争的不安，尽管 Google 的 AI 部门承诺反对军事应用。争议的焦点是 Google 与以色列军方签订的 Project Nimbus 合同，批评者指控该合同支持对加沙的大规模监视和瞄准。尽管这封信要求采取行动，但 Google 并未解决这些担忧，导致员工越来越沮丧。这种情况凸显了这家科技巨头内部的重大道德争论。]]></description>
      <guid>https://t.me/hn_summary/105198</guid>
      <pubDate>Fri, 23 Aug 2024 06:00:55 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 微软将于 20 年 10 月重新推出备受争议的 Windows 召回功能 [...]</title>
      <link>https://t.me/hn_summary/105197</link>
      <description><![CDATA[微软备受争议的 Windows Recall 功能将于 10 月回归
微软将于 2024 年 10 月重新推出备受争议的 Windows Recall 功能，最初是在 Windows 11 的测试版本中。Recall 于 2024 年 5 月首次发布，每隔几秒钟捕获一次屏幕截图并使用 AI 对其进行分析，从而允许用户与过去的活动进行交互。尽管该功能具有潜力，但它仍因隐私问题而面临强烈反对，因为它可能会无意中捕获密码和信用卡号等敏感信息。批评者还怀疑微软保护数据的能力。作为回应，微软默认选择加入 Recall，并承诺加强安全措施。该功能仅在满足 Copilot+ PC 要求的 Insider 版本上可用。有趣的是，谷歌推出了类似的功能 Pixel Screenshots，需要手动截屏。微软计划在 10 月提供更多细节。

争议：围绕自动截图功能的隐私问题和数据安全问题。
独特/巧妙：人工智能驱动的与过去活动的交互以及与谷歌手动 Pixel 截图功能的比较。]]></description>
      <guid>https://t.me/hn_summary/105197</guid>
      <pubDate>Fri, 23 Aug 2024 05:40:46 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] DownloadNet (dn) 是一个用于创建带有全文搜索的离线网络档案的工具 [...]</title>
      <link>https://t.me/hn_summary/105196</link>
      <description><![CDATA[显示 HN：Dn – 适用于基于 Chromium 的浏览器的全文搜索和存档
DownloadNet (dn) 是一种旨在为基于 Chromium 的浏览器创建具有全文搜索功能的离线 Web 存档的工具。它会缓存您访问的每个页面，从而实现无缝离线浏览并通过强大的搜索功能轻松检索信息。与其他存档工具不同，dn 通过将数据存储在您的机器本地来确保完全的隐私。用户可以通过下载预构建的二进制文件、通过 npm 安装或从源代码构建自己的二进制文件来开始使用。该工具充当拦截代理，在您浏览时存档 Web 内容，并提供一个简约但实用的界面来管理您的存档。]]></description>
      <guid>https://t.me/hn_summary/105196</guid>
      <pubDate>Fri, 23 Aug 2024 05:32:39 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] GitHub Commit Navigator 是一个浏览器扩展，旨在简化 [...] 的流程</title>
      <link>https://t.me/hn_summary/105195</link>
      <description><![CDATA[显示 HN：浏览器扩展程序，使用箭头键浏览 GitHub 网站上的提交
GitHub Commit Navigator 是一个浏览器扩展程序，旨在简化使用箭头键浏览 GitHub 上提交历史记录的过程。该项目旨在满足那些喜欢探索项目演变而无需克隆存储库或手动浏览提交的用户的需求。主要功能包括使用右箭头键移动到下一个提交和使用左箭头键移动到上一个提交、跨所有 GitHub 存储库页面的功能、维护提交之间的滚动位置以及导航期间的视觉反馈。该项目是开源的，并根据 MIT 许可证获得许可。]]></description>
      <guid>https://t.me/hn_summary/105195</guid>
      <pubDate>Fri, 23 Aug 2024 04:58:27 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] Anthropic 已为其 JSON API 启用了 CORS 支持，允许直接调用 Claud [...]</title>
      <link>https://t.me/hn_summary/105194</link>
      <description><![CDATA[Claude 的 API 现在支持 CORS 请求，从而启用客户端应用程序
Anthropic 已为其 JSON API 启用 CORS 支持，允许从用户的浏览器直接调用 Claude LLM。此重要更新在 Anthropic TypeScript SDK 的拉取请求中详细说明，这意味着开发人员现在可以添加特定的 HTTP 请求标头以启用 CORS。虽然此功能可能导致安全风险，例如暴露 API 密钥，但它对于内部工具或“自带 API 密钥”模式很有用。我使用此功能升级了我的 Haiku 应用程序，现在它可以直接与 Anthropic 的 API 通信，而无需代理。有趣的是，Claude 最初建议不要采用这种方法，但在我解释了新指南后，他做出了调整。提供了完整的源代码和简化的 JavaScript 代码片段。]]></description>
      <guid>https://t.me/hn_summary/105194</guid>
      <pubDate>Fri, 23 Aug 2024 04:47:20 GMT</pubDate>
    </item>
    <item>
      <title>“黑客纯度测试”于 1989 年由 Felix Lee、John Hayes 和 Angela Thomas 制定，是 [...]</title>
      <link>https://t.me/hn_summary/105193</link>
      <description><![CDATA[1989 年的“黑客纯度测试”
1989 年的“黑客纯度测试”由 Felix Lee、John Hayes 和 Angela Thomas 精心设计，是对计算机黑客界的一次幽默而怀旧的探索。该测试最初由前 Bitnet 幽默小组 NutWorks 发布，经过多次修订，最近一次由 William Ward 于 1989 年 12 月进行了调整。参与者勾选与他们的“是”答案相对应的方框，他们的黑客纯度等级通过从 0x200 中减去肯定回答的数量来计算。最终得分将他们分为“巫师”和“计算机文盲”。测试巧妙地将事实与民间传说融合在一起，以有趣而又富有洞察力的方式展现了 80 年代后期的黑客文化。HTML 版本中的错误归咎于 John DuBois，而非原作者。]]></description>
      <guid>https://t.me/hn_summary/105193</guid>
      <pubDate>Fri, 23 Aug 2024 04:39:14 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 网站：www.coindesk.com</title>
      <link>https://t.me/hn_summary/105192</link>
      <description><![CDATA[“战时 CEO”：Urbit 创始人重返 Moonshot 软件项目
标题：“战时 CEO”：Urbit 创始人重返 Moonshot 软件项目
网站：www.coindesk.com

出人意料的是，Urbit 董事会解雇了自 2021 年以来担任基金会执行董事的 Josh Lehman，并任命预测市场初创公司 Alphabet 的创始人 Christopher Colby 为临时替代者。此次改组还导致董事会放弃了雷曼的融资提案，该提案旨在使用来自 Cosmos 生态系统的软件开发工具包在以太坊上开发新的第 2 层区块链。这一决定标志着 Urbit 战略方向的重大转变，引发了人们对该项目未来发展轨迹的质疑。]]></description>
      <guid>https://t.me/hn_summary/105192</guid>
      <pubDate>Fri, 23 Aug 2024 04:23:06 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在 Meta，我们开发了一个人工智能辅助根本原因分析系统来简化系统 [...]</title>
      <link>https://t.me/hn_summary/105191</link>
      <description><![CDATA[利用 AI 实现高效的事件响应
在 Meta，我们开发了一个 AI 辅助根本原因分析系统，以简化系统可靠性调查。这个创新系统将基于启发式的检索与基于大型语言模型 (LLM) 的排名相结合，以快速识别根本原因，在初始测试中实现了 42% 的准确率。通过将潜在的代码更改从数千个缩小到几百个，然后使用 Llama 模型将其进一步缩小到前五名，我们大大加快了调查过程。这种方法对于我们的 Web Monorepo 特别有用，因为团队之间的大量更改带来了可扩展性挑战。虽然 AI 提供了效率，但它也带来了建议错误根本原因的风险，我们通过封闭的反馈循环和可解释性来缓解这种风险。展望未来，我们的目标是增强这些工具，使其能够自主执行工作流程并在代码部署之前预先检测事件。]]></description>
      <guid>https://t.me/hn_summary/105191</guid>
      <pubDate>Fri, 23 Aug 2024 04:23:03 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在所有我从未想过会看到动画的漫画中，加里·拉森的《远方》 [...]</title>
      <link>https://t.me/hn_summary/105190</link>
      <description><![CDATA[远方传说
在所有我从未想过会制作成动画的漫画中，加里·拉尔森的远方名列榜首。令人惊讶的是，它于 1994 年被改编成 CBS 的万圣节特辑，由因小鹿斑比遇见哥斯拉而出名的马夫·纽兰执导。这部特辑与漫画一样，缺乏连贯的故事或重复的角色，因此很难在电视上播出。更奇怪的是，它几乎没有对话。尽管如此，续集于 1997 年在英国播出，那是拉尔森上一部漫画问世三年后。这两部特辑最终于 2007 年制作成 DVD，但现已售罄。拉尔森在播出后对第一部特别节目进行了重大修改，增加了新的片段并修改了动画以增强幽默感。拉尔森的荒诞漫画的整个动画制作过程与漫画本身一样荒诞。网上的剪辑很少，但动画师保罗·约翰逊的Adventures in Inbetweening系列提供了一些关于第二部特别节目的动画过程的见解。]]></description>
      <guid>https://t.me/hn_summary/105190</guid>
      <pubDate>Fri, 23 Aug 2024 04:05:54 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 三周前，受到 Unity 开发人员 Sebastian Lague 的一段视频的启发，我开始 [...]</title>
      <link>https://t.me/hn_summary/105189</link>
      <description><![CDATA[流体模拟和 Web Assembly
三周前，受到 Unity 开发人员 Sebastian Lague 的一段视频的启发，我开始用 C++ 创建自己的流体模拟。流体模拟可以是欧拉（基于网格）或拉格朗日（基于粒子）。我选择了拉格朗日方法，特别是平滑粒子流体动力学 (SPH)，来模拟液体。SPH 使用平滑核来估计流体特性，但调整参数以实现稳定性却很困难。初始性能很差，但使用网格系统进行优化后性能显著改善。为了进一步加速，我考虑通过 CUDA 或 OpenGL 进行并行化，但 Web Assembly 和我的硬件的限制阻碍了进展。最终，我使用 SFML 进行渲染，并过渡到 SDL 以实现 Web Assembly 兼容性。源代码可以在我的 GitHub 上找到。]]></description>
      <guid>https://t.me/hn_summary/105189</guid>
      <pubDate>Fri, 23 Aug 2024 03:58:48 GMT</pubDate>
    </item>
    </channel>
</rss>