<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>HN总结</title>
    <link>https://tg.i-c-a.su</link>
    <description>由大型语言模型编写的顶级黑客新闻故事的自动摘要。</description>
    <lastBuildDate>Fri, 17 May 2024 03:20:57 GMT</lastBuildDate>
    <item>
      <title>[媒体] Kaffeklubben 岛 – 地球上最北端无可争议的陆地点</title>
      <link>https://t.me/hn_summary/90036</link>
      <description><![CDATA[Kaffeklubben岛——地球上毫无争议的最北陆地点 
卡菲克鲁本岛 – 地球上无可争议的最北陆地点

卡菲克卢本岛（Kaffeklubben Island），也被称为咖啡俱乐部岛，是格陵兰岛北海岸的一座无人居住的岛屿，被认为是地球上毫无争议的最北陆地点。它由美国探险家罗伯特·皮里 (Robert Peary) 于 1900 年发现，丹麦探险家劳格·科赫 (Lauge Koch) 于 1921 年首次访问它，并以哥本哈根大学地质博物馆的一个咖啡俱乐部命名。 1969年，加拿大队超越了莫里斯杰瑟普角，确认了其最北陆地的地位。尽管条件恶劣，岛上仍然生长着苔藓、地钱、地衣和开花植物等植被。关于附近的砾石堤岸是否应被视为最北端的土地存在争议，但 2022 年的一项调查证实了 Kaffeklubben 的地位。]]></description>
      <guid>https://t.me/hn_summary/90036</guid>
      <pubDate>Fri, 17 May 2024 03:20:57 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在《城市更新毁了一切》中，达雷尔·欧文斯 (Darrell Owens) 批评了低效率和高效率 [...]</title>
      <link>https://t.me/hn_summary/90035</link>
      <description><![CDATA[城市更新毁了一切
达雷尔·欧文斯在《城市更新毁了一切》一书中批评了美国基础设施项目的低效​​率和高成本，并将其与中国的快速发展进行了对比。欧文斯将问题归咎于 20 世纪 50 年代和 1960 年代的城市更新政策，这些政策积极地重新开发低收入地区，常常取代少数族裔社区，并且无法吸引私人投资。这段历史导致公众对政府项目不信任，并过度依赖私营公司进行城市规划。欧文斯认为，当前的公共程序，包括过多的会议和环境法，进一步阻碍了发展，并对少数族裔和低收入社区产生了不成比例的影响。他建议美国需要重新考虑其土地利用和基础设施规划的方法，以避免重蹈覆辙并有效满足未来的需求。 

争议点：
- 声称城市更新的目的是破坏而不是改善社区。
- 对环境法的批评是阻碍性而非保护性。

独特/聪明的见解：
- 美国分区法与日本和奥地利的分区法的比较，突出了不同的土地利用方法。
- 观察发现，过多的公开会议有利于较富裕的退休居民，而损害了工薪阶层的个人利益。]]></description>
      <guid>https://t.me/hn_summary/90035</guid>
      <pubDate>Fri, 17 May 2024 03:12:51 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在这篇文章中，我深入研究了使用 Rust 宏创建自定义 VTabl 的复杂性 [...]</title>
      <link>https://t.me/hn_summary/90034</link>
      <description><![CDATA[为自定义 VTable 使用 Rust 宏
在这篇文章中，我深入研究了使用 Rust 宏创建自定义 VTable 的复杂性，特别关注 MiniJinja 的开发，MiniJinja 是 Jinja2 模板引擎的 Rust 实现。 MiniJinja 旨在将动态功能引入 Rust，这是一种通常不以其动态运行时而闻名的语言。该实现的核心是 type_erase! 宏，由 Sergio Benitez 贡献，它通过引用计数促进动态类型处理和垃圾收集。这使得 MiniJinja 能够有效地管理运行时值，支持各种数据类型和复杂对象。这篇文章还探讨了如何使用 Object 特征向引擎公开自定义对象，从而实现迭代和键值访问等动态操作。这种方法对于需要静态类型语言（如 Rust）动态行为的模板引擎特别有用。 （根据故事文本的 28% 进行摘要。）]]></description>
      <guid>https://t.me/hn_summary/90034</guid>
      <pubDate>Fri, 17 May 2024 03:04:43 GMT</pubDate>
    </item>
    <item>
      <title>[媒体]在最近的讨论中，数据科学家意识到使用数据的必要性[...]</title>
      <link>https://t.me/hn_summary/90033</link>
      <description><![CDATA[数据科学家数据库 - 以及为什么您可能不需要一个数据库
在最近的讨论中，数据科学家意识到使用数据库来扩展分析的必要性。然而，许多人都在经历这种转变。好消息是，如果您熟悉 dplyr，那么您已经领先了。需要掌握的关键概念包括理解 RDBMS、主键和外键、数据库规范化、模式与表、视图与表以及表索引。令人惊讶的是，您可能不需要完整的 RDBMS； Apache Arrow 和 DuckDB 等工具以及 parquet 文件通常可以满足您的分析需求，提供高效、大于内存的数据处理，而无需传统数据库的复杂性。]]></description>
      <guid>https://t.me/hn_summary/90033</guid>
      <pubDate>Fri, 17 May 2024 02:56:36 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 20 世纪 30 年代，苏联收购了一家破产的俄亥俄州手表制造商并搬迁到 [...]</title>
      <link>https://t.me/hn_summary/90032</link>
      <description><![CDATA[苏联如何彻底改变腕表（2016）
20 世纪 30 年代，苏联收购了一家破产的俄亥俄州手表制造商，并将其及其员工迁至莫斯科。最初被低估的苏联人将这个工坊变成了全球制表强国，甚至可以与瑞士相媲美。到了 20 世纪 50 年代，苏联手表以其精准、耐用和经济实惠而闻名，尽管冷战局势紧张，但在西方也很受欢迎。然而，由于经济停滞和军事优先考虑，该行业在 20 世纪 80 年代衰落。如今，老式苏联手表受到 Dashiell Oatman-Stanford 等收藏家的珍视，他们精心修复和研究这些机械奇迹。这个故事凸显了苏联在一个意想不到的行业取得的惊人成功。 （根据 47% 的故事文本进行总结。）]]></description>
      <guid>https://t.me/hn_summary/90032</guid>
      <pubDate>Fri, 17 May 2024 02:27:23 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 网站：www.quantamagazine.org</title>
      <link>https://t.me/hn_summary/90031</link>
      <description><![CDATA[博弈论可以让人工智能更加正确和高效&lt; br/&gt;
标题：博弈论可以让人工智能更加正确和高效
网站：www.quantamagazine.org

像 ChatGPT 这样的大型语言模型 (LLM) 通常会根据问题的措辞给出不一致的答案。为了解决这个问题，由 Athul Paul Jacob 领导的麻省理工学院研究人员开发了“共识博弈”，它使用博弈论来调整模型的生成模式和判别模式。这种创新方法使法学硕士与自身竞争，激励达成一致并提高准确性。该方法计算量轻，不需要重新训练模型。该团队还探索其他博弈论应用，例如“集成博弈”，以进一步提高法学硕士的表现。这项开创性的工作为人工智能研究和实际应用开辟了新途径。]]></description>
      <guid>https://t.me/hn_summary/90031</guid>
      <pubDate>Fri, 17 May 2024 02:26:19 GMT</pubDate>
    </item>
    <item>
      <title>欢迎来到“学习 Rust 的 100 个练习”！</title>
      <link>https://t.me/hn_summary/90030</link>
      <description><![CDATA[100 个学习 Rust 的练习
欢迎来到“学习 Rust 的 100 个练习”！本课程旨在通过一系列练习向您传授 Rust 的核心概念。您将探索 Rust 的语法、类型系统、标准库和生态系统，而无需事先了解 Rust 或系统编程知识。本课程旨在逐步培养您的 Rust 技能，使其适合那些熟悉其他编程语言的人。这门互动实践课程由 Mainmatter 开发，非常适合课堂环境，但也可以独立学习。每个部分都会介绍一个新的 Rust 概念，并配有一个练习来巩固您的理解。解决方案和指南可在 GitHub 上找到。享受和我们一起学习 Rust！

独特/聪明的方面：该课程采用“边做边学”的原则，确保实际的 Rust 实践经验。

令人惊讶的元素：该课程设计为在四天的课堂环境中进行，并由经验丰富的讲师提供个性化指导。]]></description>
      <guid>https://t.me/hn_summary/90030</guid>
      <pubDate>Fri, 17 May 2024 02:25:14 GMT</pubDate>
    </item>
    <item>
      <title>网站：honeypot.net</title>
      <link>https://t.me/hn_summary/90029</link>
      <description><![CDATA[在收到 / 的 404 请求之前，它在线了 3 秒。 git/config
标题：在线3秒后收到/.git/config的404请求
网站：honeypot.net

我并没有夸大这一点：我在 DNS 中创建了一个新的主机名并将其添加到我现有的网络服务器配置中。它在线了 3 秒——3 秒！——然后收到对 /.git/config 的 404 请求。如果您依靠默默无闻来保护您的服务，那么今天就从您的愚蠢头脑中摆脱这一点。你有大约 3 秒钟的时间来准备好你的表演。在我输入此内容的时间内，我收到了另外 62 个请求，其中包括“/.vscode/sftp.json”、“/server-status”和“/.env”等路径。这凸显了网络漏洞扫描的持续性和自动化本质。]]></description>
      <guid>https://t.me/hn_summary/90029</guid>
      <pubDate>Fri, 17 May 2024 02:24:10 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 我们很高兴地宣布发布 Ruby 3.4.0-preview1。</title>
      <link>https://t.me/hn_summary/90028</link>
      <description><![CDATA[Ruby 3.4.0 Preview1 发布
我们很高兴地宣布 Ruby 3.4.0-preview1 发布。此版本引入了多项语言更改，包括默认冻结没有 frozen_string_literal 注释的文件中的字符串文字，如果发生变化，则会发出弃用警告。可以使用 --disable-frozen-string-literal 参数禁用此功能。此外，现在支持关键字 splatting nil，并且不再允许在索引中传递块。核心类更新包括接受Thread::Backtrace::Location数组的Exception#set_backtrace，以及Range#size引发TypeError&lt; /code&gt; 如果不可迭代。值得注意的是，Array#each 已用 Ruby 重写，以获得更好的性能。有关更多详细信息，请参阅 新闻 或提交日志。提供下载链接和校验和。]]></description>
      <guid>https://t.me/hn_summary/90028</guid>
      <pubDate>Fri, 17 May 2024 02:05:58 GMT</pubDate>
    </item>
    <item>
      <title>[媒体]我们介绍 MOMENT，这是一个专为通用设计的开源基础模型系列 [...]</title>
      <link>https://t.me/hn_summary/90027</link>
      <description><![CDATA[时刻：一系列开放时间序列基础模型
我们介绍 MOMENT，这是一系列专为通用时间序列分析而设计的开源基础模型。在时间序列数据上预训练大型模型面临着独特的挑战，例如缺乏全面的公共时间序列存储库以及时间序列数据的多样化特征，这使得多数据集训练变得复杂。此外，用于评估这些模型的实验基准（尤其是在资源有限的情况下）仍在开发中。为了解决这些问题，我们创建了时间序列桩，这是一个大型且多样化的公共时间序列数据集合，并系统地解决了特定于时间序列的挑战，以实现大规模多数据集预训练。我们还设计了一个基准来在有限监督的情况下在各种任务和数据集上评估这些模型。我们的实验证明了我们的预训练模型在最少的数据和特定于任务的微调的情况下的有效性。值得注意的是，我们提出了关于大型预训练时间序列模型的一些有趣的经验观察。 Huggingface 上提供了预训练模型 (AutonLab/MOMENT-1-large) 和时间序列桩 (AutonLab/Timeseries-PILE)。]]></description>
      <guid>https://t.me/hn_summary/90027</guid>
      <pubDate>Fri, 17 May 2024 01:49:49 GMT</pubDate>
    </item>
    </channel>
</rss>