<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>HN总结</title>
    <link>https://tg.i-c-a.su</link>
    <description>由大型语言模型编写的顶级黑客新闻故事的自动摘要。</description>
    <lastBuildDate>Tue, 30 Jan 2024 14:48:26 GMT</lastBuildDate>
    <item>
      <title>这篇文章讨论了农用空气炮不断发射造成的破坏[...]</title>
      <link>https://t.me/hn_summary/71796</link>
      <description><![CDATA[寻找空气炮
这篇文章讨论了科瓦利斯附近社区日夜每两分钟发射一次农用空气炮造成的破坏。作者使用谷歌地图、三个监听站和一个编程模拟来精确定位空气炮所在的区域。他们找到了造成噪音的农场，并联系了农场经理，同时夜间空气炮停止了。笔者怀疑经理在谈话后停止了这种做法。文章强调了作者寻找噪声源的决心以及使用他们的方法定位噪声源的能力。 （根据 82% 的故事文本进行总结。）]]></description>
      <guid>https://t.me/hn_summary/71796</guid>
      <pubDate>Tue, 30 Jan 2024 14:48:26 GMT</pubDate>
    </item>
    <item>
      <title>[媒体]网络内容讨论了硅谷技术威权主义的兴起。</title>
      <link>https://t.me/hn_summary/71795</link>
      <description><![CDATA[技术威权主义的兴起
网络内容讨论了硅谷技术威权主义的兴起。它强调了 Facebook 的有争议行为，例如传播虚假信息、进行情绪操纵实验和煽动暴力。作者认为，Facebook 的行为是整个科技行业的象征，YouTube、Instagram 和 Twitter 等其他平台也损害了个人权利和民主。这篇文章批评了这些科技公司的潜在意识形态，将其称为独裁技术官僚。它认为，这些公司将规模和利润置于安全和公共责任之上，并在没有有意义的协商或透明度的情况下将其信仰和制度强加给民众。 （根据故事文本的 63% 进行摘要。）]]></description>
      <guid>https://t.me/hn_summary/71795</guid>
      <pubDate>Tue, 30 Jan 2024 14:47:17 GMT</pubDate>
    </item>
    <item>
      <title>skyzh.github.io 上的本教程教读者如何构建一个简单的 LSM-Tree 存储引擎 [...]</title>
      <link>https://t.me/hn_summary/71794</link>
      <description><![CDATA[一周内构建一个简单的 LSM-Tree 存储引擎
skyzh.github.io 上的本教程教读者如何使用 Rust 编程语言构建一个简单的 LSM-Tree 存储引擎。本教程解释了 LSM-Tree 是 TiDB 和 CockroachDB 等分布式数据库系统中常用的数据结构。它将 LSM-Tree 与 RB-Tree 和 B-Tree 等其他键值数据结构进行了比较，强调了 LSM-Tree 追加友好设计的优势。本教程涵盖 Rust 编程和键值存储引擎的基础知识，并推荐一些有关 LSM 树概念的背景阅读。这是一门综合课程，分为几个部分，每个部分都包含可在 2-3 小时内完成的章节。本教程提供了用于验证的测试套件和 CLI 工具，但请注意该测试套件可能并不详尽。作者还提供了一个解决方案检查点存储库供参考，但警告它可能不包含正确的解决方案。本教程已获得 Apache 2.0 许可，作者欢迎提供反馈以不断改进课程。]]></description>
      <guid>https://t.me/hn_summary/71794</guid>
      <pubDate>Tue, 30 Jan 2024 14:45:08 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] Apple Vision Pro 是苹果公司进军可穿戴电脑领域的一次尝试。</title>
      <link>https://t.me/hn_summary/71793</link>
      <description><![CDATA[Apple Vision Pro 评测：神奇，直到它不是 
Apple Vision Pro 是苹果进军可穿戴电脑领域的一次尝试。它的售价为 3,499 美元，承诺为用户带来空间计算和增强现实。然而，Vision Pro 面临着来自 Oculus Quest 3 等其他 VR 耳机的激烈竞争，后者以低廉的价格提供了类似的体验。 Vision Pro 拥有令人印象深刻的功能，例如高品质显示屏、手眼追踪以及与 Apple 生态系统的无缝集成。然而，它也有其缺点，包括价格高昂、视频直通模糊、跟踪不一致以及诡异的角色。最终，Vision Pro 要想超越竞争对手，还有很长的路要走。 （根据故事文本的 24% 进行摘要。）]]></description>
      <guid>https://t.me/hn_summary/71793</guid>
      <pubDate>Tue, 30 Jan 2024 14:42:59 GMT</pubDate>
    </item>
    <item>
      <title>[媒体]文章讨论了全球生育率下降以及潜在的长期 [...]</title>
      <link>https://t.me/hn_summary/71792</link>
      <description><![CDATA[全球生育率不仅在下降，而且正在崩溃 
文章讨论了全球生育率下降和人口数量潜在的长期下降。作者强调了经济学家赫苏斯·费尔南德斯-维拉韦德的预测，他认为全球生育率下降的速度比之前想象的要快。作者还介绍了“85 规则”，这是一种人口统计方法，用于根据出生率和预期寿命估算长期人口。虽然生育率下降被视为一种趋势，但作者承认，社会和文化因素以及医疗保健的进步和预期寿命的变化可能会影响未来的人口趋势。]]></description>
      <guid>https://t.me/hn_summary/71792</guid>
      <pubDate>Tue, 30 Jan 2024 14:42:51 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 该项目是一个用 Go 编写的简单 TCP 转发实用程序。</title>
      <link>https://t.me/hn_summary/71791</link>
      <description><![CDATA[显示 HN：用 Go 编写的简单 TCP 桥&lt; br/&gt;
该项目是一个用 Go 编写的简单 TCP 转发实用程序。它允许用户将 TCP 连接从端口列表转发到指定的目标主机。该项目的目的是提供一种直接的方法来转发 TCP 连接，而不需要复杂的配置。它可用于解决本地开发的端口转发或将流量重定向到不同服务器等问题。作者提到该项目与其他项目的区别在于其简单性和易用性。该项目可以使用 Go 编译器或从源代码编译来安装和运行。]]></description>
      <guid>https://t.me/hn_summary/71791</guid>
      <pubDate>Tue, 30 Jan 2024 14:39:43 GMT</pubDate>
    </item>
    <item>
      <title>[媒体]此 Web 内容的作者讨论了他们希望使 Emacs 看起来更直观的愿望 [...]</title>
      <link>https://t.me/hn_summary/71790</link>
      <description><![CDATA[我只是想让 Emacs 看起来漂亮 – 在中使用 24 位颜色终端
此 Web 内容的作者讨论了他们希望通过在终端中使用 24 位颜色使 Emacs 看起来更具视觉吸引力。他们解释说，虽然图形 Emacs 自动支持 24 位颜色，但终端 Emacs 不支持。作者深入研究了 ANSI 转义码的历史以及终端中颜色的引入。他们还探讨了 24 位颜色支持的起源以及围绕用于将颜色代码发送到终端的语法的混乱。该内容为那些有兴趣在终端环境中自定义 Emacs 外观的人提供技术信息和历史背景。 （根据故事文本的 26% 进行摘要。）]]></description>
      <guid>https://t.me/hn_summary/71790</guid>
      <pubDate>Tue, 30 Jan 2024 14:39:34 GMT</pubDate>
    </item>
    <item>
      <title>[媒体]Wren 是一款笔记应用程序和待办事项管理系统，旨在简化 [...]</title>
      <link>https://t.me/hn_summary/71789</link>
      <description><![CDATA[显示 HN：Wren – 使用 CLI、Telegram 进行简单但可扩展的任务管理, HTTP
Wren 是一款笔记应用程序和待办事项管理系统，旨在简单而先进。它的与众不同之处在于使用基于文件的方法，其中每个笔记都存储为单独的文件，从而可以轻松在设备之间同步任务并最大限度地减少冲突。这些文件是纯文本，可以轻松编辑。 Wren 还具有可扩展性，提供用于管理笔记和接收人工智能驱动的每日摘要的 Telegram 机器人，以及用于通过 API 或浏览器管理任务的微型 HTTP 服务器。该项目提供了命令行界面、集成和配置选项的安装说明和使用示例。]]></description>
      <guid>https://t.me/hn_summary/71789</guid>
      <pubDate>Tue, 30 Jan 2024 14:38:23 GMT</pubDate>
    </item>
    <item>
      <title>Web 内容的作者讨论了证书生命周期自动化的重要性。</title>
      <link>https://t.me/hn_summary/71788</link>
      <description><![CDATA[为什么证书生命周期自动化很重要
Web 内容的作者讨论了证书生命周期自动化的重要性。他们分析来自受损证书的数据，并确定受损证书数量最多的颁发者。然后，作者根据不同证书颁发机构（CA）的发行量来比较其妥协率。他们根据泄密率将 CA 分为“超级泄密者”、“常规泄密者”和“低泄密者”。作者强调，由于以人为中心的做法，传统 CA 更容易受到损害，而使用自动化的 Let&#39;s Encrypt 的妥协率较低。作者还提到了一个异常值 DigiCert，尽管它是传统 CA，但其妥协率较低，这可能是由于管理主要托管 TLS 提供商的证书。 （根据 72% 的故事文本进行总结。）]]></description>
      <guid>https://t.me/hn_summary/71788</guid>
      <pubDate>Tue, 30 Jan 2024 14:21:10 GMT</pubDate>
    </item>
    <item>
      <title>[媒体]作者讨论了 GNU Emacs 中的垃圾收集问题并提供了一个 hack [...]</title>
      <link>https://t.me/hn_summary/71787</link>
      <description><![CDATA[原始神奇的 Emacs 垃圾收集技巧 (2019) 
作者讨论了 GNU Emacs 中的垃圾收集问题，并提供了优化它的方法。他们解释说，Emacs 需要不时地回收未使用的内存，这可能会导致延迟并影响性能。作者建议使用“gc-elapsed”变量来检查垃圾收集所花费的时间，然后介绍了一种调整垃圾收集器在 Emacs 空闲时运行的方法。他们建议将垃圾收集阈值设置为 1GB，并使用计时器每 15 秒空闲时间运行一次垃圾收集器。作者声称这种非常规策略可以提高响应能力和生产力。]]></description>
      <guid>https://t.me/hn_summary/71787</guid>
      <pubDate>Tue, 30 Jan 2024 14:20:01 GMT</pubDate>
    </item>
    </channel>
</rss>