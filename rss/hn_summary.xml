<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>HN 摘要</title>
    <link>https://tg.i-c-a.su</link>
    <description>由大型语言模型编写的热门 Hacker News 故事的自动摘要。</description>
    <lastBuildDate>Mon, 23 Sep 2024 06:31:24 GMT</lastBuildDate>
    <item>
      <title>Qocker 是一个用户友好的 Qt GUI 应用程序，专为管理 Docker 容器而设计，由我们构建 [...]</title>
      <link>https://t.me/hn_summary/109499</link>
      <description><![CDATA[Qocker 是一款用户友好的 Qt GUI 应用程序，用于管理 Docker 容器
Qocker 是一款用户友好的 Qt GUI 应用程序，专为管理 Docker 容器而设计，使用 PyQt5 构建。它提供了一个直观的界面来查看和与 Docker 容器交互，具有用于容器概览的树状结构、通过双击快速访问终端以及从 GUI 直接管理容器（启动、停止、删除）。它提供容器状态的实时更新，并且是跨平台的，可在 Windows、macOS 和 Linux 上运行。要使用 Qocker，需要 Python 3.6+ 和 Docker。该项目开放贡献，并根据 GNU 通用公共许可证 v3.0 获得许可。]]></description>
      <guid>https://t.me/hn_summary/109499</guid>
      <pubDate>Mon, 23 Sep 2024 06:31:24 GMT</pubDate>
    </item>
    <item>
      <title>你好，我想开发一个简单的应用程序，每天凌晨 4 点运行批处理作业。</title>
      <link>https://t.me/hn_summary/109498</link>
      <description><![CDATA[询问 HN：创建一个发送带有文本的电子邮件的应用程序
嗨，我想开发一个简单的应用程序，每天凌晨 4 点运行批处理作业。该应用程序应从数据库中提取一个片段并将其通过电子邮件发送给收件人列表。虽然我是一名具有技术背景的技术非编程 PM，但我多年没有编码了。这个项目旨在作为评估产品/市场契合度的快速概念验证，因此我不需要像 Twilio 这样的企业级集成。我有兴趣自己做这件事，并希望得到任何关于从哪里开始的指导。O-1 模型是否足够先进，可以为我创建和部署这个应用程序？正在寻找简单的提示。]]></description>
      <guid>https://t.me/hn_summary/109498</guid>
      <pubDate>Mon, 23 Sep 2024 06:24:16 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 哪条商业航线最需要（最低可能）？</title>
      <link>https://t.me/hn_summary/109497</link>
      <description><![CDATA[哪条商业航线需要从 A 点到 B 点的停靠次数最多（最少可能）？
travel.stackexchange.com 上的文章探讨了从 A 点到 B 点需要停靠次数最多的商业航线。答案因所应用的规则而异，例如将飞行次数计为多次飞行。一个值得注意的行程涉及从 Savissivik 直升机场 (SVR) 到 Stony River (SRV) 的 13 次飞行，途经包括图勒空军基地在内的多个地点，这需要获得通行许可证。这条路线很复杂，由于航班数量有限，不容易实现。本文讨论了替代方案和变化方案，包括避开直升机或特定机场的路线。本文还强调了这些行程对旅行方向和季节性航班可用性的敏感性。]]></description>
      <guid>https://t.me/hn_summary/109497</guid>
      <pubDate>Mon, 23 Sep 2024 06:23:13 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 这家咖啡馆的二维码菜单里有什么？</title>
      <link>https://t.me/hn_summary/109496</link>
      <description><![CDATA[这家咖啡馆的二维码菜单里有什么？
几天前，我去了一家当地咖啡馆，扫描了桌子上的二维码以访问菜单。输入我的名字和 WhatsApp 号码后，我下了订单，订单在五分钟内就送到了，无需任何验证。出于好奇，我在笔记本电脑上浏览了二维码网站，发现它是由 Dotpe 运营的，这是一家为餐厅提供“全栈食品堆栈”的公司。通过检查 API 请求，我发现我可以访问敏感信息，例如正在进行的订单、购买历史记录和客户详细信息，而无需任何身份验证。这引发了严重的隐私问题，因为我可以看到其他人在点什么，甚至可以代表他们下订单。Dotpe 缺乏基本的安全措施和开放的 API，任何人都可以轻松访问和滥用这些数据。尽管存在滥用的可能性，Dotpe 的设计仍提供了不受约束的访问权限，这让人怀疑他们的意识和意图。下次你在餐厅扫描二维码时，请记住你的用餐选择可能会被网上的陌生人看到。]]></description>
      <guid>https://t.me/hn_summary/109496</guid>
      <pubDate>Mon, 23 Sep 2024 06:12:06 GMT</pubDate>
    </item>
    <item>
      <title>在这本尖刻而幽默的指南中，作者概述了着色所需的最低限度的步骤 [...]</title>
      <link>https://t.me/hn_summary/109495</link>
      <description><![CDATA[开始托管自己的内容的糟糕方式
在这本尖刻而幽默的指南中，作者概述了托管自己的硬件所需的最低限度步骤。该过程有意以一种突出潜在陷阱和以最小努力做事的荒谬性的方式进行描述。作者分享了一个关于一位朋友的轶事，这位朋友通过将他们的服务器移动到托管设施来改善他们的在家办公设置，从而实现了更好的连接性和更快乐的用户。该指南包括诸如搜寻旧硬件、安装 Linux、查找本地托管设施和配置网络等步骤。作者强调这只是一种方法，而不是唯一方法，并驳斥了可能建议使用替代操作系统的批评者。]]></description>
      <guid>https://t.me/hn_summary/109495</guid>
      <pubDate>Mon, 23 Sep 2024 06:06:59 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] eil.com 提供一系列稀有的黑胶唱片，其中包括《The [...]》等著名唱片。</title>
      <link>https://t.me/hn_summary/109494</link>
      <description><![CDATA[稀有黑胶唱片
eil.com 提供一系列稀有黑胶唱片，包括 The Crickets 的“The &#39;Chirping&#39; Crickets”首张英国单声道 LP，由 Buddy Holly 演唱，售价为 195.00 英镑。另一个亮点是 Beggar&#39;s Opera 的“Pathfinder”首张 LP，带有独特的折叠海报封套，售价为 75.00 英镑。The Runaways 的“Live In Japan”LP，配有腰带和肖像，售价为 55.00 英镑。 Black Sabbath 的“Collection Vol 1”和“Collection Vol 2”西班牙语三张 LP 盒装售价为每张 85.00 英镑。U2 的“A Day Without Me”爱尔兰 7 英寸单曲以 45.00 英镑的折扣价出售。披头士乐队的“Sgt. Pepper&#39;s” 首版立体声 LP 售价为 495.00 英镑。Emerson Lake &amp; Palmer 的“From The Beginning”5 张 CD 套装售价为 50.00 英镑。Dead Or Alive 的“Nude” 粉色和黑色漩涡黑胶唱片售价为 29.99 英镑，Fleetwood Mac 的“Rumours”浅蓝色黑胶唱片售价也是 29.99 英镑。麦当娜的“Like A Prayer”银色黑胶唱片是 35 周年纪念版，但未列出价格。

争议：无。
独特/巧妙：包含独特的包装，例如 Beggar&#39;s Opera 的折叠海报封套和 The Runaways LP 的全套肖像，为收藏家增加了重要价值。（基于 86% 的故事文本的摘要。）]]></description>
      <guid>https://t.me/hn_summary/109494</guid>
      <pubDate>Mon, 23 Sep 2024 06:04:55 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] Palletrone 是一款专为空中货物运输而设计的机器人气垫车，融合了 [...]</title>
      <link>https://t.me/hn_summary/109493</link>
      <description><![CDATA[Palletrone 是一款用于将物品运送到任何地方的机器人气垫车
Palletrone 是一款专为空中货物运输而设计的机器人气垫车，融合了托盘和无人机的概念。它通过保持其滚动和俯仰为零来保持稳定的平台，即使货物装载不均匀。用户通过触摸控制其运动，无人机的 IMU 可区分人力和货物力。Palletrone 的内部螺旋桨臂可向任何方向引导推力，确保稳定性。尽管存在潜在的气流问题，但其多孔侧面结构最大限度地减少了推力的减少。目前，它需要手动控制，最多可承载 3 公斤。未来的应用包括用作飞行三脚架或移动式小车，以实现灵活的相机移动。研究人员还在开发一种用于飞行中电池更换的对接系统，以增强其实用性。]]></description>
      <guid>https://t.me/hn_summary/109493</guid>
      <pubDate>Mon, 23 Sep 2024 05:04:30 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在我之前关于批量操作的文章中，我使用了 where id = any(:ids) 模式 [...]</title>
      <link>https://t.me/hn_summary/109492</link>
      <description><![CDATA[为什么避免在 Postgres 上使用具有可变数量绑定参数的 where id in
在我之前关于批处理操作的帖子中，我使用了 where id = any(:ids) 模式，其中 ids 绑定到 JDBC 数组，而不是 in (:id1, :id2, ...) 模式。尽管许多库处理动态 SQL 生成，但出于与查询性能无关的原因，我更喜欢 = any(:ids)。这两种模式都产生相同的查询计划和执行时间。= any(:ids) 的主要优势是查询跟踪的一致性。它在 pg_stat_statements 中生成一行聚合性能数据，而 in 模式则根据占位符的数量生成多个条目。这种一致性简化了性能监控和遥测。此外，in 运算符过去仅限于 1000 个元素，这可能会使遥测因众多查询变体而变得混乱。]]></description>
      <guid>https://t.me/hn_summary/109492</guid>
      <pubDate>Mon, 23 Sep 2024 04:51:23 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 堪萨斯州立大学 (K-State) 的研究人员发现，用 [...]</title>
      <link>https://t.me/hn_summary/109491</link>
      <description><![CDATA[研究发现，用有机肥料处理的土壤储存更多的碳
堪萨斯州立大学 (K-State) 的研究人员发现，用有机肥料（如粪肥或堆肥）处理的土壤比用化学肥料处理或未施肥的土壤储存更多的碳。该团队利用先进的同步加速器光源分析了堪萨斯州免耕玉米地的土壤，发现有机处理通过将碳保存在土壤孔隙中并将其附着在矿物质上来增强碳储存。这项研究发表在《美国土壤科学学会杂志》上，首次直接证明了有机改良剂如何改善土壤健康、微生物多样性和碳封存。Ganga Hettiarachchi 博士强调，这些发现可能带来更可持续和再生的农业实践。]]></description>
      <guid>https://t.me/hn_summary/109491</guid>
      <pubDate>Mon, 23 Sep 2024 03:20:54 GMT</pubDate>
    </item>
    <item>
      <title>这是 PiArtFrame 项目的快速更新。</title>
      <link>https://t.me/hn_summary/109490</link>
      <description><![CDATA[显示 HN：使用 C++ 实现的带有 Mandelbrot 或 Julia 分形的电子纸框架
以下是 PiArtFrame 项目的快速更新。GitHub 用户 kevlol 将 runezor 的原始 Python 代码移植到 C++，从而生成一个更稳定的系统，具有可自定义的刷新时间和可调节的图像“黑色级别”。此 C++ 版本显著降低了 Raspberry Pi 的 CPU 使用率和功耗，使渲染速度更快。受这些改进的启发，我重建了 PiArtFrame，添加了 Julia 集分形，并为其他人创建了一个指南。

令人惊讶的是，我最初的显示问题是由于引脚焊接不良，而不是电子纸显示器故障。修复焊接后，我的新旧显示器都运行正常。 

组装时，使用 Raspberry Pi（我使用的是 Zero 2）、Waveshare 电子纸显示器和框架。按照提供的软件设置说明，即可在电子纸框架上欣赏美丽的分形。]]></description>
      <guid>https://t.me/hn_summary/109490</guid>
      <pubDate>Mon, 23 Sep 2024 03:06:47 GMT</pubDate>
    </item>
    </channel>
</rss>