<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sun, 17 Nov 2024 01:55:56 GMT</lastBuildDate>
    <item>
      <title>用离谱的简短一句话进行恶搞 - Codewars 有效的国际象棋动作</title>
      <link>https://www.reddit.com/r/programming/comments/1gt29tg/trolling_with_outrageous_short_one_liners/</link>
      <description><![CDATA[  由    /u/The_Random_Coder  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gt29tg/trolling_with_outrageous_short_one_liners/</guid>
      <pubDate>Sun, 17 Nov 2024 01:21:04 GMT</pubDate>
    </item>
    <item>
      <title>从 Game Boy Advance 到今天：有限的硬件如何改进我的软件 | Hugo Adams | NZGDC 2024</title>
      <link>https://www.reddit.com/r/programming/comments/1gt1wbi/from_game_boy_advance_to_today_how_limited/</link>
      <description><![CDATA[  由    /u/r_retrohacking_mod2  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gt1wbi/from_game_boy_advance_to_today_how_limited/</guid>
      <pubDate>Sun, 17 Nov 2024 01:02:01 GMT</pubDate>
    </item>
    <item>
      <title>使用 QuickJS qjsc 将 JavaScript 源代码编译为 C 语言，然后编译为独立可执行文件</title>
      <link>https://www.reddit.com/r/programming/comments/1gt0umi/compiling_javascript_source_code_to_c_then_a/</link>
      <description><![CDATA[  由    /u/guest271314  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gt0umi/compiling_javascript_source_code_to_c_then_a/</guid>
      <pubDate>Sun, 17 Nov 2024 00:09:55 GMT</pubDate>
    </item>
    <item>
      <title>Obsidian 中的 Miss Notion AI？这是我用插件将其带回来的计划！🚀</title>
      <link>https://www.reddit.com/r/programming/comments/1gsz7op/miss_notion_ai_in_obsidian_heres_my_plan_to_bring/</link>
      <description><![CDATA[作为一名最近从 Notion 转到 Obsidian 的大学生，我非常怀念的一个功能是浮动的 Notion AI 聊天机器人，它总是可以提供快速帮助。受此启发，我开始为 Obsidian 开发一个插件，带来类似的体验，使用 Gemini API 进行笔记摘要、内容生成等 - 所有这些都直接在 Obsidian 工作区内完成！ 该插件 Obsi AI 旨在无缝集成到 Obsidian 强大的 markdown 环境中，在您需要时提供 AI 驱动的帮助。无论您是在寻找快速笔记摘要、集思广益还是生成内容，Obsi AI 都旨在简化您的工作流程，而无需离开您的笔记。 🔹 主要特点：  即时内容生成和笔记摘要 基于您的笔记的上下文感知响应 Obsidian 工作区内可用的交互式助手  ⚠️ 注意：我开发这个插件是出于爱好，虽然我是一名网络安全本科生而不是专业开发人员，所以代码可能是我热衷于让这个工具对其他 Obsidian 用户有用。如果您有兴趣合作或有功能建议，我很乐意听取您的意见！ 请随时查看 GitHub 存储库，如果您喜欢所看到的内容，请给它一个 ⭐️ 以表示您的支持！ https://github.com/tharushkadinujaya05/ObsiAI 我很高兴听到您的想法和反馈。让我们将 Obsi AI 打造成每个热爱 Obsidian 的人的有用工具！    提交人    /u/tharushkadinujaya05   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gsz7op/miss_notion_ai_in_obsidian_heres_my_plan_to_bring/</guid>
      <pubDate>Sat, 16 Nov 2024 22:50:24 GMT</pubDate>
    </item>
    <item>
      <title>创建用于管理广告的自定义 Web 应用</title>
      <link>https://www.reddit.com/r/programming/comments/1gsyxa4/creating_a_custom_web_app_for_managing_ads/</link>
      <description><![CDATA[  由    /u/Cheap-Picks  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gsyxa4/creating_a_custom_web_app_for_managing_ads/</guid>
      <pubDate>Sat, 16 Nov 2024 22:36:32 GMT</pubDate>
    </item>
    <item>
      <title>使用 UNNEST 将 Postgres INSERT 性能提高 50%</title>
      <link>https://www.reddit.com/r/programming/comments/1gsylyv/boosting_postgres_insert_performance_by_50_with/</link>
      <description><![CDATA[  由    /u/jamesgresql  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gsylyv/boosting_postgres_insert_performance_by_50_with/</guid>
      <pubDate>Sat, 16 Nov 2024 22:21:20 GMT</pubDate>
    </item>
    <item>
      <title>使用 Mill Build 工具实现更好的 Scala 构建</title>
      <link>https://www.reddit.com/r/programming/comments/1gswhv1/better_scala_builds_with_the_mill_build_tool/</link>
      <description><![CDATA[  由    /u/lihaoyi  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gswhv1/better_scala_builds_with_the_mill_build_tool/</guid>
      <pubDate>Sat, 16 Nov 2024 20:41:53 GMT</pubDate>
    </item>
    <item>
      <title>如何准备 FAANG 编程面试：57 天计划</title>
      <link>https://www.reddit.com/r/programming/comments/1gsvlfr/how_to_prepare_for_faang_coding_interviews_a/</link>
      <description><![CDATA[  由    /u/BeautifulAnywhere392  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gsvlfr/how_to_prepare_for_faang_coding_interviews_a/</guid>
      <pubDate>Sat, 16 Nov 2024 19:59:56 GMT</pubDate>
    </item>
    <item>
      <title>作为一名 MERN 开发人员，我该如何脱颖而出？</title>
      <link>https://www.reddit.com/r/programming/comments/1gsvdzv/how_can_i_differentiate_myself_as_a_mern_developer/</link>
      <description><![CDATA[大家好， 我是一名 MERN 堆栈开发人员，拥有 3 年以上经验，并且有 4 年多的软件开发学习经验。我发现，当我在学校学习时以及在 YouTube 教程课程等中，许多学习资源都跳过了软件开发的核心基础知识。 我正在考虑回去学习基础知识并扩展到相关领域以脱颖而出。以下是我正在研究的内容：  编程基础知识：  范例（OOP、函数式、声明式与命令式）。 设计原则（SOLID、DRY、KISS）。  设计模式：  常见问题的解决方案（例如，Singleton、Observer）。  干净的代码：  编写可读、可维护和可扩展的代码。  软件架构：  模式（MVC、微服务、DDD）。关键原则（内聚、解耦）。  DevOps 基础知识：  CI/CD 管道基础设施即代码 (IaC) Docker/Kubernetes。云服务 Azure 我的问题：  这些主题是否值得 MERN 开发人员花时间研究？ 它们会帮助我在该领域脱颖而出吗？     提交人    /u/Hot_Form5476   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gsvdzv/how_can_i_differentiate_myself_as_a_mern_developer/</guid>
      <pubDate>Sat, 16 Nov 2024 19:50:09 GMT</pubDate>
    </item>
    <item>
      <title>需要技术联合创始人：AI + 微信/QQ (18 亿用户) [远程办公]</title>
      <link>https://www.reddit.com/r/programming/comments/1gsv09p/technical_cofounder_needed_ai_wechatqq_18b_users/</link>
      <description><![CDATA[微信/QQ AI 助手平台 - 随时可建的机会 寻找技术合作伙伴  市场  微信：每月活跃用户 13 亿以上 QQ：每月活跃用户 5.74 亿以上 中国市场对 AI 助手的需求不断增长 专业 AI 助手领域的竞争有限 2.为什么这个项目现在非常可行 关键基础设施已经存在 LlamaCloud 处理复杂的 RAG 管道： 专业的 RAG 处理基础设施 开箱即用，支持多种文档格式 随用随付模式减少了初始投资 无需构建和维护复杂的 RAG 系统 企业级可靠性和可扩展性 成熟的微信/QQ 集成库： Wechaty：​​已准备好投入生产微信机器人框架 go-cqhttp: 稳定的 QQ 机器人框架 丰富的插件和工具生态系统 活跃的社区支持 文档齐全的 API  商业模式  B2B SaaS 订阅模式 与集成合作伙伴共享收入 定制企业解决方案 如果你觉得有趣，请给我发私信    提交人    /u/Nate_techie   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gsv09p/technical_cofounder_needed_ai_wechatqq_18b_users/</guid>
      <pubDate>Sat, 16 Nov 2024 19:32:24 GMT</pubDate>
    </item>
    <item>
      <title>我很困惑，开发人员如何创建电子商务应用程序并自由从事这些工作</title>
      <link>https://www.reddit.com/r/programming/comments/1gsuylj/how_do_developer_create_ecommerce_applications/</link>
      <description><![CDATA[电子商务是一项艰巨的任务，您必须管理商品、多供应商、他们的商品、退款、争议、更新、促销、交易，基本上重点是有大量的事情。人们如何创建如此复杂的基础设施？    提交人    /u/CoverDue4050   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gsuylj/how_do_developer_create_ecommerce_applications/</guid>
      <pubDate>Sat, 16 Nov 2024 19:30:15 GMT</pubDate>
    </item>
    <item>
      <title>使用错误的编程语言可能会浪费大量时间……</title>
      <link>https://www.reddit.com/r/programming/comments/1gsuxx1/you_could_be_wasting_a_lot_of_time_using_the/</link>
      <description><![CDATA[使用错误的编程语言可能会浪费大量时间。让我们来看看何时使用 matlab、python 和 C++，以及每种语言的优缺点。    提交人    /u/kevinwoodrobotics   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gsuxx1/you_could_be_wasting_a_lot_of_time_using_the/</guid>
      <pubDate>Sat, 16 Nov 2024 19:29:25 GMT</pubDate>
    </item>
    <item>
      <title>通过 Express App 自动收取邮递员</title>
      <link>https://www.reddit.com/r/programming/comments/1gsuvzn/automation_of_postman_collection_via_express_app/</link>
      <description><![CDATA[大家好， 我想分享我对开发社区的贡献。我意识到创建 Postman 集合需要时间和精力，而我们开发人员对此并不感兴趣。我发布了我的第一个 npm 包，如果您能为该工具提供反馈，我将不胜感激。 使用此包，您可以：* 为您的 Express 应用快速生成 Postman 集合 * 避免手动设置的麻烦 * 节省宝贵的 API 文档时间 我非常感谢功能请求和代码贡献。    提交人    /u/habibaa_ff   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gsuvzn/automation_of_postman_collection_via_express_app/</guid>
      <pubDate>Sat, 16 Nov 2024 19:27:01 GMT</pubDate>
    </item>
    <item>
      <title>小马的第一步</title>
      <link>https://www.reddit.com/r/programming/comments/1gste3h/primeros_pasos_en_pony/</link>
      <description><![CDATA[  由    /u/emanuelpeg  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gste3h/primeros_pasos_en_pony/</guid>
      <pubDate>Sat, 16 Nov 2024 18:20:10 GMT</pubDate>
    </item>
    <item>
      <title>时间序列数据遇见区块链：使用 Solidity、Ganache 和 Python 存储时间序列数据</title>
      <link>https://www.reddit.com/r/programming/comments/1gss6ju/timeseries_data_meets_blockchain_storing/</link>
      <description><![CDATA[  由    /u/Active-Fuel-49  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gss6ju/timeseries_data_meets_blockchain_storing/</guid>
      <pubDate>Sat, 16 Nov 2024 17:25:11 GMT</pubDate>
    </item>
    </channel>
</rss>