<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Fri, 11 Oct 2024 15:24:22 GMT</lastBuildDate>
    <item>
      <title>我如何使用 AI 工具来加速我的开发：最近在几周而不是几个月内完成项目！</title>
      <link>https://www.reddit.com/r/programming/comments/1g1c3ka/how_i_used_ai_tools_to_speed_up_my_development/</link>
      <description><![CDATA[  由    /u/nicoconut15  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g1c3ka/how_i_used_ai_tools_to_speed_up_my_development/</guid>
      <pubDate>Fri, 11 Oct 2024 15:12:08 GMT</pubDate>
    </item>
    <item>
      <title>异步 Rust 中的实验</title>
      <link>https://www.reddit.com/r/programming/comments/1g1aevk/an_experiment_in_async_rust/</link>
      <description><![CDATA[  由    /u/aochagavia  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g1aevk/an_experiment_in_async_rust/</guid>
      <pubDate>Fri, 11 Oct 2024 13:57:30 GMT</pubDate>
    </item>
    <item>
      <title>哥本哈根书：在 Web 应用程序中实施身份验证的一般指南</title>
      <link>https://www.reddit.com/r/programming/comments/1g199v7/the_copenhagen_book_general_guideline_on/</link>
      <description><![CDATA[  由    /u/autocmd  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g199v7/the_copenhagen_book_general_guideline_on/</guid>
      <pubDate>Fri, 11 Oct 2024 13:03:14 GMT</pubDate>
    </item>
    <item>
      <title>使用 Dagger.io 和 KitOps 构建 MLOps 管道</title>
      <link>https://www.reddit.com/r/programming/comments/1g196kb/building_an_mlops_pipeline_with_daggerio_and/</link>
      <description><![CDATA[  由    /u/iamjessew  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g196kb/building_an_mlops_pipeline_with_daggerio_and/</guid>
      <pubDate>Fri, 11 Oct 2024 12:59:10 GMT</pubDate>
    </item>
    <item>
      <title>Facebook 如何通过软件负载均衡器支持十亿用户</title>
      <link>https://www.reddit.com/r/programming/comments/1g18hzy/how_facebook_was_able_to_support_a_billion_users/</link>
      <description><![CDATA[  由    /u/sdxyz42  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g18hzy/how_facebook_was_able_to_support_a_billion_users/</guid>
      <pubDate>Fri, 11 Oct 2024 12:22:51 GMT</pubDate>
    </item>
    <item>
      <title>结构化并发的实用会话类型</title>
      <link>https://www.reddit.com/r/programming/comments/1g17iti/practical_session_types_for_structured_concurrency/</link>
      <description><![CDATA[大家好！我很乐意分享我制作的一些东西！ 一段时间以来，我一直对线性逻辑和会话类型着迷，但很遗憾它们并没有真正应用于实践。关于如何通过这种方式使并发变得结构化和健壮，有很多精彩的研究，以下是我推荐的一些论文：  命题作为会话 Par 意味着并行：乘法线性逻辑证明作为并发函数程序 线性逻辑中的客户端 - 服务器会话 会话类型重新审视  原因似乎是很难设计出以符合人体工程学且易于使用的方式运用这些概念的库，甚至是语言。 所以，这是我试图做得更好的想法。让我向你展示一个我制作的新库，我毫不掩饰地称之为“par”。  Crates.io： https://crates.io/crates/par GitHub： https://github.com/faiface/par  让我知道你的想法！如果您想加入并做出贡献，我们也非常欢迎您！ 特点  指定完整的并发协议 - 排序、分支、递归、高阶模式。 类型检查协议遵守 - 实现期望，履行义务。 死锁自由 - 静态排除循环通信。 多个并发参与者。 非常适合 Rust 的类型系统：  使用 enum 进行选择。 对循环协议的类型使用递归。  建立在 async/.await 之上。运行时不可知。 人体工程学设计 — 例如。 atm.choose(Operation::CheckBalance) 模块中的标准模式：  队列 — 按顺序传输任意数量的项目。 服务器 — 同时处理动态数量的客户端。  没有不安全！ 可访问的文档作为学习工具。     提交人    /u/faiface   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g17iti/practical_session_types_for_structured_concurrency/</guid>
      <pubDate>Fri, 11 Oct 2024 11:27:07 GMT</pubDate>
    </item>
    <item>
      <title>Go 迭代器的乐趣</title>
      <link>https://www.reddit.com/r/programming/comments/1g15syx/fun_with_go_iterators/</link>
      <description><![CDATA[  由    /u/FoxInTheRedBox  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g15syx/fun_with_go_iterators/</guid>
      <pubDate>Fri, 11 Oct 2024 09:27:54 GMT</pubDate>
    </item>
    <item>
      <title>JavaScript 已损坏！</title>
      <link>https://www.reddit.com/r/programming/comments/1g15d6b/javascript_is_broken/</link>
      <description><![CDATA[  由   提交  /u/HolidayCartoonist323   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g15d6b/javascript_is_broken/</guid>
      <pubDate>Fri, 11 Oct 2024 08:53:37 GMT</pubDate>
    </item>
    <item>
      <title>我使用AI生成了基于Electron的NoteBookLLM中文MVP版本</title>
      <link>https://www.reddit.com/r/programming/comments/1g154c6/i_use_ai_generated_a_notebookllm_chinese_mvp/</link>
      <description><![CDATA[  由    /u/Unusual_Feeling2306  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g154c6/i_use_ai_generated_a_notebookllm_chinese_mvp/</guid>
      <pubDate>Fri, 11 Oct 2024 08:34:41 GMT</pubDate>
    </item>
    <item>
      <title>使用 VirusShare 数据构建可视化恶意软件数据集，并将机器学习基线模型与 CoAtNet 进行比较以进行恶意软件分类 | 2024 年第 16 届机器学习和计算国际会议论文集</title>
      <link>https://www.reddit.com/r/programming/comments/1g14htz/building_visual_malware_dataset_using_virusshare/</link>
      <description><![CDATA[  由    /u/Own_Fun_3531  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g14htz/building_visual_malware_dataset_using_virusshare/</guid>
      <pubDate>Fri, 11 Oct 2024 07:45:30 GMT</pubDate>
    </item>
    <item>
      <title>Eileen Uchitelle - 模块化单体的神话 - Rails World 2024</title>
      <link>https://www.reddit.com/r/programming/comments/1g1434f/eileen_uchitelle_the_myth_of_the_modular_monolith/</link>
      <description><![CDATA[  由    /u/omko  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g1434f/eileen_uchitelle_the_myth_of_the_modular_monolith/</guid>
      <pubDate>Fri, 11 Oct 2024 07:13:09 GMT</pubDate>
    </item>
    <item>
      <title>CSS 注入：风险与预防</title>
      <link>https://www.reddit.com/r/programming/comments/1g141dg/css_injection_risks_and_prevention/</link>
      <description><![CDATA[  由    /u/Latter-Dust8587  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g141dg/css_injection_risks_and_prevention/</guid>
      <pubDate>Fri, 11 Oct 2024 07:09:22 GMT</pubDate>
    </item>
    <item>
      <title>EngLang：一种免费的开源编程语言，注重简单性和可读性</title>
      <link>https://www.reddit.com/r/programming/comments/1g13znf/englang_a_free_opensource_programming_language/</link>
      <description><![CDATA[  由    /u/thehakankarim  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g13znf/englang_a_free_opensource_programming_language/</guid>
      <pubDate>Fri, 11 Oct 2024 07:05:40 GMT</pubDate>
    </item>
    <item>
      <title>为互联网冲浪者和研究人员提供个性化的人工智能助手。</title>
      <link>https://www.reddit.com/r/programming/comments/1g13hvj/personalized_ai_assistant_for_internet_surfers/</link>
      <description><![CDATA[  由    /u/Uiqueblhats  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g13hvj/personalized_ai_assistant_for_internet_surfers/</guid>
      <pubDate>Fri, 11 Oct 2024 06:28:51 GMT</pubDate>
    </item>
    <item>
      <title>PostgreSQL 流复制（WAL）；它是什么以及如何配置它</title>
      <link>https://www.reddit.com/r/programming/comments/1g13c0v/postgresql_streaming_replication_wal_what_it_is/</link>
      <description><![CDATA[  由   提交  /u/Grand-Maximum1091   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g13c0v/postgresql_streaming_replication_wal_what_it_is/</guid>
      <pubDate>Fri, 11 Oct 2024 06:16:52 GMT</pubDate>
    </item>
    </channel>
</rss>