<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>电脑编程</description>
    <lastBuildDate>Wed, 07 Aug 2024 03:23:35 GMT</lastBuildDate>
    <item>
      <title>是否有可能构建一个先进的……</title>
      <link>https://www.reddit.com/r/programming/comments/1em1h0o/is_it_possible_to_build_an_advanced/</link>
      <description><![CDATA[我们一群人聚在一起，开发了一个类似于 NeoPets 的东西，只不过是一个应用程序，更现代、商业化程度更低。此外，它也可以通过传统的浏览器网站访问。 很多人都在竞标这个项目——以换取一定比例的游戏所有权或商定的付款条件。 我们的问题是：是否有可能使用 Bubble.io、Adalo、Airtable 等无代码平台成功且可行地构建如此先进的应用程序和网站？！ 很多人都提到这样做，这些听起来很普通、很简单。我们只是想确保这些人知道他们在做什么……    提交人    /u/Puzzled_Nectarine689   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1em1h0o/is_it_possible_to_build_an_advanced/</guid>
      <pubDate>Wed, 07 Aug 2024 03:17:57 GMT</pubDate>
    </item>
    <item>
      <title>初学者理解 JavaScript 作用域和作用域类型的指南。</title>
      <link>https://www.reddit.com/r/programming/comments/1em0tbp/a_beginners_guide_to_understanding_javascript/</link>
      <description><![CDATA[  由    /u/MotorEnvironmental83  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1em0tbp/a_beginners_guide_to_understanding_javascript/</guid>
      <pubDate>Wed, 07 Aug 2024 02:45:13 GMT</pubDate>
    </item>
    <item>
      <title>我所学到的关于技术债务的一切</title>
      <link>https://www.reddit.com/r/programming/comments/1em0lax/everything_i_learned_about_technical_debt/</link>
      <description><![CDATA[  由    /u/____candied_yams____  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1em0lax/everything_i_learned_about_technical_debt/</guid>
      <pubDate>Wed, 07 Aug 2024 02:34:20 GMT</pubDate>
    </item>
    <item>
      <title>为什么你应该避免 Scrum，以及应该怎么做</title>
      <link>https://www.reddit.com/r/programming/comments/1elzbez/why_you_should_avoid_scrum_and_what_to_do_instead/</link>
      <description><![CDATA[  由    /u/hasen-judi  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1elzbez/why_you_should_avoid_scrum_and_what_to_do_instead/</guid>
      <pubDate>Wed, 07 Aug 2024 01:32:00 GMT</pubDate>
    </item>
    <item>
      <title>闰秒令人厌恶</title>
      <link>https://www.reddit.com/r/programming/comments/1elz8c7/leap_seconds_are_an_abomination/</link>
      <description><![CDATA[随着我们即将迎来负闰秒的消息不断传出，我想提一下闰秒的概念，一般来说......它试图解决什么问题，以及它是否能很好地解决这些问题。 （显然不是很好，在我看来......） 根据我的经验（我曾编写并使用过用于机器学习、预测等的时间序列库），闰秒提供的唯一优势/能力是，如果将自 1970 年 1 月 1 日以来的秒数乘以 24×3600，您将得到当天的第 1 秒。 就是这样。 这是它的唯一功能：如果您想要实际日期，您仍然必须查阅日历库，该库维护闰日、闰年等的查找表。 （顺便说一句，我对闰日和闰年没有意见。） 但是，既然我们无论如何都必须使用日期库，为什么不将调整合并到日历日的秒开始时间而不是时间本身呢？这一切似乎都过时了，从更简单的时间，一种后门软件更新到每个应用程序使用的隐式“日期库”。此外，如今我们以 UTC 毫秒和微秒为单位工作。 我认为软件更新（这里定义的闰秒）调整系统范围的日历日和小时定义的基本思想是正确的。只是通过闰秒来实现它，虽然更快捷，但完全是错误的。既然它仍然是一个更新，无论如何，我们不妨以另一种方式实现它。让标准机构偶尔重新调整一天开始时的秒数（例如，1970 年 1 月 1 日被定义为零），如果需要的话，可以精确到毫秒，而不是摆弄&quot;绝对&quot;时间测量方法，我们将更新我们的日期/日历库（无论是否使用闰秒，我们都必须这样做。） PS，如果系统时间减少，我正在研究的一个新项目就会中断。现在，我必须使用自定义适配器将未来的负闰秒添加到系统时间中。    提交人    /u/gnahraf   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1elz8c7/leap_seconds_are_an_abomination/</guid>
      <pubDate>Wed, 07 Aug 2024 01:28:03 GMT</pubDate>
    </item>
    <item>
      <title>Python 基础知识：使用 PyTermTk 进行 TUI - 直播</title>
      <link>https://www.reddit.com/r/programming/comments/1elxab5/python_basics_tui_in_with_pytermtk_live_stream/</link>
      <description><![CDATA[  由    /u/drinkincode  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1elxab5/python_basics_tui_in_with_pytermtk_live_stream/</guid>
      <pubDate>Tue, 06 Aug 2024 23:57:52 GMT</pubDate>
    </item>
    <item>
      <title>s2stoo：努力以连贯的方式打乱音乐，以实现卓越的脑波互动和重放潜力</title>
      <link>https://www.reddit.com/r/programming/comments/1elx3ve/s2stoo_an_effort_at_coherently_scrambling_music/</link>
      <description><![CDATA[  由    /u/InitialLong3468  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1elx3ve/s2stoo_an_effort_at_coherently_scrambling_music/</guid>
      <pubDate>Tue, 06 Aug 2024 23:49:43 GMT</pubDate>
    </item>
    <item>
      <title>JVM 如何为字符串分配和管理内存</title>
      <link>https://www.reddit.com/r/programming/comments/1elwcz6/how_jvm_allocates_and_manages_memory_for_strings/</link>
      <description><![CDATA[  由    /u/bitter-cognac  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1elwcz6/how_jvm_allocates_and_manages_memory_for_strings/</guid>
      <pubDate>Tue, 06 Aug 2024 23:16:25 GMT</pubDate>
    </item>
    <item>
      <title>轻度动态网站的消亡</title>
      <link>https://www.reddit.com/r/programming/comments/1elw2in/the_demise_of_the_mildly_dynamic_website/</link>
      <description><![CDATA[  由    /u/fagnerbrack  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1elw2in/the_demise_of_the_mildly_dynamic_website/</guid>
      <pubDate>Tue, 06 Aug 2024 23:03:59 GMT</pubDate>
    </item>
    <item>
      <title>骆驼.ttf</title>
      <link>https://www.reddit.com/r/programming/comments/1elt3w5/llamattf/</link>
      <description><![CDATA[  由    /u/fagnerbrack  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1elt3w5/llamattf/</guid>
      <pubDate>Tue, 06 Aug 2024 21:01:15 GMT</pubDate>
    </item>
    <item>
      <title>我认为了解 OpenFeature 的程序员还不够多</title>
      <link>https://www.reddit.com/r/programming/comments/1elsome/i_dont_think_enough_programmers_know_about/</link>
      <description><![CDATA[  由    /u/wclarkengineering  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1elsome/i_dont_think_enough_programmers_know_about/</guid>
      <pubDate>Tue, 06 Aug 2024 20:44:08 GMT</pubDate>
    </item>
    <item>
      <title>Rust 的准规则</title>
      <link>https://www.reddit.com/r/programming/comments/1elrbh9/rusts_almostrules/</link>
      <description><![CDATA[  由    /u/simon_o  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1elrbh9/rusts_almostrules/</guid>
      <pubDate>Tue, 06 Aug 2024 19:50:18 GMT</pubDate>
    </item>
    <item>
      <title>使用 Python 编写简单的 Web 服务器：学习套接字编程</title>
      <link>https://www.reddit.com/r/programming/comments/1elqw2k/writing_a_simple_web_server_in_python_learning/</link>
      <description><![CDATA[  由    /u/iximiuz  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1elqw2k/writing_a_simple_web_server_in_python_learning/</guid>
      <pubDate>Tue, 06 Aug 2024 19:32:40 GMT</pubDate>
    </item>
    <item>
      <title>超越传统断路器的弹性</title>
      <link>https://www.reddit.com/r/programming/comments/1elpjjz/resiliency_beyond_the_classic_circuit_breaker/</link>
      <description><![CDATA[  由    /u/marcosfloboreddit  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1elpjjz/resiliency_beyond_the_classic_circuit_breaker/</guid>
      <pubDate>Tue, 06 Aug 2024 18:39:04 GMT</pubDate>
    </item>
    <item>
      <title>Python 在 Tiobe 指数中获得最高评级</title>
      <link>https://www.reddit.com/r/programming/comments/1elovmc/python_scores_its_highest_rating_in_tiobe_index/</link>
      <description><![CDATA[  由    /u/Franco1875  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1elovmc/python_scores_its_highest_rating_in_tiobe_index/</guid>
      <pubDate>Tue, 06 Aug 2024 18:12:53 GMT</pubDate>
    </item>
    </channel>
</rss>