<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Thu, 31 Oct 2024 12:44:29 GMT</lastBuildDate>
    <item>
      <title>Github 引入 sparks</title>
      <link>https://www.reddit.com/r/programming/comments/1ggd62b/github_introduces_sparks/</link>
      <description><![CDATA[  由    /u/Downtown_Ad_9303  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ggd62b/github_introduces_sparks/</guid>
      <pubDate>Thu, 31 Oct 2024 12:21:37 GMT</pubDate>
    </item>
    <item>
      <title>2024 年 CSS 状态结果 | CSS-Tricks</title>
      <link>https://www.reddit.com/r/programming/comments/1ggb04w/state_of_css_2024_results_csstricks/</link>
      <description><![CDATA[  由    /u/Mech_beast001  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ggb04w/state_of_css_2024_results_csstricks/</guid>
      <pubDate>Thu, 31 Oct 2024 10:10:11 GMT</pubDate>
    </item>
    <item>
      <title>为什么 Pascal 值得重新审视</title>
      <link>https://www.reddit.com/r/programming/comments/1gganlz/why_pascal_deserves_a_second_look/</link>
      <description><![CDATA[  由    /u/GroundbreakingIron16  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gganlz/why_pascal_deserves_a_second_look/</guid>
      <pubDate>Thu, 31 Oct 2024 09:44:40 GMT</pubDate>
    </item>
    <item>
      <title>谁会从 JavaScript 的拟议分裂中受益？</title>
      <link>https://www.reddit.com/r/programming/comments/1ggaljn/who_stands_to_benefit_from_a_proposed_split_of/</link>
      <description><![CDATA[  由    /u/scarey102  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ggaljn/who_stands_to_benefit_from_a_proposed_split_of/</guid>
      <pubDate>Thu, 31 Oct 2024 09:40:13 GMT</pubDate>
    </item>
    <item>
      <title>用 Python 编写的素数大杂烩</title>
      <link>https://www.reddit.com/r/programming/comments/1ggake4/a_primes_potpourri_coded_in_python/</link>
      <description><![CDATA[  由    /u/ADavison2560  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ggake4/a_primes_potpourri_coded_in_python/</guid>
      <pubDate>Thu, 31 Oct 2024 09:37:47 GMT</pubDate>
    </item>
    <item>
      <title>使用 Pure Rails 创建 URL 缩短服务</title>
      <link>https://www.reddit.com/r/programming/comments/1ggabxo/create_a_url_shortener_service_with_pure_rails/</link>
      <description><![CDATA[  由    /u/mehdifarsi  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ggabxo/create_a_url_shortener_service_with_pure_rails/</guid>
      <pubDate>Thu, 31 Oct 2024 09:19:32 GMT</pubDate>
    </item>
    <item>
      <title>为什么我不依赖人工智能进行编程（太多）</title>
      <link>https://www.reddit.com/r/programming/comments/1gga472/why_i_dont_rely_on_ai_for_programming_too_much/</link>
      <description><![CDATA[  由    /u/jonas_h  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gga472/why_i_dont_rely_on_ai_for_programming_too_much/</guid>
      <pubDate>Thu, 31 Oct 2024 09:03:12 GMT</pubDate>
    </item>
    <item>
      <title>事件驱动架构中事件的双重性质</title>
      <link>https://www.reddit.com/r/programming/comments/1gg9jsm/the_dual_nature_of_events_in_eventdriven/</link>
      <description><![CDATA[  由    /u/lutzh-reddit  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gg9jsm/the_dual_nature_of_events_in_eventdriven/</guid>
      <pubDate>Thu, 31 Oct 2024 08:18:20 GMT</pubDate>
    </item>
    <item>
      <title>Pylon：使 TypeScript 开发人员能够轻松构建 GraphQL API</title>
      <link>https://www.reddit.com/r/programming/comments/1gg9fds/pylon_enables_typescript_developers_to_easily/</link>
      <description><![CDATA[  由    /u/schettn  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gg9fds/pylon_enables_typescript_developers_to_easily/</guid>
      <pubDate>Thu, 31 Oct 2024 08:08:38 GMT</pubDate>
    </item>
    <item>
      <title>避免 Python 中的循环导入</title>
      <link>https://www.reddit.com/r/programming/comments/1gg8avg/avoiding_circular_imports_in_python/</link>
      <description><![CDATA[  由    /u/python4geeks  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gg8avg/avoiding_circular_imports_in_python/</guid>
      <pubDate>Thu, 31 Oct 2024 06:38:09 GMT</pubDate>
    </item>
    <item>
      <title>掌握表单的 Tailwind CSS</title>
      <link>https://www.reddit.com/r/programming/comments/1gg8885/mastering_tailwind_css_for_forms/</link>
      <description><![CDATA[  由    /u/Latter-Dust8587  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gg8885/mastering_tailwind_css_for_forms/</guid>
      <pubDate>Thu, 31 Oct 2024 06:32:30 GMT</pubDate>
    </item>
    <item>
      <title>blazed.js</title>
      <link>https://www.reddit.com/r/programming/comments/1gg8852/blazedjs/</link>
      <description><![CDATA[大家好！ 介绍 blazed.js！这是一款超快、轻量、高性能的基于承诺的 nodejs http 客户端 它可以执行大量由 nodejs 支持的 http 请求，如 GET、POST、PUT 等 它和其他 axios、got 等一样是基于承诺的 这是我的库 https://www.npmjs.com/package/blazed.js 你可以通过执行以下操作来安装它 npm i blazed.js 如果你们能提供有关这个库的宝贵反馈，我们将不胜感激！ 感谢阅读 :)   由    /u/Flat_Molasses_9715  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gg8852/blazedjs/</guid>
      <pubDate>Thu, 31 Oct 2024 06:32:19 GMT</pubDate>
    </item>
    <item>
      <title>K4 - 新的高性能开源 LSM 树型、事务型、持久型存储引擎</title>
      <link>https://www.reddit.com/r/programming/comments/1gg5q98/k4_new_highperformance_opensource_lsm_tree_based/</link>
      <description><![CDATA[  由    /u/diagraphic  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gg5q98/k4_new_highperformance_opensource_lsm_tree_based/</guid>
      <pubDate>Thu, 31 Oct 2024 03:47:14 GMT</pubDate>
    </item>
    <item>
      <title>math4devs.com：数学符号及其 JavaScript 等效符号的列表。</title>
      <link>https://www.reddit.com/r/programming/comments/1gg53cc/math4devscom_list_of_mathematical_symbols_with/</link>
      <description><![CDATA[  由    /u/fagnerbrack  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gg53cc/math4devscom_list_of_mathematical_symbols_with/</guid>
      <pubDate>Thu, 31 Oct 2024 03:11:54 GMT</pubDate>
    </item>
    <item>
      <title>刚刚了解了为什么 Rust 不允许多个可变引用。和我想象的不一样。</title>
      <link>https://www.reddit.com/r/programming/comments/1gg4yc1/just_learned_why_rust_doesnt_allow_multiple/</link>
      <description><![CDATA[首先我要说的是，我是一名专业的 Web 开发人员，在学校里从未真正学习过系统级语言。因此，我一直在学习系统级开发和一些嵌入式开发。这有点困难，因为我在学习高级语言时对底层工作原理做出了假设。不得不放弃所有的假设。 但我自学了 C 的基础知识，并制作了一个非常基本的 http 服务器，只有单线程，不是很令人印象深刻。然后我开始学习 Rust。先学习 C 确实很有帮助，但我仍然有很多差距。我终于弄清楚了 C 中的几乎所有内存安全问题以及 rust 如何防止这些问题，但有一个我不明白。为什么即使在单个线程中也不能有多个可变引用。  起初我以为这与某种并发问题有关，也许从技术上讲，在单线程上下文中它并不不安全，Rust 确实有一个很好的解决方案。而且由于 Rust 的规则非常详尽，它只是出于这个原因阻止了它。 但最终它归结为 C 中的一个概念，称为限制指针。我不会假装完全理解限制指针，但基本上一个受限指针告诉编译器不会使用其他指针来引用底层数据。所以我在 Rust 中了解到所有引用都相当于 C 中的受限指针。现在我理解了规则，但我仍然不明白为什么。 因此，受限指针实际上用于优化编译器的输出程序集。它只是为了优化，但 rust 强制执行这种优化。无论如何，这完全公平，我从来没有遇到过需要多个可变引用的情况哈哈！ 还有其他一些我们不能有多个可变的原因。例如，Rust 枚举类型可以保存值，这会导致引用的一些特殊问题。以及迭代器无效。但是，如果引用不被视为受限制，这两个问题似乎都可以解决。但我可能是错的。很想听听其他人对此的看法！ 不确定其他人是否有与我相同的问题，但是在阅读了 Rustonomicon 的部分内容后，我花了几个月的时间才偶然发现 C 中的受限指针，我可能理解了 20% 哈哈。希望这能帮助其他人踏上他们的旅程！    提交人    /u/zdxqvr   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1gg4yc1/just_learned_why_rust_doesnt_allow_multiple/</guid>
      <pubDate>Thu, 31 Oct 2024 03:04:10 GMT</pubDate>
    </item>
    </channel>
</rss>