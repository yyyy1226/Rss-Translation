<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Wed, 19 Feb 2025 18:30:35 GMT</lastBuildDate>
    <item>
      <title>零通道</title>
      <link>https://www.reddit.com/r/programming/comments/1itc69p/nil_channels_in_go/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/foxintheredbox     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1itc69p/nil_channels_in_go/</guid>
      <pubDate>Wed, 19 Feb 2025 18:09:19 GMT</pubDate>
    </item>
    <item>
      <title>实际上，当不完美的系统良好时：布鲁斯基的有损时间表</title>
      <link>https://www.reddit.com/r/programming/comments/1itbrd8/when_imperfect_systems_are_good_actually_blueskys/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/swdevtest     [link]  ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1itbrd8/when_imperfect_systems_are_good_actually_blueskys/</guid>
      <pubDate>Wed, 19 Feb 2025 17:53:10 GMT</pubDate>
    </item>
    <item>
      <title>在这里分叉最好的选择吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1itb83x/is_forking_the_best_option_here/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  强制性链接的链接大声笑 大家好，我是基于shopify &lt;的电子商务业务的开发人员/p&gt; 我在Shopify开发方面经验丰富，并与我们中一些最大的企业合作，因此开发不是一个问题 ，但它们在世界各地都有多个网站，所有网站都几乎是基于内容差异的相同区域 第一件事是第一件事，我为其所有不同网站设​​置了多个存储库，每个网站的一个存储库与已连接到实时网站的主要分支机构，以便我可以跟踪所有CMS/Admin Change 现在是我构建的任何功能，我必须将其推出到所有网站上，然后手动复制粘贴代码，然后将其推入真正重复且耗时的分支。 我是考虑编写一个python脚本，该脚本检查提交并将更改推入新分支，但我不确定这是否可以工作 我想到的下一个解决方案是有一个储备库，并派遣其余部分存储库以便我只能将更改拉到分支机构，因为Git只会在分叉分支的最新提交（对吗？） 之后跟踪更改所以请建议你解决方案  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/_brownguy     [链接]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1itb83x/is_forking_the_best_option_here/</guid>
      <pubDate>Wed, 19 Feb 2025 17:32:07 GMT</pubDate>
    </item>
    <item>
      <title>构建，记录并确保Laravel Rest API</title>
      <link>https://www.reddit.com/r/programming/comments/1itb00w/build_document_and_secure_a_laravel_rest_api/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/zuploadrian     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1itb00w/build_document_and_secure_a_laravel_rest_api/</guid>
      <pubDate>Wed, 19 Feb 2025 17:23:24 GMT</pubDate>
    </item>
    <item>
      <title>StarPath是55个字节</title>
      <link>https://www.reddit.com/r/programming/comments/1itaqal/starpath_is_55_bytes/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/hell__mood     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1itaqal/starpath_is_55_bytes/</guid>
      <pubDate>Wed, 19 Feb 2025 17:13:15 GMT</pubDate>
    </item>
    <item>
      <title>运行时间的安全：Rust的内存控制系统解释了</title>
      <link>https://www.reddit.com/r/programming/comments/1itaioq/safety_at_run_time_rusts_memory_control_system/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  生锈的编程语言与用于系统编程的其他语言共享许多概念。例如，Rust将分配的存储器与分配的内存与堆分配的内存区分。它还确保在范围之外不可用的范围内声明的变量。 ，但生锈以自己的方式实现了这些行为，对内存管理的工作方式产生了重大影响。 Rust使用各种所有权隐喻来描述计划一生中如何创建，保留和处置资源。学习如何与Rust的所有权概念一起工作是Rust程序员的重要仪式。该快速指南将帮助您入门。  2025年2月  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/choobeen     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1itaioq/safety_at_run_time_rusts_memory_control_system/</guid>
      <pubDate>Wed, 19 Feb 2025 17:05:04 GMT</pubDate>
    </item>
    <item>
      <title>Airlink  - 基于网络的文件共享平台</title>
      <link>https://www.reddit.com/r/programming/comments/1it9ntj/airlink_a_webbased_filesharing_platform/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我已经创建了Airlink，这是一个基于Web的应用程序，允许在同一网络上的设备之间快速且安全的文件传输。无需第三方应用程序 - 仅打开Web界面并立即开始共享文件。 让我知道您的想法！  &lt;！ -  sc_on-&gt;＆&gt;＆ ＃32;提交由＆＃32; /u/u/adityasinh-sodha     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1it9ntj/airlink_a_webbased_filesharing_platform/</guid>
      <pubDate>Wed, 19 Feb 2025 16:31:16 GMT</pubDate>
    </item>
    <item>
      <title>为什么AI不属于测试运行时的任何地方</title>
      <link>https://www.reddit.com/r/programming/comments/1it9jji/why_ai_doesnt_belong_anywhere_close_to_the_test/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/samdrian     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1it9jji/why_ai_doesnt_belong_anywhere_close_to_the_test/</guid>
      <pubDate>Wed, 19 Feb 2025 16:26:38 GMT</pubDate>
    </item>
    <item>
      <title>阀门释放团队要塞2代码</title>
      <link>https://www.reddit.com/r/programming/comments/1it96gr/valve_releases_team_fortress_2_code/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/u/ol/old-man-of-the-cpp      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1it96gr/valve_releases_team_fortress_2_code/</guid>
      <pubDate>Wed, 19 Feb 2025 16:12:11 GMT</pubDate>
    </item>
    <item>
      <title>后记中的俄罗斯方块</title>
      <link>https://www.reddit.com/r/programming/comments/1it8t2e/tetris_in_postscript/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/dull_replacement8890      [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1it8t2e/tetris_in_postscript/</guid>
      <pubDate>Wed, 19 Feb 2025 15:57:31 GMT</pubDate>
    </item>
    <item>
      <title>Openai宣布了新的Performance Benchmark，Swe-Lancer</title>
      <link>https://www.reddit.com/r/programming/comments/1it8lj2/openai_announces_new_performance_benchmark/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  昨天Openai宣布了一个新的基准，SWE-Lancer，它针对实际UPWORK任务评估模型性能。 “最佳性能Claude 3.5十四行诗的型号在SWE-Lancer Diamond套装上赚了208,050美元，并解决了IC SWE问题的26.2％；但是，其大多数解决方案都是不正确的，值得信赖的部署需要更高的可靠性。 https://arxiv.org/pdf/2502.12115    &lt;！ - sc_on-&gt;＆＃32;提交由＆＃32; /u/u/yunglaravel     [link]  ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1it8lj2/openai_announces_new_performance_benchmark/</guid>
      <pubDate>Wed, 19 Feb 2025 15:48:53 GMT</pubDate>
    </item>
    <item>
      <title>AI和我们工作中无法解决的问题</title>
      <link>https://www.reddit.com/r/programming/comments/1it8kbx/ai_and_the_unsolvable_problems_in_our_work/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/knightdenight     ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1it8kbx/ai_and_the_unsolvable_problems_in_our_work/</guid>
      <pubDate>Wed, 19 Feb 2025 15:47:33 GMT</pubDate>
    </item>
    <item>
      <title>GO中的依赖注入：编写模块化和可测试代码</title>
      <link>https://www.reddit.com/r/programming/comments/1it8jk1/dependency_injection_in_go_writing_modular/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://medium.com/@linkwithjoydeep/deppentency-indoction-in-go-writing-modull-testable-code-a29071ece484”&gt; [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1it8jk1/dependency_injection_in_go_writing_modular/</guid>
      <pubDate>Wed, 19 Feb 2025 15:46:39 GMT</pubDate>
    </item>
    <item>
      <title>教程：在10H中创建一个完整的Beat'em Up游戏</title>
      <link>https://www.reddit.com/r/programming/comments/1it8gck/tutorial_create_a_full_beatem_up_game_in_godot_in/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/m_ologin     [link]  ＆＃32;  &lt;a href =“ https://www.reddit.com/r/programming/comments/1it8gck/tutorial_create_a_full_full_bueatl_beatem_up_up_game_game_in_godot_in/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1it8gck/tutorial_create_a_full_beatem_up_game_in_godot_in/</guid>
      <pubDate>Wed, 19 Feb 2025 15:42:57 GMT</pubDate>
    </item>
    <item>
      <title>批处理LLM呼叫便宜50％，因此我构建并开放了一个打字稿SDK，用于统一模型提供商的LLM批处理API呼叫</title>
      <link>https://www.reddit.com/r/programming/comments/1it82gb/batching_llm_calls_is_50_cheaper_so_i_built_and/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/younnfox4903     [link]  ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1it82gb/batching_llm_calls_is_50_cheaper_so_i_built_and/</guid>
      <pubDate>Wed, 19 Feb 2025 15:26:47 GMT</pubDate>
    </item>
    </channel>
</rss>