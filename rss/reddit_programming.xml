<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Tue, 15 Apr 2025 12:50:37 GMT</lastBuildDate>
    <item>
      <title>轻轻熟练的自我监督学习变得容易|图像分类教程</title>
      <link>https://www.reddit.com/r/programming/comments/1jzqzgy/selfsupervised_learning_made_easy_with/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在本教程中，我们将向您展示如何使用LightlyTrain在您自己的数据集中训练模型进行图像分类。 自我求助的学习（SSL）是重塑计算机视觉，就像llms一样。新推出的轻型框架使AI团队（不需要博士学位）赋予了AI团队的能力，可以轻松地在自己的数据集上训练强大的，公正的基础模型。      让我们深入研究SSL如何使用LightlyTrain的SSL如何使用传统方法来想象传统方法击败了训练更好的计算机模型，以提供更好的计算机视觉模型，并提供单个图像。它使用未标记的图像或视频数据来启动模型培训。   我们将介绍如何加载模型，为您的数据集修改它，使用训练的权重和运行图像  我们将介绍如何加载模型，为您的数据集修改它，预先处理图像，加载训练的权重和运行图像    使用图像        LightlyTrain Page： https://www.lightly.ai/lightlytrain?utm_source=youtube&amp;utm_medium = description＆amp;utm_campaign=eran=eran    LightlyTrain github： https://github.com/lightly-ai/lightly-train/lightly-train  href =“ https://docs.lighly.ai/train/stable/index.html”&gt; https://docs.lightly.ai/train/train/stable/stable/index.html  href =“ https://discord.gg/xvnjw94”&gt; https://discord.gg/xvnjw94               数据集  第2部分：如何预先训练您的自定义数据集   第3部分：如何使用新的数据集/类别/类别    部分4  in  find of Blog         href =“ https://eranfeit.net/self-superist-learning-made-made-with-lightlytrain-image-image-classification-tutorial/”&gt; https：//eranfeit.net/sellafe.net/selfsely-supervised-lightly-made-lightly-with-image-callain-image-callage-callage-callage-callage-callage-callage-pallassific-pallassific-pallassifical-plassification-plassification-plassificati中等用户的代码说明： https://medium.com/@feitgemel/self-supersevised-learning-made-made-with-lightlytrain-image-classification-tutorial-3b4a82b92d68     您可以找到更多教程，并在此处加入我的新闻通讯： https://eranfeit.net/                 href =“ https://youtu.be/wlpuw3ggpqo＆amp;list=uulftiftiwjjhah6bviswkljum9sg”&gt; https://youtu.be/mhxx22hhy29uc p.amp; list = ulist = ulist = ulist = uulftiwjjjjjjhah6bvis       享受  eran   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/feitgemel     [link]        [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1jzqzgy/selfsupervised_learning_made_easy_with/</guid>
      <pubDate>Tue, 15 Apr 2025 12:45:32 GMT</pubDate>
    </item>
    <item>
      <title>PHP基金会执行董事的见解</title>
      <link>https://www.reddit.com/r/programming/comments/1jzp7gf/insights_from_the_php_foundation_executive/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/mkurzeja      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1jzp7gf/insights_from_the_php_foundation_executive/</guid>
      <pubDate>Tue, 15 Apr 2025 11:13:28 GMT</pubDate>
    </item>
    <item>
      <title>🚪没有令牌没有进入 - 在node.js中实现登录，JWT auth和受保护的路由（我的后端系列的博客3）</title>
      <link>https://www.reddit.com/r/programming/comments/1jzotdv/no_entry_without_a_token_implementing_login_jwt/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://medium.com/nextgen-dev-labs/no-entry-without-a-token-implementing-login-jwt-auth-protected-routes-routes-in-node-js-js-js-js-4f7b64983df9”&gt;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1jzotdv/no_entry_without_a_token_implementing_login_jwt/</guid>
      <pubDate>Tue, 15 Apr 2025 10:51:07 GMT</pubDate>
    </item>
    <item>
      <title>呼吁在React Advanced London的演讲</title>
      <link>https://www.reddit.com/r/programming/comments/1jzom32/call_for_presentations_at_react_advanced_london/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/gitnationorg      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1jzom32/call_for_presentations_at_react_advanced_london/</guid>
      <pubDate>Tue, 15 Apr 2025 10:38:40 GMT</pubDate>
    </item>
    <item>
      <title>Postgresql的缺点</title>
      <link>https://www.reddit.com/r/programming/comments/1jzolb8/the_cons_of_postgresql/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/vladmihalceacom       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1jzolb8/the_cons_of_postgresql/</guid>
      <pubDate>Tue, 15 Apr 2025 10:37:10 GMT</pubDate>
    </item>
    <item>
      <title>总体白痴 /第1部分 - 什么是OOP？</title>
      <link>https://www.reddit.com/r/programming/comments/1jzodo9/oop_for_total_idiots_part_1_what_is_oop/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/dasive-nobody8906       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1jzodo9/oop_for_total_idiots_part_1_what_is_oop/</guid>
      <pubDate>Tue, 15 Apr 2025 10:23:08 GMT</pubDate>
    </item>
    <item>
      <title>AI偷了我的编码工作……还是做到了？ 🤔</title>
      <link>https://www.reddit.com/r/programming/comments/1jzmopr/ai_stole_my_coding_job_or_did_it/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/the_random_coder        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1jzmopr/ai_stole_my_coding_job_or_did_it/</guid>
      <pubDate>Tue, 15 Apr 2025 08:24:26 GMT</pubDate>
    </item>
    <item>
      <title>产品开发一年 - 可视化</title>
      <link>https://www.reddit.com/r/programming/comments/1jzlw03/one_year_of_product_development_visualised/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  下面的视频是使用数据可视化工具创建的，该数据可视化工具在视觉上捕获了过去一年中P53上的代码开发的旅程，我们的营销AI Assistant用尖端的LLMS构建。 我想分享此可视化，因为它代表了无数的深夜和无休止的辩论和无休止的辩论。每个提交都讲述了一个故事。 观看我们的代码库的演变是相当不错的过山车。在几周中，我们完全重组了核心组件和几天，当一个错误修复了数小时的协作故障排除。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/marco_genoma       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1jzlw03/one_year_of_product_development_visualised/</guid>
      <pubDate>Tue, 15 Apr 2025 07:28:34 GMT</pubDate>
    </item>
    <item>
      <title>使用ESP32 CAM和Edge Impulse开始对象检测</title>
      <link>https://www.reddit.com/r/programming/comments/1jzkzh0/get_started_with_object_detection_using_esp32_cam/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/programmer-bose      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1jzkzh0/get_started_with_object_detection_using_esp32_cam/</guid>
      <pubDate>Tue, 15 Apr 2025 06:26:53 GMT</pubDate>
    </item>
    <item>
      <title>史蒂文斯（Stevens）：可入职的AI助手，使用单个SQLITE桌子和少数Cron Jobs</title>
      <link>https://www.reddit.com/r/programming/comments/1jzk9e6/stevens_a_hackable_ai_assistant_using_a_single/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/avinassh   href =“ https://www.geoffreylitt.com/2025/04/04/12/how-i-made-a-a-ase-riseful-ai-ai-abasistant-with-one-sqlite-table-table-table-and-and-hand-hand-full-cron-jobs”&gt; [link]          [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1jzk9e6/stevens_a_hackable_ai_assistant_using_a_single/</guid>
      <pubDate>Tue, 15 Apr 2025 05:38:27 GMT</pubDate>
    </item>
    <item>
      <title>每条代码中的人类</title>
      <link>https://www.reddit.com/r/programming/comments/1jzk79x/the_humanity_in_each_line_of_code/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/bhupeshv      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1jzk79x/the_humanity_in_each_line_of_code/</guid>
      <pubDate>Tue, 15 Apr 2025 05:34:21 GMT</pubDate>
    </item>
    <item>
      <title>python中9级异步编程</title>
      <link>https://www.reddit.com/r/programming/comments/1jza9y9/9_levels_of_asynchronous_programming_in_python/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/wyhjsbyb      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1jza9y9/9_levels_of_asynchronous_programming_in_python/</guid>
      <pubDate>Mon, 14 Apr 2025 21:15:59 GMT</pubDate>
    </item>
    <item>
      <title>Cl-Yasboi：常见LISP的另一个入门样机板</title>
      <link>https://www.reddit.com/r/programming/comments/1jza1dw/clyasboi_yet_another_starter_boilerplate_for/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/deepcelibatevalue       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1jza1dw/clyasboi_yet_another_starter_boilerplate_for/</guid>
      <pubDate>Mon, 14 Apr 2025 21:05:32 GMT</pubDate>
    </item>
    <item>
      <title>C stdlib不是螺纹安全，甚至安全的生锈也没有拯救我们</title>
      <link>https://www.reddit.com/r/programming/comments/1jz8jrw/c_stdlib_isnt_threadsafe_and_even_safe_rust_didnt/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/uctive-fuel-49     [link]   ＆＃32;  &lt;a href =“ https://www.reddit.com/r/programming/comments/1jz8jrw/c_stdlib_isnt_threadsafe_even_even_safe_safe_rust_didnt/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1jz8jrw/c_stdlib_isnt_threadsafe_and_even_safe_rust_didnt/</guid>
      <pubDate>Mon, 14 Apr 2025 20:05:18 GMT</pubDate>
    </item>
    <item>
      <title>展示我的github cli扩展名：gh-unpushed  - 轻松看到您的本地提交尚未被推动</title>
      <link>https://www.reddit.com/r/programming/comments/1jz8e2t/showcasing_my_github_cli_extension_ghunpushed/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿！我做了一个小的github cli扩展名，称为  gh-unpushed  。它显示了您当前分支的提交，但尚未被推。 会喜欢我没有想到的任何反馈，想法，功能，边缘案例。 让我知道您的想法！   ＆＃32;提交由＆＃32; /u/u/wield-award986     link link”   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1jz8e2t/showcasing_my_github_cli_extension_ghunpushed/</guid>
      <pubDate>Mon, 14 Apr 2025 19:59:17 GMT</pubDate>
    </item>
    </channel>
</rss>