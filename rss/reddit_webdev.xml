<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：webdev</title>
    <link>https://www.reddit.com/r/webdev/new</link>
    <description>一个致力于所有 Web 开发相关事宜的社区：前端和后端。如需更多与设计相关的问题，请访问 /r/web_design。</description>
    <lastBuildDate>Fri, 22 Nov 2024 01:51:51 GMT</lastBuildDate>
    <item>
      <title>允许用户在我的平台上充电的最安全的方式？</title>
      <link>https://www.reddit.com/r/webdev/comments/1gwugje/safest_way_to_allow_users_to_charge_on_my_platform/</link>
      <description><![CDATA[我想让用户在我的平台上赚钱。金额不大，每次销售不到 5 美元。 上次我这样做时，诈骗者使用我的网站收取被盗的卡号，我损失了 2k。 部分原因是我没有限制他们可以收取的金额。 但这次我想格外小心，所以先寻求建议。 上次我使用 stripe connect 直接支付每笔交易。 这次我可以托管这笔钱，直到没有争议为止。 但我对所有想法都持开放态度。最好的方法是什么，不要搬起石头砸自己的脚    提交人    /u/IAmRules   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1gwugje/safest_way_to_allow_users_to_charge_on_my_platform/</guid>
      <pubDate>Fri, 22 Nov 2024 00:07:44 GMT</pubDate>
    </item>
    <item>
      <title>CAP 定理的图解证明</title>
      <link>https://www.reddit.com/r/webdev/comments/1gwt1il/an_illustrated_proof_of_the_cap_theorem/</link>
      <description><![CDATA[  由    /u/fagnerbrack  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1gwt1il/an_illustrated_proof_of_the_cap_theorem/</guid>
      <pubDate>Thu, 21 Nov 2024 23:03:40 GMT</pubDate>
    </item>
    <item>
      <title>开发笔记本电脑</title>
      <link>https://www.reddit.com/r/webdev/comments/1gwspkr/development_laptop/</link>
      <description><![CDATA[嗨，我想买一台笔记本电脑用于 Web 开发，主要是 NodeJS、Adobe Photoshop、Figma 等；尽管我也想顺利运行 Android Studio。 问题是我的预算，我最多只能花 500 美元 大多数人都推荐 Mac，推荐 Apple Silicone 等等。 但是它们太贵了，我不知道 2015 年的 Mac 能否做到这一点…… 我还看到有人在笔记本电脑上使用 Ryzen 时说它的坏话，以及奇怪的优化，因为它们很快就会发热，超过 101 摄氏度。 请提出建议？提前谢谢    提交人    /u/Frequent_Badger5523   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1gwspkr/development_laptop/</guid>
      <pubDate>Thu, 21 Nov 2024 22:48:51 GMT</pubDate>
    </item>
    <item>
      <title>这是下降趋势还是软件开发永久降级了？</title>
      <link>https://www.reddit.com/r/webdev/comments/1gwreq9/is_this_a_dip_or_is_software_development_perma/</link>
      <description><![CDATA[过去两年，大量开发人员失业。这是暂时现象，还是暂时的？ 开发也是受人工智能影响最大的领域之一。“写作工作受到的影响最大，其次是软件、应用程序和 Web 开发工作，以及工程工作。”来源：https://www.fastcompany.com/91229781/ai-is-already-taking-jobs-research-shows-routine-tasks-are-the-first-to-go 我是一名拥有 3 年经验的 Web 开发人员，我无法决定明年是否应该报名参加 AI 课程（1 年）或转行做贸易。    提交人    /u/pahel_miracle13   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1gwreq9/is_this_a_dip_or_is_software_development_perma/</guid>
      <pubDate>Thu, 21 Nov 2024 21:52:26 GMT</pubDate>
    </item>
    <item>
      <title>部署缓慢导致会议</title>
      <link>https://www.reddit.com/r/webdev/comments/1gwq7lu/slow_deployment_causes_meetings/</link>
      <description><![CDATA[        提交人    /u/fagnerbrack   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1gwq7lu/slow_deployment_causes_meetings/</guid>
      <pubDate>Thu, 21 Nov 2024 21:01:44 GMT</pubDate>
    </item>
    <item>
      <title>有没有功能强大且现代的 FOSS 可以替代 WordPress？</title>
      <link>https://www.reddit.com/r/webdev/comments/1gwq1u2/is_there_any_powerful_and_modern_foss_alternative/</link>
      <description><![CDATA[搜索了一段时间后，我被 Statamic 所吸引，从纸面上看，它似乎很残酷。但后来我意识到它们并不是 FOSS，这是一个巨大的骗局。 :( 它们确实让我感觉像是我一直在寻找的东西 (*) 因此，我最终选择了 WP 的所有史前或非 FOSS 替代品，它们数量众多，但并不惊人。 通常，作为一个危险信号，如果他们有一个主网站，即 .com，那么这是一个坏主意 它们可能是 FOSS，但如果他们在主页上直接销售他们的 CLOUD 服务，那么也是一个坏主意 我一直认为，即使是 wordpress . com（营利性选项）也是一个糟糕的想法，但至少它是一个与 .org 版本不同的域名。 在理想的世界中，社区会提供一些东西，为社区服务。这个想法不仅是消费它，而且是贡献。 也许这是不可能的。 对于像 WP（CMS）这样的东西，我的意思是 *脚注/TL;TR：我说的是现代自托管 CMS FOSS 解决方案。JIC。    提交人    /u/SirLouen   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1gwq1u2/is_there_any_powerful_and_modern_foss_alternative/</guid>
      <pubDate>Thu, 21 Nov 2024 20:55:05 GMT</pubDate>
    </item>
    <item>
      <title>当您刚开始开发时，最难理解的概念是什么？</title>
      <link>https://www.reddit.com/r/webdev/comments/1gwq1cz/what_was_the_hardest_concept_to_understand_when/</link>
      <description><![CDATA[回顾过去，什么概念最难掌握，什么最终使它变得清晰（如果有的话）？ Web 开发非常庞大，需要学习的东西很多。也许您曾为 javascript（闭包、递归、oop 等）或浏览器（语义 html、css 选择器、居中对齐元素等）或开发环境（linux、node、docker 等）而苦恼。 我仍然认为递归非常令人费解。我总是以某种方式忘记基本情况，整个事情就崩溃了。    提交人    /u/qvstio   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1gwq1cz/what_was_the_hardest_concept_to_understand_when/</guid>
      <pubDate>Thu, 21 Nov 2024 20:54:31 GMT</pubDate>
    </item>
    <item>
      <title>我之前在这里看到过关于 Bruno（开源和原生 git Postman 替代品）的帖子。今天的发布相当不错。以这样的速度，我真的怀疑我是否会再使用 Postman 或其他任何东西。</title>
      <link>https://www.reddit.com/r/webdev/comments/1gwpxup/ive_seen_posts_on_bruno_open_source_and_native/</link>
      <description><![CDATA[  由    /u/uncomfortableiterati  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1gwpxup/ive_seen_posts_on_bruno_open_source_and_native/</guid>
      <pubDate>Thu, 21 Nov 2024 20:50:30 GMT</pubDate>
    </item>
    <item>
      <title>投资者希望在 2025 年第二季度末推出一款可用的产品</title>
      <link>https://www.reddit.com/r/webdev/comments/1gwpats/investor_wants_a_working_product_by_end_of_q2_2025/</link>
      <description><![CDATA[我正在开展一个项目，投资者期望该项目能开发出一款理论上可以在 2025 年第二季度末上市的软件产品。我正在尝试规划实现这一目标的最佳方法，同时平衡速度、质量和灵活性，我很乐意满足大家的期望，甚至更多。 理想情况下，我们希望从坚实的基础开始，避免过多的技术债务，并且仍然能够快速行动以满足投资者的最后期限。  对于在类似时间范围内交付的团队，您是否选择了更具迭代性的发布流程（即发布早期测试版）还是在与用户测试之前就专注于构建大多数功能？ 我们应该多早优先考虑自动化测试和持续集成 (CI)？您建议在 MVP 阶段在多大程度上投资测试基础设施？     提交人    /u/Abouttreefittyy   [link] [comments]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1gwpats/investor_wants_a_working_product_by_end_of_q2_2025/</guid>
      <pubDate>Thu, 21 Nov 2024 20:23:48 GMT</pubDate>
    </item>
    <item>
      <title>无法在 Google 上验证在线公司</title>
      <link>https://www.reddit.com/r/webdev/comments/1gwnwxs/not_possible_to_verify_online_company_on_google/</link>
      <description><![CDATA[难以在 Google 上验证公司网站 - 提交了三个视频，现在他们说无法验证在线公司。 其他人也发现了这个问题吗？如果是，您如何设法出现在丰富的结果中？     由   提交  /u/BeginningPie9001   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1gwnwxs/not_possible_to_verify_online_company_on_google/</guid>
      <pubDate>Thu, 21 Nov 2024 19:27:07 GMT</pubDate>
    </item>
    <item>
      <title>为 Hackathon 组建团队</title>
      <link>https://www.reddit.com/r/webdev/comments/1gwnw8f/building_a_team_for_hackathon/</link>
      <description><![CDATA[大家好。我正在为正在进行的黑客马拉松组建一支团队，我们正在寻找熟练的前端和后端开发人员加入我们！我们已经有一个开发团队，但我们需要有人帮助设计一个用户友好的界面，并在视觉上使我们的项目栩栩如生。 如果您有前端开发经验并且很高兴合作，请给我发消息！ 请直接给我发消息。谢谢    提交人    /u/improvemental   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1gwnw8f/building_a_team_for_hackathon/</guid>
      <pubDate>Thu, 21 Nov 2024 19:26:18 GMT</pubDate>
    </item>
    <item>
      <title>Mac 应用程序开发人员的薪水比 Web 开发人员高吗？</title>
      <link>https://www.reddit.com/r/webdev/comments/1gwnt2j/are_mac_app_developers_paid_more_than_web/</link>
      <description><![CDATA[忘掉跨国公司，让我们关注小型或中型公司，主要是自由职业领域。 作为客户，您向 Mac 应用程序开发人员或 Web 开发人员支付的费用更多吗？ 我相信是 Mac，因为与 Mac 开发人员相比，Web 开发人员的数量非常多。 就上下文而言，我是一名全栈开发人员，有 2 年的前端经验和 2 年的全栈经验，所以总共 4 年。我在 Upwork 上做了 3 年的自由职业者，每小时赚 22 美元。 您的意见将帮助我决定是否应该从事 Mac 开发。 编辑： 我的意思是每小时 22 美元，而不是每月。抱歉。    提交人    /u/PassengerStunning208   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1gwnt2j/are_mac_app_developers_paid_more_than_web/</guid>
      <pubDate>Thu, 21 Nov 2024 19:22:34 GMT</pubDate>
    </item>
    <item>
      <title>线上科技活动</title>
      <link>https://www.reddit.com/r/webdev/comments/1gwnsqv/online_tech_events/</link>
      <description><![CDATA[您知道任何即将举行的线上活动吗？    提交人    /u/Fraan3D   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1gwnsqv/online_tech_events/</guid>
      <pubDate>Thu, 21 Nov 2024 19:22:11 GMT</pubDate>
    </item>
    <item>
      <title>Safari 技术预览版 208 发行说明</title>
      <link>https://www.reddit.com/r/webdev/comments/1gwnaee/release_notes_for_safari_technology_preview_208/</link>
      <description><![CDATA[  由    /u/feross  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1gwnaee/release_notes_for_safari_technology_preview_208/</guid>
      <pubDate>Thu, 21 Nov 2024 19:01:39 GMT</pubDate>
    </item>
    <item>
      <title>如何在 Dockerized Raspberry Pi 上使用 Flask 和 React 可靠地收集串行端口数据？</title>
      <link>https://www.reddit.com/r/webdev/comments/1gwm948/how_to_reliably_collect_serial_port_data_with/</link>
      <description><![CDATA[我有一个 Flask 服务器和一个 React 前端，用于运行从串行端口收集数据的实验。设置如下： 完整应用程序已 dockerized 并托管在 Raspberry Pi 上。 React 前端功能：  启动计时器按钮：开始为实验收集数据。触发后端 API 端点，开始将数据存储在缓冲区数组中。 结束计时器按钮：停止数据收集。触发后端 API 端点，停止将数据存储在缓冲区中并将其返回到前端。  要求：  一次只能有一个用户。 一次只能进行一个实验。 服务器上只能有一个计时器处于活动状态。 接受在前端显示数据的延迟。  面临的问题：  串行端口有时会断开连接，导致数据丢失。 套接字连接偶尔会断开，也会导致数据丢失。  建议的解决方案：  使用 TimescaleDB 存储收集的数据。 将存储的数据从 TimescaleDB 转发到前端。  问题：  解决这些问题和改善整体设置的最佳方法是什么？ 每次计时器启动时都应该建立串行端口连接，还是应该保持持久连接？&lt;​​/li&gt;     提交人    /u/Fun-Individual-2428   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1gwm948/how_to_reliably_collect_serial_port_data_with/</guid>
      <pubDate>Thu, 21 Nov 2024 18:21:47 GMT</pubDate>
    </item>
    </channel>
</rss>